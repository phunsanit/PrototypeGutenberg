import { DisclosureContentOptions, DisclosureContentHTMLProps } from "../Disclosure/DisclosureContent";
import { TooltipStateReturn } from "./TooltipState";
export declare type TooltipOptions = DisclosureContentOptions & Pick<Partial<TooltipStateReturn>, "unstable_popoverRef" | "unstable_popoverStyles"> & {
    /**
     * Whether or not the dialog should be rendered within `Portal`.
     * It's `true` by default if `modal` is `true`.
     */
    unstable_portal?: boolean;
};
export declare type TooltipHTMLProps = DisclosureContentHTMLProps;
export declare type TooltipProps = TooltipOptions & TooltipHTMLProps;
export declare const useTooltip: {
    (options?: TooltipOptions | undefined, htmlProps?: import("..").BoxHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): import("..").BoxHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: TooltipOptions, htmlProps: import("..").BoxHTMLProps) => TooltipOptions;
};
export declare const Tooltip: import("reakit-system/src/createComponent").Component<"div", TooltipOptions>;

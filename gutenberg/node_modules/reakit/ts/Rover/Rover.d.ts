import { ClickableOptions, ClickableHTMLProps } from "../Clickable/Clickable";
import { unstable_IdOptions, unstable_IdHTMLProps } from "../Id/Id";
import { RoverStateReturn } from "./RoverState";
export declare type RoverOptions = ClickableOptions & unstable_IdOptions & Pick<Partial<RoverStateReturn>, "orientation" | "unstable_moves"> & Pick<RoverStateReturn, "stops" | "currentId" | "register" | "unregister" | "move" | "next" | "previous" | "first" | "last"> & {
    /**
     * Element ID.
     */
    stopId?: string;
};
export declare type RoverHTMLProps = ClickableHTMLProps & unstable_IdHTMLProps;
export declare type RoverProps = RoverOptions & RoverHTMLProps;
export declare const useRover: {
    (options?: RoverOptions | undefined, htmlProps?: import("..").TabbableHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): import("..").TabbableHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: RoverOptions, htmlProps: import("..").TabbableHTMLProps) => RoverOptions;
};
export declare const Rover: import("reakit-system/src/createComponent").Component<"button", RoverOptions>;

import { DisclosureContentOptions, DisclosureContentHTMLProps } from "../Disclosure/DisclosureContent";
import { unstable_IdOptions, unstable_IdHTMLProps } from "../Id/Id";
import { TabStateReturn } from "./TabState";
export declare type TabPanelOptions = DisclosureContentOptions & unstable_IdOptions & Pick<TabStateReturn, "selectedId" | "registerPanel" | "unregisterPanel" | "panels" | "items"> & {
    /**
     * Tab's id
     */
    tabId?: string;
};
export declare type TabPanelHTMLProps = DisclosureContentHTMLProps & unstable_IdHTMLProps;
export declare type TabPanelProps = TabPanelOptions & TabPanelHTMLProps;
export declare const useTabPanel: {
    (options?: TabPanelOptions | undefined, htmlProps?: import("..").BoxHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): import("..").BoxHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: TabPanelOptions, htmlProps: import("..").BoxHTMLProps) => TabPanelOptions;
};
export declare const TabPanel: import("reakit-system/src/createComponent").Component<"div", TabPanelOptions>;

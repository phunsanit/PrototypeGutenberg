import { BoxOptions, BoxHTMLProps } from "../Box/Box";
export declare type TabbableOptions = BoxOptions & {
    /**
     * Same as the HTML attribute.
     */
    disabled?: boolean;
    /**
     * When an element is `disabled`, it may still be `focusable`. It works
     * similarly to `readOnly` on form elements. In this case, only
     * `aria-disabled` will be set.
     */
    focusable?: boolean;
};
export declare type TabbableHTMLProps = BoxHTMLProps & {
    disabled?: boolean;
};
export declare type TabbableProps = TabbableOptions & TabbableHTMLProps;
export declare const useTabbable: {
    (options?: TabbableOptions | undefined, htmlProps?: TabbableHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): TabbableHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: TabbableOptions, htmlProps: TabbableHTMLProps) => TabbableOptions;
};
export declare const Tabbable: import("reakit-system/src/createComponent").Component<"div", TabbableOptions>;

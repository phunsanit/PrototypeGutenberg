import { TabbableOptions, TabbableHTMLProps } from "../Tabbable";
import { unstable_CompositeStateReturn } from "./CompositeState";
export declare type unstable_CompositeOptions = TabbableOptions & Pick<Partial<unstable_CompositeStateReturn>, "baseId" | "unstable_virtual" | "currentId" | "orientation" | "unstable_moves" | "wrap" | "groups"> & Pick<unstable_CompositeStateReturn, "items" | "setCurrentId" | "first" | "last" | "move">;
export declare type unstable_CompositeHTMLProps = TabbableHTMLProps;
export declare type unstable_CompositeProps = unstable_CompositeOptions & unstable_CompositeHTMLProps;
export declare const unstable_useComposite: {
    (options?: unstable_CompositeOptions | undefined, htmlProps?: TabbableHTMLProps | undefined, unstable_ignoreUseOptions?: boolean | undefined): TabbableHTMLProps;
    __keys: readonly any[];
    __useOptions: (options: unstable_CompositeOptions, htmlProps: TabbableHTMLProps) => unstable_CompositeOptions;
};
export declare const unstable_Composite: import("reakit-system/src/createComponent").Component<"div", unstable_CompositeOptions>;

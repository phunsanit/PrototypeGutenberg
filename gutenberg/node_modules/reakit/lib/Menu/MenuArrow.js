'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var createComponent = require('reakit-system/createComponent');
var createHook = require('reakit-system/createHook');
require('../Box/Box.js');
require('../_rollupPluginBabelHelpers-b18c4e5e.js');
require('react');
require('reakit-utils/useForkRef');
require('reakit-utils/isButton');
require('reakit-warning');
require('reakit-utils/useLiveRef');
require('reakit-utils/isSelfTarget');
require('reakit-utils/useIsomorphicEffect');
require('reakit-utils/hasFocusWithin');
require('reakit-utils/isPortalEvent');
require('../Tabbable/Tabbable.js');
require('../Clickable/Clickable.js');
require('reakit-utils/useSealedState');
require('reakit-system/useCreateElement');
require('reakit-utils/createOnKeyDown');
require('reakit-utils/getDocument');
require('reakit-utils/fireEvent');
require('reakit-utils/fireKeyboardEvent');
require('reakit-utils/applyState');
require('../Id/IdProvider.js');
require('../Id/IdState.js');
require('../CompositeState-969c2a43.js');
require('reakit-utils/getActiveElement');
require('../Composite/Composite.js');
require('../Group/Group.js');
require('../Id/Id.js');
require('../Composite/CompositeGroup.js');
require('reakit-utils/isTextField');
require('reakit-utils/tabbable');
require('../setTextFieldValue-fc0d2717.js');
require('../Composite/CompositeItem.js');
require('../Composite/CompositeItemWidget.js');
require('../Disclosure/DisclosureState.js');
require('reakit-utils/removeItemFromArray');
require('../MenuContext-45622aab.js');
require('../Dialog/DialogState.js');
require('@popperjs/core');
require('reakit-utils/shallowEqual');
require('../Popover/PopoverState.js');
require('./MenuBarState.js');
var MenuState = require('./MenuState.js');
var PopoverArrow = require('../Popover/PopoverArrow.js');

var useMenuArrow = createHook.createHook({
  name: "MenuArrow",
  compose: PopoverArrow.usePopoverArrow,
  useState: MenuState.useMenuState
});
var MenuArrow = createComponent.createComponent({
  as: "div",
  memo: true,
  useHook: useMenuArrow
});

exports.MenuArrow = MenuArrow;
exports.useMenuArrow = useMenuArrow;

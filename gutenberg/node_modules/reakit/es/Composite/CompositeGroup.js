import { createComponent } from 'reakit-system/createComponent';
import { createHook } from 'reakit-system/createHook';
import '../Box/Box.js';
import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-419c3ce6.js';
import { useRef } from 'react';
import { useForkRef } from 'reakit-utils/useForkRef';
import { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';
import 'reakit-utils/useSealedState';
import 'reakit-utils/applyState';
import '../Id/IdProvider.js';
import '../Id/IdState.js';
import { u as unstable_useCompositeState } from '../CompositeState-0df9c8f7.js';
import { useGroup } from '../Group/Group.js';
import { unstable_useId } from '../Id/Id.js';

var unstable_useCompositeGroup = createHook({
  name: "CompositeGroup",
  compose: [useGroup, unstable_useId],
  useState: unstable_useCompositeState,
  useProps: function useProps(options, _ref) {
    var htmlRef = _ref.ref,
        htmlProps = _objectWithoutPropertiesLoose(_ref, ["ref"]);

    var ref = useRef(null);
    var id = options.id; // We need this to be called before CompositeItems' register

    useIsomorphicEffect(function () {
      var _options$registerGrou;

      if (!id) return undefined;
      (_options$registerGrou = options.registerGroup) === null || _options$registerGrou === void 0 ? void 0 : _options$registerGrou.call(options, {
        id: id,
        ref: ref
      });
      return function () {
        var _options$unregisterGr;

        (_options$unregisterGr = options.unregisterGroup) === null || _options$unregisterGr === void 0 ? void 0 : _options$unregisterGr.call(options, id);
      };
    }, [id, options.registerGroup, options.unregisterGroup]);
    return _objectSpread2({
      ref: useForkRef(ref, htmlRef)
    }, htmlProps);
  }
});
var unstable_CompositeGroup = createComponent({
  as: "div",
  useHook: unstable_useCompositeGroup
});

export { unstable_CompositeGroup, unstable_useCompositeGroup };

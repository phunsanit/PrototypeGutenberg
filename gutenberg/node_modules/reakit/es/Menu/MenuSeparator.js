import { createComponent } from 'reakit-system/createComponent';
import { createHook } from 'reakit-system/createHook';
import '../Box/Box.js';
import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-419c3ce6.js';
import 'react';
import 'reakit-utils/useForkRef';
import 'reakit-utils/isButton';
import 'reakit-warning';
import 'reakit-utils/useLiveRef';
import 'reakit-utils/isSelfTarget';
import 'reakit-utils/useIsomorphicEffect';
import 'reakit-utils/hasFocusWithin';
import 'reakit-utils/isPortalEvent';
import '../Tabbable/Tabbable.js';
import '../Clickable/Clickable.js';
import 'reakit-utils/useSealedState';
import 'reakit-system/useCreateElement';
import 'reakit-utils/createOnKeyDown';
import 'reakit-utils/getDocument';
import 'reakit-utils/fireEvent';
import 'reakit-utils/fireKeyboardEvent';
import 'reakit-utils/applyState';
import '../Id/IdProvider.js';
import '../Id/IdState.js';
import '../CompositeState-0df9c8f7.js';
import 'reakit-utils/getActiveElement';
import '../Composite/Composite.js';
import '../Group/Group.js';
import '../Id/Id.js';
import '../Composite/CompositeGroup.js';
import 'reakit-utils/isTextField';
import 'reakit-utils/tabbable';
import '../setTextFieldValue-78ab5d56.js';
import '../Composite/CompositeItem.js';
import '../Composite/CompositeItemWidget.js';
import '../Disclosure/DisclosureState.js';
import 'reakit-utils/removeItemFromArray';
import '../MenuContext-eb1aa1c9.js';
import '../Dialog/DialogState.js';
import '@popperjs/core';
import 'reakit-utils/shallowEqual';
import '../Popover/PopoverState.js';
import './MenuBarState.js';
import { useMenuState } from './MenuState.js';
import { useSeparator } from '../Separator/Separator.js';

var useMenuSeparator = createHook({
  name: "MenuSeparator",
  compose: useSeparator,
  useState: useMenuState,
  useOptions: function useOptions(_ref) {
    var _ref$orientation = _ref.orientation,
        orientation = _ref$orientation === void 0 ? "vertical" : _ref$orientation,
        options = _objectWithoutPropertiesLoose(_ref, ["orientation"]);

    return _objectSpread2({
      orientation: orientation === "vertical" ? "horizontal" : "vertical"
    }, options);
  }
});
var MenuSeparator = createComponent({
  as: "hr",
  memo: true,
  useHook: useMenuSeparator
});

export { MenuSeparator, useMenuSeparator };

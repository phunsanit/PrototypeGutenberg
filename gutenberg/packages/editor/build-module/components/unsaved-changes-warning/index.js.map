{"version":3,"sources":["@wordpress/editor/src/components/unsaved-changes-warning/index.js"],"names":["__","Component","withSelect","UnsavedChangesWarning","arguments","warnIfUnsavedChanges","bind","window","addEventListener","removeEventListener","event","isEditedPostDirty","props","returnValue","select"],"mappings":";;;;;;;;;;;AAAA;;;AAGA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;IAEMC,qB;;;;;AACL,mCAAc;AAAA;;AAAA;;AACb,+BAAUC,SAAV;AACA,UAAKC,oBAAL,GAA4B,MAAKA,oBAAL,CAA0BC,IAA1B,+BAA5B;AAFa;AAGb;;;;wCAEmB;AACnBC,MAAAA,MAAM,CAACC,gBAAP,CAAyB,cAAzB,EAAyC,KAAKH,oBAA9C;AACA;;;2CAEsB;AACtBE,MAAAA,MAAM,CAACE,mBAAP,CAA4B,cAA5B,EAA4C,KAAKJ,oBAAjD;AACA;AAED;;;;;;;;;;yCAOsBK,K,EAAQ;AAAA,UACrBC,iBADqB,GACC,KAAKC,KADN,CACrBD,iBADqB;;AAG7B,UAAKA,iBAAiB,EAAtB,EAA2B;AAC1BD,QAAAA,KAAK,CAACG,WAAN,GAAoBb,EAAE,CACrB,8DADqB,CAAtB;AAGA,eAAOU,KAAK,CAACG,WAAb;AACA;AACD;;;6BAEQ;AACR,aAAO,IAAP;AACA;;;;EAlCkCZ,S;;AAqCpC,eAAeC,UAAU,CAAE,UAAEY,MAAF;AAAA,SAAgB;AAC1C;AACA;AACA;AACA;AACAH,IAAAA,iBAAiB,EAAEG,MAAM,CAAE,aAAF,CAAN,CAAwBH;AALD,GAAhB;AAAA,CAAF,CAAV,CAMRR,qBANQ,CAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\n\nclass UnsavedChangesWarning extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.warnIfUnsavedChanges = this.warnIfUnsavedChanges.bind( this );\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener( 'beforeunload', this.warnIfUnsavedChanges );\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener( 'beforeunload', this.warnIfUnsavedChanges );\n\t}\n\n\t/**\n\t * Warns the user if there are unsaved changes before leaving the editor.\n\t *\n\t * @param {Event} event `beforeunload` event.\n\t *\n\t * @return {?string} Warning prompt message, if unsaved changes exist.\n\t */\n\twarnIfUnsavedChanges( event ) {\n\t\tconst { isEditedPostDirty } = this.props;\n\n\t\tif ( isEditedPostDirty() ) {\n\t\t\tevent.returnValue = __(\n\t\t\t\t'You have unsaved changes. If you proceed, they will be lost.'\n\t\t\t);\n\t\t\treturn event.returnValue;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nexport default withSelect( ( select ) => ( {\n\t// We need to call the selector directly in the listener to avoid race\n\t// conditions with `BrowserURL` where `componentDidUpdate` gets the\n\t// new value of `isEditedPostDirty` before this component does,\n\t// causing this component to incorrectly think a trashed post is still dirty.\n\tisEditedPostDirty: select( 'core/editor' ).isEditedPostDirty,\n} ) )( UnsavedChangesWarning );\n"]}
{"version":3,"sources":["@wordpress/editor/src/components/post-title/index.native.js"],"names":["PostTitle","prevProps","props","isSelected","isAnyBlockSelected","onUnselect","innerRef","onSelect","value","onChange","plainText","content","mode","tagName","valueToInsert","html","placeholder","style","title","focusedBorderColor","borderStyle","isDimmed","decodedPlaceholder","borderColor","styles","titleContainer","dimmed","onBlur","onUpdate","onPaste","onEnterPress","Component","select","isPostTitleSelected","getSelectedBlockClientId","getBlockRootClientId","selectedId","selectionIsNested","dispatch","undo","redo","togglePostTitleSelection","clearSelectedBlock","insertDefaultBlock","undefined","onUndo","onRedo","withInstanceId","withFocusOutside"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\nimport { isEmpty } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport {\n\t__experimentalRichText as RichText,\n\tcreate,\n\tinsert,\n} from '@wordpress/rich-text';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { withFocusOutside } from '@wordpress/components';\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { pasteHandler } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nclass PostTitle extends Component {\n\tcomponentDidUpdate( prevProps ) {\n\t\t// Unselect if any other block is selected\n\t\tif (\n\t\t\tthis.props.isSelected &&\n\t\t\t! prevProps.isAnyBlockSelected &&\n\t\t\tthis.props.isAnyBlockSelected\n\t\t) {\n\t\t\tthis.props.onUnselect();\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( this.props.innerRef ) {\n\t\t\tthis.props.innerRef( this );\n\t\t}\n\t}\n\n\thandleFocusOutside() {\n\t\tthis.props.onUnselect();\n\t}\n\n\tfocus() {\n\t\tthis.props.onSelect();\n\t}\n\n\tonPaste( { value, onChange, plainText } ) {\n\t\tconst content = pasteHandler( {\n\t\t\tplainText,\n\t\t\tmode: 'INLINE',\n\t\t\ttagName: 'p',\n\t\t} );\n\n\t\tif ( typeof content === 'string' ) {\n\t\t\tconst valueToInsert = create( { html: content } );\n\t\t\tonChange( insert( value, valueToInsert ) );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tplaceholder,\n\t\t\tstyle,\n\t\t\ttitle,\n\t\t\tfocusedBorderColor,\n\t\t\tborderStyle,\n\t\t\tisDimmed,\n\t\t} = this.props;\n\n\t\tconst decodedPlaceholder = decodeEntities( placeholder );\n\t\tconst borderColor = this.props.isSelected\n\t\t\t? focusedBorderColor\n\t\t\t: 'transparent';\n\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tstyles.titleContainer,\n\t\t\t\t\tborderStyle,\n\t\t\t\t\t{ borderColor },\n\t\t\t\t\tisDimmed && styles.dimmed,\n\t\t\t\t] }\n\t\t\t\taccessible={ ! this.props.isSelected }\n\t\t\t\taccessibilityLabel={\n\t\t\t\t\tisEmpty( title )\n\t\t\t\t\t\t? /* translators: accessibility text. empty post title. */\n\t\t\t\t\t\t  __( 'Post title. Empty' )\n\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t/* translators: accessibility text. %s: text content of the post title. */\n\t\t\t\t\t\t\t\t__( 'Post title. %s' ),\n\t\t\t\t\t\t\t\ttitle\n\t\t\t\t\t\t  )\n\t\t\t\t}\n\t\t\t>\n\t\t\t\t<RichText\n\t\t\t\t\ttagName={ 'p' }\n\t\t\t\t\ttagsToEliminate={ [ 'strong' ] }\n\t\t\t\t\tunstableOnFocus={ this.props.onSelect }\n\t\t\t\t\tonBlur={ this.props.onBlur } // always assign onBlur as a props\n\t\t\t\t\tmultiline={ false }\n\t\t\t\t\tstyle={ style }\n\t\t\t\t\tstyles={ styles }\n\t\t\t\t\tfontSize={ 24 }\n\t\t\t\t\tfontWeight={ 'bold' }\n\t\t\t\t\tdeleteEnter={ true }\n\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\tthis.props.onUpdate( value );\n\t\t\t\t\t} }\n\t\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\t\tplaceholder={ decodedPlaceholder }\n\t\t\t\t\tvalue={ title }\n\t\t\t\t\tonSelectionChange={ () => {} }\n\t\t\t\t\tonEnter={ this.props.onEnterPress }\n\t\t\t\t\tdisableEditingMenu={ true }\n\t\t\t\t\t__unstableIsSelected={ this.props.isSelected }\n\t\t\t\t\t__unstableOnCreateUndoLevel={ () => {} }\n\t\t\t\t></RichText>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select ) => {\n\t\tconst { isPostTitleSelected } = select( 'core/editor' );\n\n\t\tconst { getSelectedBlockClientId, getBlockRootClientId } = select(\n\t\t\t'core/block-editor'\n\t\t);\n\n\t\tconst selectedId = getSelectedBlockClientId();\n\t\tconst selectionIsNested = !! getBlockRootClientId( selectedId );\n\n\t\treturn {\n\t\t\tisAnyBlockSelected: !! selectedId,\n\t\t\tisSelected: isPostTitleSelected(),\n\t\t\tisDimmed: selectionIsNested,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { undo, redo, togglePostTitleSelection } = dispatch(\n\t\t\t'core/editor'\n\t\t);\n\n\t\tconst { clearSelectedBlock, insertDefaultBlock } = dispatch(\n\t\t\t'core/block-editor'\n\t\t);\n\n\t\treturn {\n\t\t\tonEnterPress() {\n\t\t\t\tinsertDefaultBlock( undefined, undefined, 0 );\n\t\t\t},\n\t\t\tonUndo: undo,\n\t\t\tonRedo: redo,\n\t\t\tonSelect() {\n\t\t\t\ttogglePostTitleSelection( true );\n\t\t\t\tclearSelectedBlock();\n\t\t\t},\n\t\t\tonUnselect() {\n\t\t\t\ttogglePostTitleSelection( false );\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n\twithFocusOutside\n)( PostTitle );\n"]}
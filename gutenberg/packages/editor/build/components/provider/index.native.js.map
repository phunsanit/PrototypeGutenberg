{"version":3,"sources":["@wordpress/editor/src/components/provider/index.native.js"],"names":["postTypeEntities","name","baseURL","map","postTypeEntity","kind","transientEdits","blocks","selectionStart","selectionEnd","mergedEdits","meta","NativeEditorProvider","arguments","post","props","addEntities","receiveEntityRecords","type","subscriptionParentGetHtml","serializeToNativeAction","subscriptionParentToggleHTMLMode","toggleMode","subscriptionParentSetTitle","payload","editTitle","title","subscriptionParentUpdateHtml","updateHtmlAction","html","subscriptionParentMediaAppend","blockName","mediaType","newBlock","id","mediaId","mediaUrl","indexAfterSelected","selectedBlockIndex","insertionIndex","blockCount","insertBlock","remove","prevProps","isReady","isUnsupportedBlock","unsupportedBlockNames","filter","block","attributes","originalName","RNReactNativeGutenbergBridge","editorDidMount","mode","hasChanges","raw","content","provideToNative_Html","parsed","resetEditorBlocksWithoutUndoLevel","switchMode","clearSelectedBlock","children","Component","select","rootClientId","isEditorReady","__unstableIsEditorReady","getEditorBlocks","getEditedPostAttribute","getEditedPostContent","getEditorMode","getBlockCount","getBlockIndex","getSelectedBlockClientId","selectedBlockClientId","dispatch","editPost","resetEditorBlocks","switchEditorMode","__unstableShouldCreateUndoLevel"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport RNReactNativeGutenbergBridge, {\n\tsubscribeParentGetHtml,\n\tsubscribeParentToggleHTMLMode,\n\tsubscribeUpdateHtml,\n\tsubscribeSetTitle,\n\tsubscribeMediaAppend,\n} from 'react-native-gutenberg-bridge';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport {\n\tparse,\n\tserialize,\n\tgetUnregisteredTypeHandlerName,\n\tcreateBlock,\n} from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { applyFilters } from '@wordpress/hooks';\n\nconst postTypeEntities = [\n\t{ name: 'post', baseURL: '/wp/v2/posts' },\n\t{ name: 'page', baseURL: '/wp/v2/pages' },\n\t{ name: 'attachment', baseURL: '/wp/v2/media' },\n\t{ name: 'wp_block', baseURL: '/wp/v2/blocks' },\n].map( ( postTypeEntity ) => ( {\n\tkind: 'postType',\n\t...postTypeEntity,\n\ttransientEdits: {\n\t\tblocks: true,\n\t\tselectionStart: true,\n\t\tselectionEnd: true,\n\t},\n\tmergedEdits: {\n\t\tmeta: true,\n\t},\n} ) );\n\n/**\n * Internal dependencies\n */\nimport EditorProvider from './index.js';\n\nclass NativeEditorProvider extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\t// Keep a local reference to `post` to detect changes\n\t\tthis.post = this.props.post;\n\t\tthis.props.addEntities( postTypeEntities );\n\t\tthis.props.receiveEntityRecords(\n\t\t\t'postType',\n\t\t\tthis.post.type,\n\t\t\tthis.post\n\t\t);\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.subscriptionParentGetHtml = subscribeParentGetHtml( () => {\n\t\t\tthis.serializeToNativeAction();\n\t\t} );\n\n\t\tthis.subscriptionParentToggleHTMLMode = subscribeParentToggleHTMLMode(\n\t\t\t() => {\n\t\t\t\tthis.toggleMode();\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentSetTitle = subscribeSetTitle( ( payload ) => {\n\t\t\tthis.props.editTitle( payload.title );\n\t\t} );\n\n\t\tthis.subscriptionParentUpdateHtml = subscribeUpdateHtml(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateHtmlAction( payload.html );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentMediaAppend = subscribeMediaAppend(\n\t\t\t( payload ) => {\n\t\t\t\tconst blockName = 'core/' + payload.mediaType;\n\t\t\t\tconst newBlock = createBlock( blockName, {\n\t\t\t\t\tid: payload.mediaId,\n\t\t\t\t\t[ payload.mediaType === 'image'\n\t\t\t\t\t\t? 'url'\n\t\t\t\t\t\t: 'src' ]: payload.mediaUrl,\n\t\t\t\t} );\n\n\t\t\t\tconst indexAfterSelected = this.props.selectedBlockIndex + 1;\n\t\t\t\tconst insertionIndex =\n\t\t\t\t\tindexAfterSelected || this.props.blockCount;\n\n\t\t\t\tthis.props.insertBlock( newBlock, insertionIndex );\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.subscriptionParentGetHtml ) {\n\t\t\tthis.subscriptionParentGetHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentToggleHTMLMode ) {\n\t\t\tthis.subscriptionParentToggleHTMLMode.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentSetTitle ) {\n\t\t\tthis.subscriptionParentSetTitle.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateHtml ) {\n\t\t\tthis.subscriptionParentUpdateHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentMediaAppend ) {\n\t\t\tthis.subscriptionParentMediaAppend.remove();\n\t\t}\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! prevProps.isReady && this.props.isReady ) {\n\t\t\tconst blocks = this.props.blocks;\n\t\t\tconst isUnsupportedBlock = ( { name } ) =>\n\t\t\t\tname === getUnregisteredTypeHandlerName();\n\t\t\tconst unsupportedBlockNames = blocks\n\t\t\t\t.filter( isUnsupportedBlock )\n\t\t\t\t.map( ( block ) => block.attributes.originalName );\n\t\t\tRNReactNativeGutenbergBridge.editorDidMount(\n\t\t\t\tunsupportedBlockNames\n\t\t\t);\n\t\t}\n\t}\n\n\tserializeToNativeAction() {\n\t\tconst title = this.props.title;\n\t\tlet html;\n\n\t\tif ( this.props.mode === 'text' ) {\n\t\t\t// The HTMLTextInput component does not update the store when user is doing changes\n\t\t\t// Let's request the HTML from the component's state directly\n\t\t\thtml = applyFilters( 'native.persist-html' );\n\t\t} else {\n\t\t\thtml = serialize( this.props.blocks );\n\t\t}\n\n\t\tconst hasChanges =\n\t\t\ttitle !== this.post.title.raw || html !== this.post.content.raw;\n\n\t\tRNReactNativeGutenbergBridge.provideToNative_Html(\n\t\t\thtml,\n\t\t\ttitle,\n\t\t\thasChanges\n\t\t);\n\n\t\tif ( hasChanges ) {\n\t\t\tthis.post.title.raw = title;\n\t\t\tthis.post.content.raw = html;\n\t\t}\n\t}\n\n\tupdateHtmlAction( html ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.resetEditorBlocksWithoutUndoLevel( parsed );\n\t}\n\n\ttoggleMode() {\n\t\tconst { mode, switchMode } = this.props;\n\t\t// refresh html content first\n\t\tthis.serializeToNativeAction();\n\t\t// make sure to blur the selected block and dismiss the keyboard\n\t\tthis.props.clearSelectedBlock();\n\t\tswitchMode( mode === 'visual' ? 'text' : 'visual' );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchildren,\n\t\t\tpost, // eslint-disable-line no-unused-vars\n\t\t\t...props\n\t\t} = this.props;\n\n\t\treturn (\n\t\t\t<EditorProvider post={ this.post } { ...props }>\n\t\t\t\t{ children }\n\t\t\t</EditorProvider>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { rootClientId } ) => {\n\t\tconst {\n\t\t\t__unstableIsEditorReady: isEditorReady,\n\t\t\tgetEditorBlocks,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditedPostContent,\n\t\t} = select( 'core/editor' );\n\t\tconst { getEditorMode } = select( 'core/edit-post' );\n\n\t\tconst {\n\t\t\tgetBlockCount,\n\t\t\tgetBlockIndex,\n\t\t\tgetSelectedBlockClientId,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\treturn {\n\t\t\tmode: getEditorMode(),\n\t\t\tisReady: isEditorReady(),\n\t\t\tblocks: getEditorBlocks(),\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tgetEditedPostContent,\n\t\t\tselectedBlockIndex: getBlockIndex( selectedBlockClientId ),\n\t\t\tblockCount: getBlockCount( rootClientId ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( 'core/editor' );\n\t\tconst { clearSelectedBlock, insertBlock } = dispatch(\n\t\t\t'core/block-editor'\n\t\t);\n\t\tconst { switchEditorMode } = dispatch( 'core/edit-post' );\n\t\tconst { addEntities, receiveEntityRecords } = dispatch( 'core' );\n\n\t\treturn {\n\t\t\taddEntities,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\teditTitle( title ) {\n\t\t\t\teditPost( { title } );\n\t\t\t},\n\t\t\treceiveEntityRecords,\n\t\t\tresetEditorBlocksWithoutUndoLevel( blocks ) {\n\t\t\t\tresetEditorBlocks( blocks, {\n\t\t\t\t\t__unstableShouldCreateUndoLevel: false,\n\t\t\t\t} );\n\t\t\t},\n\t\t\tswitchMode( mode ) {\n\t\t\t\tswitchEditorMode( mode );\n\t\t\t},\n\t\t};\n\t} ),\n] )( NativeEditorProvider );\n"]}
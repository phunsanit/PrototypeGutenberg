{"version":3,"sources":["@wordpress/editor/src/components/autosave-monitor/index.js"],"names":["AutosaveMonitor","prevProps","props","isDirty","editsReference","isAutosaveable","isAutosaving","didAutosaveForEditsReference","toggleTimer","isPendingSave","interval","shouldThrottle","pendingSave","clearTimeout","setTimeout","autosave","Component","select","ownProps","getReferenceByDistinctEdits","isEditedPostDirty","isEditedPostAutosaveable","isAutosavingPost","getEditorSettings","autosaveInterval","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;AAGA;;AACA;;AACA;;;;;;IAEaA,e;;;;;;;;;;;;uCACQC,S,EAAY;AAAA,wBAM3B,KAAKC,KANsB;AAAA,UAE9BC,OAF8B,eAE9BA,OAF8B;AAAA,UAG9BC,cAH8B,eAG9BA,cAH8B;AAAA,UAI9BC,cAJ8B,eAI9BA,cAJ8B;AAAA,UAK9BC,YAL8B,eAK9BA,YAL8B,EAQ/B;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAKF,cAAc,KAAKH,SAAS,CAACG,cAAlC,EAAmD;AAClD,aAAKG,4BAAL,GAAoC,KAApC;AACA;;AAED,UAAK,CAAED,YAAF,IAAkBL,SAAS,CAACK,YAAjC,EAAgD;AAC/C,aAAKC,4BAAL,GAAoC,IAApC;AACA;;AAED,UACCN,SAAS,CAACE,OAAV,KAAsBA,OAAtB,IACAF,SAAS,CAACI,cAAV,KAA6BA,cAD7B,IAEAJ,SAAS,CAACG,cAAV,KAA6BA,cAH9B,EAIE;AACD,aAAKI,WAAL,CACCL,OAAO,IAAIE,cAAX,IAA6B,CAAE,KAAKE,4BADrC;AAGA;AACD;;;2CAEsB;AACtB,WAAKC,WAAL,CAAkB,KAAlB;AACA;;;gCAEYC,a,EAAgB;AAAA;;AAAA,yBACiB,KAAKP,KADtB;AAAA,UACpBQ,QADoB,gBACpBA,QADoB;AAAA,+CACVC,cADU;AAAA,UACVA,cADU,sCACO,KADP,0BAG5B;AACA;AACA;AACA;AACA;;AACA,UAAK,CAAEA,cAAF,IAAoB,KAAKC,WAA9B,EAA4C;AAC3CC,QAAAA,YAAY,CAAE,KAAKD,WAAP,CAAZ;AACA,eAAO,KAAKA,WAAZ;AACA;;AAED,UAAKH,aAAa,IAAI,EAAIE,cAAc,IAAI,KAAKC,WAA3B,CAAtB,EAAiE;AAChE,aAAKA,WAAL,GAAmBE,UAAU,CAAE,YAAM;AACpC,UAAA,KAAI,CAACZ,KAAL,CAAWa,QAAX;;AACA,iBAAO,KAAI,CAACH,WAAZ;AACA,SAH4B,EAG1BF,QAAQ,GAAG,IAHe,CAA7B;AAIA;AACD;;;6BAEQ;AACR,aAAO,IAAP;AACA;;;EA9DmCM,kB;;;;eAiEtB,sBAAS,CACvB,sBAAY,UAAEC,MAAF,EAAUC,QAAV,EAAwB;AAAA,gBACKD,MAAM,CAAE,MAAF,CADX;AAAA,MAC3BE,2BAD2B,WAC3BA,2BAD2B;;AAAA,iBAQ/BF,MAAM,CAAE,aAAF,CARyB;AAAA,MAIlCG,iBAJkC,YAIlCA,iBAJkC;AAAA,MAKlCC,wBALkC,YAKlCA,wBALkC;AAAA,MAMlCC,gBANkC,YAMlCA,gBANkC;AAAA,MAOlCC,iBAPkC,YAOlCA,iBAPkC;;AAAA,2BAUyBL,QAVzB,CAU3BR,QAV2B;AAAA,MAU3BA,QAV2B,mCAUhBa,iBAAiB,GAAGC,gBAVJ;AAYnC,SAAO;AACNrB,IAAAA,OAAO,EAAEiB,iBAAiB,EADpB;AAENf,IAAAA,cAAc,EAAEgB,wBAAwB,EAFlC;AAGNjB,IAAAA,cAAc,EAAEe,2BAA2B,EAHrC;AAINb,IAAAA,YAAY,EAAEgB,gBAAgB,EAJxB;AAKNZ,IAAAA,QAAQ,EAARA;AALM,GAAP;AAOA,CAnBD,CADuB,EAqBvB,wBAAc,UAAEe,QAAF,EAAYP,QAAZ;AAAA,SAA4B;AACzCH,IAAAA,QADyC,sBAC9B;AAAA,+BACgDG,QADhD,CACFH,QADE;AAAA,UACFA,QADE,mCACSU,QAAQ,CAAE,aAAF,CAAR,CAA0BV,QADnC;AAEVA,MAAAA,QAAQ;AACR;AAJwC,GAA5B;AAAA,CAAd,CArBuB,CAAT,EA2BVf,eA3BU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\n\nexport class AutosaveMonitor extends Component {\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst {\n\t\t\tisDirty,\n\t\t\teditsReference,\n\t\t\tisAutosaveable,\n\t\t\tisAutosaving,\n\t\t} = this.props;\n\n\t\t// The edits reference is held for comparison to avoid scheduling an\n\t\t// autosave if an edit has not been made since the last autosave\n\t\t// completion. This is assigned when the autosave completes, and reset\n\t\t// when an edit occurs.\n\t\t//\n\t\t// See: https://github.com/WordPress/gutenberg/issues/12318\n\n\t\tif ( editsReference !== prevProps.editsReference ) {\n\t\t\tthis.didAutosaveForEditsReference = false;\n\t\t}\n\n\t\tif ( ! isAutosaving && prevProps.isAutosaving ) {\n\t\t\tthis.didAutosaveForEditsReference = true;\n\t\t}\n\n\t\tif (\n\t\t\tprevProps.isDirty !== isDirty ||\n\t\t\tprevProps.isAutosaveable !== isAutosaveable ||\n\t\t\tprevProps.editsReference !== editsReference\n\t\t) {\n\t\t\tthis.toggleTimer(\n\t\t\t\tisDirty && isAutosaveable && ! this.didAutosaveForEditsReference\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.toggleTimer( false );\n\t}\n\n\ttoggleTimer( isPendingSave ) {\n\t\tconst { interval, shouldThrottle = false } = this.props;\n\n\t\t// By default, AutosaveMonitor will wait for a pause in editing before\n\t\t// autosaving. In other words, its action is \"debounced\".\n\t\t//\n\t\t// The `shouldThrottle` props allows overriding this behaviour, thus\n\t\t// making the autosave action \"throttled\".\n\t\tif ( ! shouldThrottle && this.pendingSave ) {\n\t\t\tclearTimeout( this.pendingSave );\n\t\t\tdelete this.pendingSave;\n\t\t}\n\n\t\tif ( isPendingSave && ! ( shouldThrottle && this.pendingSave ) ) {\n\t\t\tthis.pendingSave = setTimeout( () => {\n\t\t\t\tthis.props.autosave();\n\t\t\t\tdelete this.pendingSave;\n\t\t\t}, interval * 1000 );\n\t\t}\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, ownProps ) => {\n\t\tconst { getReferenceByDistinctEdits } = select( 'core' );\n\n\t\tconst {\n\t\t\tisEditedPostDirty,\n\t\t\tisEditedPostAutosaveable,\n\t\t\tisAutosavingPost,\n\t\t\tgetEditorSettings,\n\t\t} = select( 'core/editor' );\n\n\t\tconst { interval = getEditorSettings().autosaveInterval } = ownProps;\n\n\t\treturn {\n\t\t\tisDirty: isEditedPostDirty(),\n\t\t\tisAutosaveable: isEditedPostAutosaveable(),\n\t\t\teditsReference: getReferenceByDistinctEdits(),\n\t\t\tisAutosaving: isAutosavingPost(),\n\t\t\tinterval,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => ( {\n\t\tautosave() {\n\t\t\tconst { autosave = dispatch( 'core/editor' ).autosave } = ownProps;\n\t\t\tautosave();\n\t\t},\n\t} ) ),\n] )( AutosaveMonitor );\n"]}
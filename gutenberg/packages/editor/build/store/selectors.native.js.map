{"version":3,"sources":["@wordpress/editor/src/store/selectors.native.js"],"names":["isPostTitleSelected","state","postTitle","isSelected","isEditedPostAutosaveable"],"mappings":";;;;;;;;;;;;AAGA;;AAKA;;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAdA;;;;AAKA;;;;AAWA;;;;;;;AAOO,SAASA,mBAAT,CAA8BC,KAA9B,EAAsC;AAC5C,SAAOA,KAAK,CAACC,SAAN,CAAgBC,UAAvB;AACA;AAED;;;;;;;;;;AAQO,IAAMC,wBAAwB,GAAG,kCACvC;AAAA,SACC,UAAUH,KAAV,EAAkB;AACjB;AACA,QAAK,CAAE,qCAAsBA,KAAtB,CAAP,EAAuC;AACtC,aAAO,KAAP;AACA,KAJgB,CAMjB;AACA;AACA;AACA;;;AACA,QAAK,kCAAmBA,KAAnB,CAAL,EAAkC;AACjC,aAAO,IAAP;AACA;;AAED,QAAK,kCAAmBA,KAAnB,CAAL,EAAkC;AACjC,aAAO,IAAP;AACA;;AAED,WAAO,KAAP;AACA,GApBF;AAAA,CADuC,CAAjC","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createRegistrySelector } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport {\n\tisEditedPostDirty,\n\tisEditedPostSaveable,\n\thasChangedContent,\n} from './selectors.js';\n\nexport * from './selectors.js';\n\n/**\n * Returns true if post title is selected.\n *\n * @param {Object} state Global application state.\n *\n * @return {boolean} Whether current post title is selected.\n */\nexport function isPostTitleSelected( state ) {\n\treturn state.postTitle.isSelected;\n}\n\n/**\n * Returns true if the post can be autosaved, or false otherwise.\n *\n * @param {Object} state    Global application state.\n * @param {Object} autosave A raw autosave object from the REST API.\n *\n * @return {boolean} Whether the post can be autosaved.\n */\nexport const isEditedPostAutosaveable = createRegistrySelector(\n\t() =>\n\t\tfunction( state ) {\n\t\t\t// A post must contain a title, an excerpt, or non-empty content to be valid for autosaving.\n\t\t\tif ( ! isEditedPostSaveable( state ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// To avoid an expensive content serialization, use the content dirtiness\n\t\t\t// flag in place of content field comparison against the known autosave.\n\t\t\t// This is not strictly accurate, and relies on a tolerance toward autosave\n\t\t\t// request failures for unnecessary saves.\n\t\t\tif ( hasChangedContent( state ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif ( isEditedPostDirty( state ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n);\n"]}
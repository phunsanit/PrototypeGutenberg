{"version":3,"sources":["@wordpress/core-data/src/actions.js"],"names":["editEntityRecord","undo","redo","saveEntityRecord","saveEditedEntityRecord","castArray","get","isEqual","find","receiveItems","receiveQueriedItems","getKindEntities","DEFAULT_ENTITY_KEY","select","apiFetch","receiveUserQuery","queryID","users","type","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","map","record","status","title","action","receiveCurrentTheme","currentTheme","receiveThemeSupports","themeSupports","receiveEmbedPreview","url","preview","recordId","edits","options","entity","Error","transientEdits","mergedEdits","editedRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","meta","undoIgnore","undoEdit","isUndo","redoEdit","isRedo","__unstableCreateUndoLevel","isAutosave","entityIdKey","entries","evaluatedValue","path","baseURL","persistedRecord","currentUserId","id","autosavePost","data","includes","method","updatedRecord","newRecord","receiveAutosaves","persistedEntity","currentEdits","error","receiveUploadPermissions","hasUploadPermissions","isAllowed","receiveUserPermission","postId","autosaves"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, get, isEqual, find } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, receiveQueriedItems } from './queried-data';\nimport { getKindEntities, DEFAULT_ENTITY_KEY } from './entities';\nimport { select, apiFetch } from './controls';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities  Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity.\n * @param {string}       name            Name of the received entity.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches\n *\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query );\n\t} else {\n\t\taction = receiveItems( records );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @param {Object} themeSupports Theme support for the current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports( themeSupports ) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_SUPPORTS',\n\t\tthemeSupports,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string}  url     URL to preview the embed for.\n * @param {*}       preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string} kind     Kind of the edited entity record.\n * @param {string} name     Name of the edited entity record.\n * @param {number} recordId Record ID of the edited entity record.\n * @param {Object} edits    The edits.\n * @param {Object} options  Options for the edit.\n * @param {boolean} options.undoIgnore Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport function* editEntityRecord( kind, name, recordId, edits, options = {} ) {\n\tconst entity = yield select( 'getEntity', kind, name );\n\tif ( ! entity ) {\n\t\tthrow new Error(\n\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t);\n\t}\n\tconst { transientEdits = {}, mergedEdits = {} } = entity;\n\tconst record = yield select( 'getRawEntityRecord', kind, name, recordId );\n\tconst editedRecord = yield select(\n\t\t'getEditedEntityRecord',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\n\tconst edit = {\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t// so that the property is not considered dirty.\n\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\tconst recordValue = record[ key ];\n\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t: edits[ key ];\n\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\treturn acc;\n\t\t}, {} ),\n\t\ttransientEdits,\n\t};\n\treturn {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...edit,\n\t\tmeta: {\n\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t...edit,\n\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} ),\n\t\t\t},\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport function* undo() {\n\tconst undoEdit = yield select( 'getUndoEdit' );\n\tif ( ! undoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...undoEdit,\n\t\tmeta: {\n\t\t\tisUndo: true,\n\t\t},\n\t};\n}\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport function* redo() {\n\tconst redoEdit = yield select( 'getRedoEdit' );\n\tif ( ! redoEdit ) {\n\t\treturn;\n\t}\n\tyield {\n\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t...redoEdit,\n\t\tmeta: {\n\t\t\tisRedo: true,\n\t\t},\n\t};\n}\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string} kind    Kind of the received entity.\n * @param {string} name    Name of the received entity.\n * @param {Object} record  Record to be saved.\n * @param {Object} options Saving options.\n */\nexport function* saveEntityRecord(\n\tkind,\n\tname,\n\trecord,\n\t{ isAutosave = false } = { isAutosave: false }\n) {\n\tconst entities = yield getKindEntities( kind );\n\tconst entity = find( entities, { kind, name } );\n\tif ( ! entity ) {\n\t\treturn;\n\t}\n\tconst entityIdKey = entity.key || DEFAULT_ENTITY_KEY;\n\tconst recordId = record[ entityIdKey ];\n\n\t// Evaluate optimized edits.\n\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\tif ( typeof value === 'function' ) {\n\t\t\tconst evaluatedValue = value(\n\t\t\t\tyield select( 'getEditedEntityRecord', kind, name, recordId )\n\t\t\t);\n\t\t\tyield editEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\t{\n\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t\trecord[ key ] = evaluatedValue;\n\t\t}\n\t}\n\n\tyield {\n\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\tisAutosave,\n\t};\n\tlet updatedRecord;\n\tlet error;\n\tlet persistedEntity;\n\tlet currentEdits;\n\ttry {\n\t\tconst path = `${ entity.baseURL }${ recordId ? '/' + recordId : '' }`;\n\t\tconst persistedRecord = yield select(\n\t\t\t'getRawEntityRecord',\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\n\t\tif ( isAutosave ) {\n\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t// so the client just sends and receives objects.\n\t\t\tconst currentUser = yield select( 'getCurrentUser' );\n\t\t\tconst currentUserId = currentUser ? currentUser.id : undefined;\n\t\t\tconst autosavePost = yield select(\n\t\t\t\t'getAutosave',\n\t\t\t\tpersistedRecord.type,\n\t\t\t\tpersistedRecord.id,\n\t\t\t\tcurrentUserId\n\t\t\t);\n\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t// So we fallback to the previous autosave and then\n\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t// have a value.\n\t\t\tlet data = { ...persistedRecord, ...autosavePost, ...record };\n\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t( acc, key ) => {\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get( data[ key ], 'raw', data[ key ] );\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{ status: data.status === 'auto-draft' ? 'draft' : data.status }\n\t\t\t);\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t// when its update is requested by the author and the post had\n\t\t\t// draft or auto-draft status.\n\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\tlet newRecord = {\n\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t...data,\n\t\t\t\t\t...updatedRecord,\n\t\t\t\t};\n\t\t\t\tnewRecord = Object.keys( newRecord ).reduce( ( acc, key ) => {\n\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\tif ( [ 'title', 'excerpt', 'content' ].includes( key ) ) {\n\t\t\t\t\t\t// Edits should be the \"raw\" attribute values.\n\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\tnewRecord[ key ],\n\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\tnewRecord[ key ]\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\tpersistedRecord.status === 'auto-draft' &&\n\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\tacc[ key ] = get(\n\t\t\t\t\t\t\tpersistedRecord[ key ],\n\t\t\t\t\t\t\t'raw',\n\t\t\t\t\t\t\tpersistedRecord[ key ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} );\n\t\t\t\tyield receiveEntityRecords(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\tnewRecord,\n\t\t\t\t\tundefined,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tyield receiveAutosaves( persistedRecord.id, updatedRecord );\n\t\t\t}\n\t\t} else {\n\t\t\t// Auto drafts should be converted to drafts on explicit saves and we should not respect their default title,\n\t\t\t// but some plugins break with this behavior so we can't filter it on the server.\n\t\t\tlet data = record;\n\t\t\tif (\n\t\t\t\tkind === 'postType' &&\n\t\t\t\tpersistedRecord &&\n\t\t\t\tpersistedRecord.status === 'auto-draft'\n\t\t\t) {\n\t\t\t\tif ( ! data.status ) {\n\t\t\t\t\tdata = { ...data, status: 'draft' };\n\t\t\t\t}\n\t\t\t\tif ( ! data.title || data.title === 'Auto Draft' ) {\n\t\t\t\t\tdata = { ...data, title: '' };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Get the full local version of the record before the update,\n\t\t\t// to merge it with the edits and then propagate it to subscribers\n\t\t\tpersistedEntity = yield select(\n\t\t\t\t'__experimentalGetEntityRecordNoResolver',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\t\t\tcurrentEdits = yield select(\n\t\t\t\t'getEntityRecordEdits',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId\n\t\t\t);\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\t{ ...persistedEntity, ...data },\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tupdatedRecord = yield apiFetch( {\n\t\t\t\tpath,\n\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\tdata,\n\t\t\t} );\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tupdatedRecord,\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\t\t}\n\t} catch ( _error ) {\n\t\terror = _error;\n\n\t\t// If we got to the point in the try block where we made an optimistic update,\n\t\t// we need to roll it back here.\n\t\tif ( persistedEntity && currentEdits ) {\n\t\t\tyield receiveEntityRecords(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tpersistedEntity,\n\t\t\t\tundefined,\n\t\t\t\ttrue\n\t\t\t);\n\t\t\tyield editEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\t{\n\t\t\t\t\t...currentEdits,\n\t\t\t\t\t...( yield select(\n\t\t\t\t\t\t'getEntityRecordEdits',\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId\n\t\t\t\t\t) ),\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t}\n\t}\n\tyield {\n\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\terror,\n\t\tisAutosave,\n\t};\n\n\treturn updatedRecord;\n}\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport function* saveEditedEntityRecord( kind, name, recordId, options ) {\n\tif (\n\t\t! ( yield select( 'hasEditsForEntityRecord', kind, name, recordId ) )\n\t) {\n\t\treturn;\n\t}\n\tconst edits = yield select(\n\t\t'getEntityRecordNonTransientEdits',\n\t\tkind,\n\t\tname,\n\t\trecordId\n\t);\n\tconst record = { id: recordId, ...edits };\n\tyield* saveEntityRecord( kind, name, record, options );\n}\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey: 'create/media',\n\t\tisAllowed: hasUploadPermissions,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n"]}
{"version":3,"sources":["@wordpress/docgen/src/markdown/index.js"],"names":["remark","require","unified","remarkParser","inject","fs","formatter","embed","appendOrEmbedContents","options","newContents","transform","targetAst","file","next","toSection","Error","toToken","useToken","module","exports","processDir","doc","filteredIR","headingTitle","currentReadmeFile","readFileSync","output","use","parse","settings","commonmark","process","err","writeFileSync","toString"],"mappings":"AAAA;;;AAGA,IAAMA,MAAM,GAAGC,OAAO,CAAE,QAAF,CAAtB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAE,SAAF,CAAvB;;AACA,IAAME,YAAY,GAAGF,OAAO,CAAE,cAAF,CAA5B;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAE,mBAAF,CAAtB;;AACA,IAAMI,EAAE,GAAGJ,OAAO,CAAE,IAAF,CAAlB;AAEA;;;;;AAGA,IAAMK,SAAS,GAAGL,OAAO,CAAE,aAAF,CAAzB;;AACA,IAAMM,KAAK,GAAGN,OAAO,CAAE,SAAF,CAArB;;AAEA,IAAMO,qBAAqB,GAAG,SAAxBA,qBAAwB,OAAgC;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,WAAmB,QAAnBA,WAAmB;AAC7D,SAAO,SAASC,SAAT,CAAoBC,SAApB,EAA+BC,IAA/B,EAAqCC,IAArC,EAA4C;AAClD,QACCL,OAAO,CAACM,SAAR,IACA,CAAEX,MAAM,CAAEK,OAAO,CAACM,SAAV,EAAqBH,SAArB,EAAgCF,WAAhC,CAFT,EAGE;AACD,aAAOI,IAAI,CACV,IAAIE,KAAJ,mBAAuBP,OAAO,CAACM,SAA/B,iBADU,CAAX;AAGA,KAPD,MAOO,IACNN,OAAO,CAACQ,OAAR,IACA,CAAEV,KAAK,CAAEE,OAAO,CAACS,QAAV,EAAoBN,SAApB,EAA+BF,WAA/B,CAFD,EAGL;AACD,aAAOI,IAAI,CACV,IAAIE,KAAJ,uCACiCP,OAAO,CAACS,QADzC,iBADU,CAAX;AAKA;;AACDJ,IAAAA,IAAI;AACJ,GAnBD;AAoBA,CArBD;;AAuBAK,MAAM,CAACC,OAAP,GAAiB,UAChBX,OADgB,EAEhBY,UAFgB,EAGhBC,GAHgB,EAIhBC,UAJgB,EAKhBC,YALgB,EAMf;AACD,MAAKf,OAAO,CAACM,SAAR,IAAqBN,OAAO,CAACQ,OAAlC,EAA4C;AAC3C,QAAMQ,iBAAiB,GAAGpB,EAAE,CAACqB,YAAH,CAAiBjB,OAAO,CAACkB,MAAzB,EAAiC,MAAjC,CAA1B;AACA,QAAMjB,WAAW,GAAGR,OAAO,GACzB0B,GADkB,CACbzB,YADa,EAElB0B,KAFkB,CAEXvB,SAAS,CAAEe,UAAF,EAAcC,GAAd,EAAmBC,UAAnB,EAA+B,IAA/B,CAFE,CAApB;AAGAvB,IAAAA,MAAM,GACJ4B,GADF,CACO;AAAEE,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd;AAAZ,KADP,EAEEH,GAFF,CAEOpB,qBAFP,EAE8B;AAAEC,MAAAA,OAAO,EAAPA,OAAF;AAAWC,MAAAA,WAAW,EAAXA;AAAX,KAF9B,EAGEsB,OAHF,CAGWP,iBAHX,EAG8B,UAAUQ,GAAV,EAAepB,IAAf,EAAsB;AAClD,UAAKoB,GAAL,EAAW;AACV,cAAMA,GAAN;AACA;;AACD5B,MAAAA,EAAE,CAAC6B,aAAH,CAAkBZ,GAAlB,EAAuBT,IAAI,CAACsB,QAAL,EAAvB;AACA,KARF;AASA,GAdD,MAcO;AACN,QAAMR,MAAM,GAAGrB,SAAS,CAAEe,UAAF,EAAcC,GAAd,EAAmBC,UAAnB,EAA+BC,YAA/B,CAAxB;AACAnB,IAAAA,EAAE,CAAC6B,aAAH,CAAkBZ,GAAlB,EAAuBK,MAAvB;AACA;AACD,CAzBD","sourcesContent":["/**\n * External dependencies\n */\nconst remark = require( 'remark' );\nconst unified = require( 'unified' );\nconst remarkParser = require( 'remark-parse' );\nconst inject = require( 'mdast-util-inject' );\nconst fs = require( 'fs' );\n\n/**\n * Internal dependencies\n */\nconst formatter = require( './formatter' );\nconst embed = require( './embed' );\n\nconst appendOrEmbedContents = ( { options, newContents } ) => {\n\treturn function transform( targetAst, file, next ) {\n\t\tif (\n\t\t\toptions.toSection &&\n\t\t\t! inject( options.toSection, targetAst, newContents )\n\t\t) {\n\t\t\treturn next(\n\t\t\t\tnew Error( `Heading ${ options.toSection } not found.` )\n\t\t\t);\n\t\t} else if (\n\t\t\toptions.toToken &&\n\t\t\t! embed( options.useToken, targetAst, newContents )\n\t\t) {\n\t\t\treturn next(\n\t\t\t\tnew Error(\n\t\t\t\t\t`Start and/or end tokens for ${ options.useToken } not found.`\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t\tnext();\n\t};\n};\n\nmodule.exports = function(\n\toptions,\n\tprocessDir,\n\tdoc,\n\tfilteredIR,\n\theadingTitle\n) {\n\tif ( options.toSection || options.toToken ) {\n\t\tconst currentReadmeFile = fs.readFileSync( options.output, 'utf8' );\n\t\tconst newContents = unified()\n\t\t\t.use( remarkParser )\n\t\t\t.parse( formatter( processDir, doc, filteredIR, null ) );\n\t\tremark()\n\t\t\t.use( { settings: { commonmark: true } } )\n\t\t\t.use( appendOrEmbedContents, { options, newContents } )\n\t\t\t.process( currentReadmeFile, function( err, file ) {\n\t\t\t\tif ( err ) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t\tfs.writeFileSync( doc, file.toString() );\n\t\t\t} );\n\t} else {\n\t\tconst output = formatter( processDir, doc, filteredIR, headingTitle );\n\t\tfs.writeFileSync( doc, output );\n\t}\n};\n"]}
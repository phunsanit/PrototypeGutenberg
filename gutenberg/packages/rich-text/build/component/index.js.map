{"version":3,"sources":["@wordpress/rich-text/src/component/index.js"],"names":["INSERTION_INPUT_TYPES_TO_IGNORE","Set","whiteSpace","defaultStyle","EMPTY_ACTIVE_FORMATS","createPrepareEditableTree","props","prefix","fns","Object","keys","reduce","accumulator","key","startsWith","push","value","fn","text","formats","fixPlaceholderSelection","defaultView","selection","getSelection","anchorNode","anchorOffset","nodeType","ELEMENT_NODE","targetNode","childNodes","getAttribute","collapseToStart","RichText","selectionStart","selectionEnd","arguments","getDocument","bind","getWindow","onFocus","onBlur","onChange","handleDelete","handleEnter","handleSpace","handleHorizontalNavigation","onPaste","onCreateUndoLevel","onInput","onCompositionStart","onCompositionEnd","onSelectionChange","createRecord","applyRecord","valueToFormat","onPointerDown","formatToValue","Editable","onKeyDown","event","defaultPrevented","state","lastHistoryValue","record","start","end","removeEventListener","cancelAnimationFrame","rafId","domOnly","forwardedRef","current","ownerDocument","multilineTag","__unstableMultilineTag","preserveWhiteSpace","range","rangeCount","getRangeAt","element","multilineWrapperTags","undefined","__unstableIsEditableTree","prepareEditableTree","__unstableDomOnly","placeholder","formatTypes","isSelected","__unstableIsSelected","__unstableDisableFormats","activeFormats","preventDefault","clipboardData","items","files","plainText","html","getData","error1","error2","window","console","log","transformed","accumlator","__unstablePasteRule","Array","from","forEach","item","getAsFile","file","name","type","size","removeEditorOnlyFormats","unstableOnFocus","index","setState","requestAnimationFrame","addEventListener","setFocusedElement","alternative","instanceId","isComposing","inputType","nativeEvent","indexOf","has","change","withoutHistory","inputRule","__unstableInputRule","markAutomaticChange","__unstableMarkAutomaticChange","allowPrefixTransformations","__unstableAllowPrefixTransformations","setTimeout","clearTimeout","timeout","disabled","length","isCaretWithinFormattedText","__unstableIsCaretWithinFormattedText","onEnterFormattedText","__unstableOnEnterFormattedText","onExitFormattedText","__unstableOnExitFormattedText","newValue","replacements","changeHandlers","v","values","changeHandler","__unstableOnCreateUndoLevel","keyCode","DELETE","BACKSPACE","ESCAPE","__unstableDidAutomaticChange","__unstableUndo","onDelete","isReverse","ENTER","onEnter","shiftKey","altKey","metaKey","ctrlKey","multilineRootTag","__unstableMultilineRootTag","SPACE","characterBefore","LINE_SEPARATOR","LEFT","RIGHT","collapsed","getComputedStyle","direction","reverseKey","formatsBefore","formatsAfter","newActiveFormatsLength","source","newActiveFormats","slice","newPos","target","textContent","parentNode","createRange","setStart","setEnd","removeAllRanges","addRange","prevProps","tagName","shouldReapply","selectionChanged","predicate","prepareProps","prevPrepareProps","format","disableFormats","prepare","formatType","__experimentalCreatePrepareEditableTree","TagName","style","className","ariaProps","children","allowedFormats","withoutInteractiveFormatting","focus","Component","defaultProps","RichTextWrapper","withSafeTimeout","withFormatTypes","ref"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { find, isNil, pickBy, startsWith } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { Component, forwardRef } from '@wordpress/element';\nimport {\n\tBACKSPACE,\n\tDELETE,\n\tENTER,\n\tLEFT,\n\tRIGHT,\n\tSPACE,\n\tESCAPE,\n} from '@wordpress/keycodes';\nimport { withSafeTimeout, compose } from '@wordpress/compose';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport FormatEdit from './format-edit';\nimport { create } from '../create';\nimport { apply } from '../to-dom';\nimport { toHTMLString } from '../to-html-string';\nimport { remove } from '../remove';\nimport { removeFormat } from '../remove-format';\nimport { isCollapsed } from '../is-collapsed';\nimport { LINE_SEPARATOR } from '../special-characters';\nimport { indentListItems } from '../indent-list-items';\nimport { getActiveFormats } from '../get-active-formats';\nimport { updateFormats } from '../update-formats';\nimport { removeLineSeparator } from '../remove-line-separator';\nimport { isEmptyLine } from '../is-empty';\nimport withFormatTypes from './with-format-types';\nimport { BoundaryStyle } from './boundary-style';\nimport { InlineWarning } from './inline-warning';\nimport { insert } from '../insert';\n\n/** @typedef {import('@wordpress/element').WPSyntheticEvent} WPSyntheticEvent */\n\n/**\n * All inserting input types that would insert HTML into the DOM.\n *\n * @see https://www.w3.org/TR/input-events-2/#interface-InputEvent-Attributes\n *\n * @type {Set}\n */\nconst INSERTION_INPUT_TYPES_TO_IGNORE = new Set( [\n\t'insertParagraph',\n\t'insertOrderedList',\n\t'insertUnorderedList',\n\t'insertHorizontalRule',\n\t'insertLink',\n] );\n\n/**\n * In HTML, leading and trailing spaces are not visible, and multiple spaces\n * elsewhere are visually reduced to one space. This rule prevents spaces from\n * collapsing so all space is visible in the editor and can be removed. It also\n * prevents some browsers from inserting non-breaking spaces at the end of a\n * line to prevent the space from visually disappearing. Sometimes these non\n * breaking spaces can linger in the editor causing unwanted non breaking spaces\n * in between words. If also prevent Firefox from inserting a trailing `br` node\n * to visualise any trailing space, causing the element to be saved.\n *\n * > Authors are encouraged to set the 'white-space' property on editing hosts\n * > and on markup that was originally created through these editing mechanisms\n * > to the value 'pre-wrap'. Default HTML whitespace handling is not well\n * > suited to WYSIWYG editing, and line wrapping will not work correctly in\n * > some corner cases if 'white-space' is left at its default value.\n *\n * https://html.spec.whatwg.org/multipage/interaction.html#best-practices-for-in-page-editors\n *\n * @type {string}\n */\nconst whiteSpace = 'pre-wrap';\n\n/**\n * Default style object for the editable element.\n *\n * @type {Object<string,string>}\n */\nconst defaultStyle = { whiteSpace };\n\nconst EMPTY_ACTIVE_FORMATS = [];\n\nfunction createPrepareEditableTree( props, prefix ) {\n\tconst fns = Object.keys( props ).reduce( ( accumulator, key ) => {\n\t\tif ( key.startsWith( prefix ) ) {\n\t\t\taccumulator.push( props[ key ] );\n\t\t}\n\n\t\treturn accumulator;\n\t}, [] );\n\n\treturn ( value ) =>\n\t\tfns.reduce( ( accumulator, fn ) => {\n\t\t\treturn fn( accumulator, value.text );\n\t\t}, value.formats );\n}\n\n/**\n * If the selection is set on the placeholder element, collapse the selection to\n * the start (before the placeholder).\n *\n * @param {Window} defaultView\n */\nfunction fixPlaceholderSelection( defaultView ) {\n\tconst selection = defaultView.getSelection();\n\tconst { anchorNode, anchorOffset } = selection;\n\n\tif ( anchorNode.nodeType !== anchorNode.ELEMENT_NODE ) {\n\t\treturn;\n\t}\n\n\tconst targetNode = anchorNode.childNodes[ anchorOffset ];\n\n\tif (\n\t\t! targetNode ||\n\t\ttargetNode.nodeType !== targetNode.ELEMENT_NODE ||\n\t\t! targetNode.getAttribute( 'data-rich-text-placeholder' )\n\t) {\n\t\treturn;\n\t}\n\n\tselection.collapseToStart();\n}\n\n/**\n * See export statement below.\n */\nclass RichText extends Component {\n\tconstructor( { value, selectionStart, selectionEnd } ) {\n\t\tsuper( ...arguments );\n\n\t\tthis.getDocument = this.getDocument.bind( this );\n\t\tthis.getWindow = this.getWindow.bind( this );\n\t\tthis.onFocus = this.onFocus.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.handleDelete = this.handleDelete.bind( this );\n\t\tthis.handleEnter = this.handleEnter.bind( this );\n\t\tthis.handleSpace = this.handleSpace.bind( this );\n\t\tthis.handleHorizontalNavigation = this.handleHorizontalNavigation.bind(\n\t\t\tthis\n\t\t);\n\t\tthis.onPaste = this.onPaste.bind( this );\n\t\tthis.onCreateUndoLevel = this.onCreateUndoLevel.bind( this );\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onCompositionStart = this.onCompositionStart.bind( this );\n\t\tthis.onCompositionEnd = this.onCompositionEnd.bind( this );\n\t\tthis.onSelectionChange = this.onSelectionChange.bind( this );\n\t\tthis.createRecord = this.createRecord.bind( this );\n\t\tthis.applyRecord = this.applyRecord.bind( this );\n\t\tthis.valueToFormat = this.valueToFormat.bind( this );\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.formatToValue = this.formatToValue.bind( this );\n\t\tthis.Editable = this.Editable.bind( this );\n\n\t\tthis.onKeyDown = ( event ) => {\n\t\t\tif ( event.defaultPrevented ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.handleDelete( event );\n\t\t\tthis.handleEnter( event );\n\t\t\tthis.handleSpace( event );\n\t\t\tthis.handleHorizontalNavigation( event );\n\t\t};\n\n\t\tthis.state = {};\n\t\tthis.lastHistoryValue = value;\n\n\t\t// Internal values are updated synchronously, unlike props and state.\n\t\tthis.value = value;\n\t\tthis.record = this.formatToValue( value );\n\t\tthis.record.start = selectionStart;\n\t\tthis.record.end = selectionEnd;\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.getDocument().removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t\tthis.getWindow().cancelAnimationFrame( this.rafId );\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.applyRecord( this.record, { domOnly: true } );\n\t}\n\n\tgetDocument() {\n\t\treturn this.props.forwardedRef.current.ownerDocument;\n\t}\n\n\tgetWindow() {\n\t\treturn this.getDocument().defaultView;\n\t}\n\n\tcreateRecord() {\n\t\tconst {\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tforwardedRef,\n\t\t\tpreserveWhiteSpace,\n\t\t} = this.props;\n\t\tconst selection = this.getWindow().getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\n\t\treturn create( {\n\t\t\telement: forwardedRef.current,\n\t\t\trange,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\t__unstableIsEditableTree: true,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t}\n\n\tapplyRecord( record, { domOnly } = {} ) {\n\t\tconst {\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tforwardedRef,\n\t\t} = this.props;\n\n\t\tapply( {\n\t\t\tvalue: record,\n\t\t\tcurrent: forwardedRef.current,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tprepareEditableTree: createPrepareEditableTree(\n\t\t\t\tthis.props,\n\t\t\t\t'format_prepare_functions'\n\t\t\t),\n\t\t\t__unstableDomOnly: domOnly,\n\t\t\tplaceholder: this.props.placeholder,\n\t\t} );\n\t}\n\n\t/**\n\t * Handles a paste event.\n\t *\n\t * Saves the pasted data as plain text in `pastedPlainText`.\n\t *\n\t * @param {ClipboardEvent} event The paste event.\n\t */\n\tonPaste( event ) {\n\t\tconst {\n\t\t\tformatTypes,\n\t\t\tonPaste,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t\t__unstableDisableFormats,\n\t\t} = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\n\t\tif ( ! isSelected ) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst clipboardData = event.clipboardData;\n\t\tlet { items, files } = clipboardData;\n\n\t\t// In Edge these properties can be null instead of undefined, so a more\n\t\t// rigorous test is required over using default values.\n\t\titems = isNil( items ) ? [] : items;\n\t\tfiles = isNil( files ) ? [] : files;\n\n\t\tlet plainText = '';\n\t\tlet html = '';\n\n\t\t// IE11 only supports `Text` as an argument for `getData` and will\n\t\t// otherwise throw an invalid argument error, so we try the standard\n\t\t// arguments first, then fallback to `Text` if they fail.\n\t\ttry {\n\t\t\tplainText = clipboardData.getData( 'text/plain' );\n\t\t\thtml = clipboardData.getData( 'text/html' );\n\t\t} catch ( error1 ) {\n\t\t\ttry {\n\t\t\t\thtml = clipboardData.getData( 'Text' );\n\t\t\t} catch ( error2 ) {\n\t\t\t\t// Some browsers like UC Browser paste plain text by default and\n\t\t\t\t// don't support clipboardData at all, so allow default\n\t\t\t\t// behaviour.\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\t// Allows us to ask for this information when we get a report.\n\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\tif ( __unstableDisableFormats ) {\n\t\t\tthis.onChange( insert( this.record, plainText ) );\n\t\t\treturn;\n\t\t}\n\n\t\tconst record = this.record;\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstablePasteRule } ) => {\n\t\t\t\t// Only allow one transform.\n\t\t\t\tif ( __unstablePasteRule && accumlator === record ) {\n\t\t\t\t\taccumlator = __unstablePasteRule( record, {\n\t\t\t\t\t\thtml,\n\t\t\t\t\t\tplainText,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\trecord\n\t\t);\n\n\t\tif ( transformed !== record ) {\n\t\t\tthis.onChange( transformed );\n\t\t\treturn;\n\t\t}\n\n\t\tif ( onPaste ) {\n\t\t\tfiles = Array.from( files );\n\n\t\t\tArray.from( items ).forEach( ( item ) => {\n\t\t\t\tif ( ! item.getAsFile ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst file = item.getAsFile();\n\n\t\t\t\tif ( ! file ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { name, type, size } = file;\n\n\t\t\t\tif ( ! find( files, { name, type, size } ) ) {\n\t\t\t\t\tfiles.push( file );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tonPaste( {\n\t\t\t\tvalue: this.removeEditorOnlyFormats( record ),\n\t\t\t\tonChange: this.onChange,\n\t\t\t\thtml,\n\t\t\t\tplainText,\n\t\t\t\tfiles,\n\t\t\t\tactiveFormats,\n\t\t\t} );\n\t\t}\n\t}\n\n\t/**\n\t * Handles a focus event on the contenteditable field, calling the\n\t * `unstableOnFocus` prop callback if one is defined. The callback does not\n\t * receive any arguments.\n\t *\n\t * This is marked as a private API and the `unstableOnFocus` prop is not\n\t * documented, as the current requirements where it is used are subject to\n\t * future refactoring following `isSelected` handling.\n\t *\n\t * In contrast with `setFocusedElement`, this is only triggered in response\n\t * to focus within the contenteditable field, whereas `setFocusedElement`\n\t * is triggered on focus within any `RichText` descendent element.\n\t *\n\t * @see setFocusedElement\n\t *\n\t * @private\n\t */\n\tonFocus() {\n\t\tconst { unstableOnFocus } = this.props;\n\n\t\tif ( unstableOnFocus ) {\n\t\t\tunstableOnFocus();\n\t\t}\n\n\t\tif ( ! this.props.__unstableIsSelected ) {\n\t\t\t// We know for certain that on focus, the old selection is invalid. It\n\t\t\t// will be recalculated on the next mouseup, keyup, or touchend event.\n\t\t\tconst index = undefined;\n\t\t\tconst activeFormats = EMPTY_ACTIVE_FORMATS;\n\n\t\t\tthis.record = {\n\t\t\t\t...this.record,\n\t\t\t\tstart: index,\n\t\t\t\tend: index,\n\t\t\t\tactiveFormats,\n\t\t\t};\n\t\t\tthis.props.onSelectionChange( index, index );\n\t\t\tthis.setState( { activeFormats } );\n\t\t} else {\n\t\t\tthis.props.onSelectionChange( this.record.start, this.record.end );\n\t\t\tthis.setState( {\n\t\t\t\tactiveFormats: getActiveFormats(\n\t\t\t\t\t{\n\t\t\t\t\t\t...this.record,\n\t\t\t\t\t\tactiveFormats: undefined,\n\t\t\t\t\t},\n\t\t\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t\t\t),\n\t\t\t} );\n\t\t}\n\n\t\t// Update selection as soon as possible, which is at the next animation\n\t\t// frame. The event listener for selection changes may be added too late\n\t\t// at this point, but this focus event is still too early to calculate\n\t\t// the selection.\n\t\tthis.rafId = this.getWindow().requestAnimationFrame(\n\t\t\tthis.onSelectionChange\n\t\t);\n\n\t\tthis.getDocument().addEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\n\t\tif ( this.props.setFocusedElement ) {\n\t\t\tdeprecated( 'wp.blockEditor.RichText setFocusedElement prop', {\n\t\t\t\talternative: 'selection state from the block editor store.',\n\t\t\t} );\n\t\t\tthis.props.setFocusedElement( this.props.instanceId );\n\t\t}\n\t}\n\n\tonBlur() {\n\t\tthis.getDocument().removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t}\n\n\t/**\n\t * Handle input on the next selection change event.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic input event.\n\t */\n\tonInput( event ) {\n\t\t// Do not trigger a change if characters are being composed. Browsers\n\t\t// will usually emit a final `input` event when the characters are\n\t\t// composed.\n\t\t// As of December 2019, Safari doesn't support nativeEvent.isComposing.\n\t\tif ( this.isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet inputType;\n\n\t\tif ( event ) {\n\t\t\tinputType = event.inputType;\n\t\t}\n\n\t\tif ( ! inputType && event && event.nativeEvent ) {\n\t\t\tinputType = event.nativeEvent.inputType;\n\t\t}\n\n\t\t// The browser formatted something or tried to insert HTML.\n\t\t// Overwrite it. It will be handled later by the format library if\n\t\t// needed.\n\t\tif (\n\t\t\tinputType &&\n\t\t\t( inputType.indexOf( 'format' ) === 0 ||\n\t\t\t\tINSERTION_INPUT_TYPES_TO_IGNORE.has( inputType ) )\n\t\t) {\n\t\t\tthis.applyRecord( this.record );\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\t\tconst { start, activeFormats = [] } = this.record;\n\n\t\t// Update the formats between the last and new caret position.\n\t\tconst change = updateFormats( {\n\t\t\tvalue,\n\t\t\tstart,\n\t\t\tend: value.start,\n\t\t\tformats: activeFormats,\n\t\t} );\n\n\t\tthis.onChange( change, { withoutHistory: true } );\n\n\t\tconst {\n\t\t\t__unstableInputRule: inputRule,\n\t\t\t__unstableMarkAutomaticChange: markAutomaticChange,\n\t\t\t__unstableAllowPrefixTransformations: allowPrefixTransformations,\n\t\t\tformatTypes,\n\t\t\tsetTimeout,\n\t\t\tclearTimeout,\n\t\t} = this.props;\n\n\t\t// Create an undo level when input stops for over a second.\n\t\tclearTimeout( this.onInput.timeout );\n\t\tthis.onInput.timeout = setTimeout( this.onCreateUndoLevel, 1000 );\n\n\t\t// Only run input rules when inserting text.\n\t\tif ( inputType !== 'insertText' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( allowPrefixTransformations && inputRule ) {\n\t\t\tinputRule( change, this.valueToFormat );\n\t\t}\n\n\t\tconst transformed = formatTypes.reduce(\n\t\t\t( accumlator, { __unstableInputRule } ) => {\n\t\t\t\tif ( __unstableInputRule ) {\n\t\t\t\t\taccumlator = __unstableInputRule( accumlator );\n\t\t\t\t}\n\n\t\t\t\treturn accumlator;\n\t\t\t},\n\t\t\tchange\n\t\t);\n\n\t\tif ( transformed !== change ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t\tthis.onChange( { ...transformed, activeFormats } );\n\t\t\tmarkAutomaticChange();\n\t\t}\n\t}\n\n\tonCompositionStart() {\n\t\tthis.isComposing = true;\n\t\t// Do not update the selection when characters are being composed as\n\t\t// this rerenders the component and might distroy internal browser\n\t\t// editing state.\n\t\tthis.getDocument().removeEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t}\n\n\tonCompositionEnd() {\n\t\tthis.isComposing = false;\n\t\t// Ensure the value is up-to-date for browsers that don't emit a final\n\t\t// input event after composition.\n\t\tthis.onInput( { inputType: 'insertText' } );\n\t\t// Tracking selection changes can be resumed.\n\t\tthis.getDocument().addEventListener(\n\t\t\t'selectionchange',\n\t\t\tthis.onSelectionChange\n\t\t);\n\t}\n\n\t/**\n\t * Syncs the selection to local state. A callback for the `selectionchange`\n\t * native events, `keyup`, `mouseup` and `touchend` synthetic events, and\n\t * animation frames after the `focus` event.\n\t *\n\t * @param {Event|WPSyntheticEvent|DOMHighResTimeStamp} event\n\t */\n\tonSelectionChange( event ) {\n\t\tif (\n\t\t\tevent.type !== 'selectionchange' &&\n\t\t\t! this.props.__unstableIsSelected\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.disabled ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case of a keyboard event, ignore selection changes during\n\t\t// composition.\n\t\tif ( this.isComposing ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end, text } = this.createRecord();\n\t\tconst value = this.record;\n\n\t\t// Fallback mechanism for IE11, which doesn't support the input event.\n\t\t// Any input results in a selection change.\n\t\tif ( text !== value.text ) {\n\t\t\tthis.onInput();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( start === value.start && end === value.end ) {\n\t\t\t// Sometimes the browser may set the selection on the placeholder\n\t\t\t// element, in which case the caret is not visible. We need to set\n\t\t\t// the caret before the placeholder if that's the case.\n\t\t\tif ( value.text.length === 0 && start === 0 ) {\n\t\t\t\tfixPlaceholderSelection( this.getWindow() );\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst {\n\t\t\t__unstableIsCaretWithinFormattedText: isCaretWithinFormattedText,\n\t\t\t__unstableOnEnterFormattedText: onEnterFormattedText,\n\t\t\t__unstableOnExitFormattedText: onExitFormattedText,\n\t\t} = this.props;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart,\n\t\t\tend,\n\t\t\t// Allow `getActiveFormats` to get new `activeFormats`.\n\t\t\tactiveFormats: undefined,\n\t\t};\n\n\t\tconst activeFormats = getActiveFormats(\n\t\t\tnewValue,\n\t\t\tEMPTY_ACTIVE_FORMATS\n\t\t);\n\n\t\t// Update the value with the new active formats.\n\t\tnewValue.activeFormats = activeFormats;\n\n\t\tif ( ! isCaretWithinFormattedText && activeFormats.length ) {\n\t\t\tonEnterFormattedText();\n\t\t} else if ( isCaretWithinFormattedText && ! activeFormats.length ) {\n\t\t\tonExitFormattedText();\n\t\t}\n\n\t\t// It is important that the internal value is updated first,\n\t\t// otherwise the value will be wrong on render!\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue, { domOnly: true } );\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.setState( { activeFormats } );\n\t}\n\n\t/**\n\t * Sync the value to global state. The node tree and selection will also be\n\t * updated if differences are found.\n\t *\n\t * @param {Object}  record            The record to sync and apply.\n\t * @param {Object}  $2                Named options.\n\t * @param {boolean} $2.withoutHistory If true, no undo level will be\n\t *                                    created.\n\t */\n\tonChange( record, { withoutHistory } = {} ) {\n\t\tif ( this.props.__unstableDisableFormats ) {\n\t\t\trecord.formats = Array( record.text.length );\n\t\t\trecord.replacements = Array( record.text.length );\n\t\t}\n\n\t\tthis.applyRecord( record );\n\n\t\tconst { start, end, activeFormats = [] } = record;\n\t\tconst changeHandlers = pickBy( this.props, ( v, key ) =>\n\t\t\tkey.startsWith( 'format_on_change_functions_' )\n\t\t);\n\n\t\tObject.values( changeHandlers ).forEach( ( changeHandler ) => {\n\t\t\tchangeHandler( record.formats, record.text );\n\t\t} );\n\n\t\tthis.value = this.valueToFormat( record );\n\t\tthis.record = record;\n\t\t// Selection must be updated first, so it is recorded in history when\n\t\t// the content change happens.\n\t\tthis.props.onSelectionChange( start, end );\n\t\tthis.props.onChange( this.value );\n\t\tthis.setState( { activeFormats } );\n\n\t\tif ( ! withoutHistory ) {\n\t\t\tthis.onCreateUndoLevel();\n\t\t}\n\t}\n\n\tonCreateUndoLevel() {\n\t\t// If the content is the same, no level needs to be created.\n\t\tif ( this.lastHistoryValue === this.value ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.props.__unstableOnCreateUndoLevel();\n\t\tthis.lastHistoryValue = this.value;\n\t}\n\n\t/**\n\t * Handles delete on keydown:\n\t * - outdent list items,\n\t * - delete content if everything is selected,\n\t * - trigger the onDelete prop when selection is uncollapsed and at an edge.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleDelete( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif (\n\t\t\tkeyCode !== DELETE &&\n\t\t\tkeyCode !== BACKSPACE &&\n\t\t\tkeyCode !== ESCAPE\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this.props.__unstableDidAutomaticChange ) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.props.__unstableUndo();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( keyCode === ESCAPE ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { onDelete, __unstableMultilineTag: multilineTag } = this.props;\n\t\tconst { activeFormats = [] } = this.state;\n\t\tconst value = this.createRecord();\n\t\tconst { start, end, text } = value;\n\t\tconst isReverse = keyCode === BACKSPACE;\n\n\t\t// Always handle full content deletion ourselves.\n\t\tif ( start === 0 && end !== 0 && end === text.length ) {\n\t\t\tthis.onChange( remove( value ) );\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif ( multilineTag ) {\n\t\t\tlet newValue;\n\n\t\t\t// Check to see if we should remove the first item if empty.\n\t\t\tif (\n\t\t\t\tisReverse &&\n\t\t\t\tvalue.start === 0 &&\n\t\t\t\tvalue.end === 0 &&\n\t\t\t\tisEmptyLine( value )\n\t\t\t) {\n\t\t\t\tnewValue = removeLineSeparator( value, ! isReverse );\n\t\t\t} else {\n\t\t\t\tnewValue = removeLineSeparator( value, isReverse );\n\t\t\t}\n\n\t\t\tif ( newValue ) {\n\t\t\t\tthis.onChange( newValue );\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// Only process delete if the key press occurs at an uncollapsed edge.\n\t\tif (\n\t\t\t! onDelete ||\n\t\t\t! isCollapsed( value ) ||\n\t\t\tactiveFormats.length ||\n\t\t\t( isReverse && start !== 0 ) ||\n\t\t\t( ! isReverse && end !== text.length )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tonDelete( { isReverse, value } );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Triggers the `onEnter` prop on keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleEnter( event ) {\n\t\tif ( event.keyCode !== ENTER ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevent.preventDefault();\n\n\t\tconst { onEnter } = this.props;\n\n\t\tif ( ! onEnter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tonEnter( {\n\t\t\tvalue: this.removeEditorOnlyFormats( this.createRecord() ),\n\t\t\tonChange: this.onChange,\n\t\t\tshiftKey: event.shiftKey,\n\t\t} );\n\t}\n\n\t/**\n\t * Indents list items on space keydown.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleSpace( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\t\tconst {\n\t\t\t__unstableMultilineRootTag: multilineRootTag,\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t} = this.props;\n\n\t\tif (\n\t\t\t// Only override when no modifiers are pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\tkeyCode !== SPACE ||\n\t\t\tmultilineTag !== 'li'\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.createRecord();\n\n\t\tif ( ! isCollapsed( value ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { text, start } = value;\n\t\tconst characterBefore = text[ start - 1 ];\n\n\t\t// The caret must be at the start of a line.\n\t\tif ( characterBefore && characterBefore !== LINE_SEPARATOR ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onChange( indentListItems( value, { type: multilineRootTag } ) );\n\t\tevent.preventDefault();\n\t}\n\n\t/**\n\t * Handles horizontal keyboard navigation when no modifiers are pressed. The\n\t * navigation is handled separately to move correctly around format\n\t * boundaries.\n\t *\n\t * @param {WPSyntheticEvent} event A synthetic keyboard event.\n\t */\n\thandleHorizontalNavigation( event ) {\n\t\tconst { keyCode, shiftKey, altKey, metaKey, ctrlKey } = event;\n\n\t\tif (\n\t\t\t// Only override left and right keys without modifiers pressed.\n\t\t\tshiftKey ||\n\t\t\taltKey ||\n\t\t\tmetaKey ||\n\t\t\tctrlKey ||\n\t\t\t( keyCode !== LEFT && keyCode !== RIGHT )\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst value = this.record;\n\t\tconst { text, formats, start, end, activeFormats = [] } = value;\n\t\tconst collapsed = isCollapsed( value );\n\t\t// To do: ideally, we should look at visual position instead.\n\t\tconst { direction } = this.getWindow().getComputedStyle(\n\t\t\tthis.props.forwardedRef.current\n\t\t);\n\t\tconst reverseKey = direction === 'rtl' ? RIGHT : LEFT;\n\t\tconst isReverse = event.keyCode === reverseKey;\n\n\t\t// If the selection is collapsed and at the very start, do nothing if\n\t\t// navigating backward.\n\t\t// If the selection is collapsed and at the very end, do nothing if\n\t\t// navigating forward.\n\t\tif ( collapsed && activeFormats.length === 0 ) {\n\t\t\tif ( start === 0 && isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( end === text.length && ! isReverse ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the selection is not collapsed, let the browser handle collapsing\n\t\t// the selection for now. Later we could expand this logic to set\n\t\t// boundary positions if needed.\n\t\tif ( ! collapsed ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In all other cases, prevent default behaviour.\n\t\tevent.preventDefault();\n\n\t\tconst formatsBefore = formats[ start - 1 ] || EMPTY_ACTIVE_FORMATS;\n\t\tconst formatsAfter = formats[ start ] || EMPTY_ACTIVE_FORMATS;\n\n\t\tlet newActiveFormatsLength = activeFormats.length;\n\t\tlet source = formatsAfter;\n\n\t\tif ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tsource = formatsBefore;\n\t\t}\n\n\t\t// If the amount of formats before the caret and after the caret is\n\t\t// different, the caret is at a format boundary.\n\t\tif ( formatsBefore.length < formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length < formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length > formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\t\t} else if ( formatsBefore.length > formatsAfter.length ) {\n\t\t\tif ( ! isReverse && activeFormats.length > formatsAfter.length ) {\n\t\t\t\tnewActiveFormatsLength--;\n\t\t\t}\n\n\t\t\tif ( isReverse && activeFormats.length < formatsBefore.length ) {\n\t\t\t\tnewActiveFormatsLength++;\n\t\t\t}\n\t\t}\n\n\t\tif ( newActiveFormatsLength !== activeFormats.length ) {\n\t\t\tconst newActiveFormats = source.slice( 0, newActiveFormatsLength );\n\t\t\tconst newValue = { ...value, activeFormats: newActiveFormats };\n\t\t\tthis.record = newValue;\n\t\t\tthis.applyRecord( newValue );\n\t\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t\t\treturn;\n\t\t}\n\n\t\tconst newPos = start + ( isReverse ? -1 : 1 );\n\t\tconst newActiveFormats = isReverse ? formatsBefore : formatsAfter;\n\t\tconst newValue = {\n\t\t\t...value,\n\t\t\tstart: newPos,\n\t\t\tend: newPos,\n\t\t\tactiveFormats: newActiveFormats,\n\t\t};\n\n\t\tthis.record = newValue;\n\t\tthis.applyRecord( newValue );\n\t\tthis.props.onSelectionChange( newPos, newPos );\n\t\tthis.setState( { activeFormats: newActiveFormats } );\n\t}\n\n\t/**\n\t * Select object when they are clicked. The browser will not set any\n\t * selection when clicking e.g. an image.\n\t *\n\t * @param {WPSyntheticEvent} event Synthetic mousedown or touchstart event.\n\t */\n\tonPointerDown( event ) {\n\t\tconst { target } = event;\n\n\t\t// If the child element has no text content, it must be an object.\n\t\tif (\n\t\t\ttarget === this.props.forwardedRef.current ||\n\t\t\ttarget.textContent\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { parentNode } = target;\n\t\tconst index = Array.from( parentNode.childNodes ).indexOf( target );\n\t\tconst range = this.getDocument().createRange();\n\t\tconst selection = this.getWindow().getSelection();\n\n\t\trange.setStart( target.parentNode, index );\n\t\trange.setEnd( target.parentNode, index + 1 );\n\n\t\tselection.removeAllRanges();\n\t\tselection.addRange( range );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tconst {\n\t\t\ttagName,\n\t\t\tvalue,\n\t\t\tselectionStart,\n\t\t\tselectionEnd,\n\t\t\tplaceholder,\n\t\t\t__unstableIsSelected: isSelected,\n\t\t} = this.props;\n\n\t\t// Check if tag name changed.\n\t\tlet shouldReapply = tagName !== prevProps.tagName;\n\n\t\t// Check if the content changed.\n\t\tshouldReapply =\n\t\t\tshouldReapply ||\n\t\t\t( value !== prevProps.value && value !== this.value );\n\n\t\tconst selectionChanged =\n\t\t\t( selectionStart !== prevProps.selectionStart &&\n\t\t\t\tselectionStart !== this.record.start ) ||\n\t\t\t( selectionEnd !== prevProps.selectionEnd &&\n\t\t\t\tselectionEnd !== this.record.end );\n\n\t\t// Check if the selection changed.\n\t\tshouldReapply =\n\t\t\tshouldReapply ||\n\t\t\t( isSelected && ! prevProps.isSelected && selectionChanged );\n\n\t\tconst prefix = 'format_prepare_props_';\n\t\tconst predicate = ( v, key ) => key.startsWith( prefix );\n\t\tconst prepareProps = pickBy( this.props, predicate );\n\t\tconst prevPrepareProps = pickBy( prevProps, predicate );\n\n\t\t// Check if any format props changed.\n\t\tshouldReapply =\n\t\t\tshouldReapply || ! isShallowEqual( prepareProps, prevPrepareProps );\n\n\t\t// Rerender if the placeholder changed.\n\t\tshouldReapply = shouldReapply || placeholder !== prevProps.placeholder;\n\n\t\tif ( shouldReapply ) {\n\t\t\tthis.value = value;\n\t\t\tthis.record = this.formatToValue( value );\n\t\t\tthis.record.start = selectionStart;\n\t\t\tthis.record.end = selectionEnd;\n\t\t\tthis.applyRecord( this.record );\n\t\t} else if ( selectionChanged ) {\n\t\t\tthis.record = {\n\t\t\t\t...this.record,\n\t\t\t\tstart: selectionStart,\n\t\t\t\tend: selectionEnd,\n\t\t\t};\n\t\t}\n\t}\n\n\t/**\n\t * Converts the outside data structure to our internal representation.\n\t *\n\t * @param {*} value The outside value, data type depends on props.\n\t * @return {Object} An internal rich-text value.\n\t */\n\tformatToValue( value ) {\n\t\tconst {\n\t\t\tformat,\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t\t__unstableDisableFormats: disableFormats,\n\t\t} = this.props;\n\n\t\tif ( disableFormats ) {\n\t\t\treturn {\n\t\t\t\ttext: value,\n\t\t\t\tformats: Array( value.length ),\n\t\t\t\treplacements: Array( value.length ),\n\t\t\t};\n\t\t}\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn value;\n\t\t}\n\n\t\tconst prepare = createPrepareEditableTree(\n\t\t\tthis.props,\n\t\t\t'format_value_functions'\n\t\t);\n\n\t\tvalue = create( {\n\t\t\thtml: value,\n\t\t\tmultilineTag,\n\t\t\tmultilineWrapperTags:\n\t\t\t\tmultilineTag === 'li' ? [ 'ul', 'ol' ] : undefined,\n\t\t\tpreserveWhiteSpace,\n\t\t} );\n\t\tvalue.formats = prepare( value );\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Removes editor only formats from the value.\n\t *\n\t * Editor only formats are applied using `prepareEditableTree`, so we need to\n\t * remove them before converting the internal state\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {Object} A new rich-text value.\n\t */\n\tremoveEditorOnlyFormats( value ) {\n\t\tthis.props.formatTypes.forEach( ( formatType ) => {\n\t\t\t// Remove formats created by prepareEditableTree, because they are editor only.\n\t\t\tif ( formatType.__experimentalCreatePrepareEditableTree ) {\n\t\t\t\tvalue = removeFormat(\n\t\t\t\t\tvalue,\n\t\t\t\t\tformatType.name,\n\t\t\t\t\t0,\n\t\t\t\t\tvalue.text.length\n\t\t\t\t);\n\t\t\t}\n\t\t} );\n\n\t\treturn value;\n\t}\n\n\t/**\n\t * Converts the internal value to the external data format.\n\t *\n\t * @param {Object} value The internal rich-text value.\n\t * @return {*} The external data format, data type depends on props.\n\t */\n\tvalueToFormat( value ) {\n\t\tconst {\n\t\t\tformat,\n\t\t\t__unstableMultilineTag: multilineTag,\n\t\t\tpreserveWhiteSpace,\n\t\t\t__unstableDisableFormats: disableFormats,\n\t\t} = this.props;\n\n\t\tif ( disableFormats ) {\n\t\t\treturn value.text;\n\t\t}\n\n\t\tvalue = this.removeEditorOnlyFormats( value );\n\n\t\tif ( format !== 'string' ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn toHTMLString( { value, multilineTag, preserveWhiteSpace } );\n\t}\n\n\tEditable( props ) {\n\t\tconst {\n\t\t\ttagName: TagName = 'div',\n\t\t\tstyle,\n\t\t\tclassName,\n\t\t\tplaceholder,\n\t\t\tforwardedRef,\n\t\t\tdisabled,\n\t\t} = this.props;\n\t\tconst ariaProps = pickBy( this.props, ( value, key ) =>\n\t\t\tstartsWith( key, 'aria-' )\n\t\t);\n\n\t\treturn (\n\t\t\t<TagName\n\t\t\t\t// Overridable props.\n\t\t\t\trole=\"textbox\"\n\t\t\t\taria-multiline\n\t\t\t\taria-label={ placeholder }\n\t\t\t\t{ ...props }\n\t\t\t\t{ ...ariaProps }\n\t\t\t\tref={ forwardedRef }\n\t\t\t\tstyle={ style ? { ...style, whiteSpace } : defaultStyle }\n\t\t\t\tclassName={ classnames( 'rich-text', className ) }\n\t\t\t\tonPaste={ this.onPaste }\n\t\t\t\tonInput={ this.onInput }\n\t\t\t\tonCompositionStart={ this.onCompositionStart }\n\t\t\t\tonCompositionEnd={ this.onCompositionEnd }\n\t\t\t\tonKeyDown={\n\t\t\t\t\tprops.onKeyDown\n\t\t\t\t\t\t? ( event ) => {\n\t\t\t\t\t\t\t\tprops.onKeyDown( event );\n\t\t\t\t\t\t\t\tthis.onKeyDown( event );\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: this.onKeyDown\n\t\t\t\t}\n\t\t\t\tonFocus={ this.onFocus }\n\t\t\t\tonBlur={ this.onBlur }\n\t\t\t\tonMouseDown={ this.onPointerDown }\n\t\t\t\tonTouchStart={ this.onPointerDown }\n\t\t\t\t// Selection updates must be done at these events as they\n\t\t\t\t// happen before the `selectionchange` event. In some cases,\n\t\t\t\t// the `selectionchange` event may not even fire, for\n\t\t\t\t// example when the window receives focus again on click.\n\t\t\t\tonKeyUp={ this.onSelectionChange }\n\t\t\t\tonMouseUp={ this.onSelectionChange }\n\t\t\t\tonTouchEnd={ this.onSelectionChange }\n\t\t\t\t// Do not set the attribute if disabled.\n\t\t\t\tcontentEditable={ disabled ? undefined : true }\n\t\t\t\tsuppressContentEditableWarning={ ! disabled }\n\t\t\t/>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\t__unstableIsSelected: isSelected,\n\t\t\tchildren,\n\t\t\tallowedFormats,\n\t\t\twithoutInteractiveFormatting,\n\t\t\tformatTypes,\n\t\t\tforwardedRef,\n\t\t} = this.props;\n\t\tconst { activeFormats } = this.state;\n\n\t\tconst onFocus = () => {\n\t\t\tforwardedRef.current.focus();\n\t\t\tthis.applyRecord( this.record );\n\t\t};\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BoundaryStyle\n\t\t\t\t\tactiveFormats={ activeFormats }\n\t\t\t\t\tforwardedRef={ forwardedRef }\n\t\t\t\t/>\n\t\t\t\t<InlineWarning forwardedRef={ forwardedRef } />\n\t\t\t\t{ isSelected && (\n\t\t\t\t\t<FormatEdit\n\t\t\t\t\t\tallowedFormats={ allowedFormats }\n\t\t\t\t\t\twithoutInteractiveFormatting={\n\t\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={ this.record }\n\t\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\tformatTypes={ formatTypes }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ children &&\n\t\t\t\t\tchildren( {\n\t\t\t\t\t\tisSelected,\n\t\t\t\t\t\tvalue: this.record,\n\t\t\t\t\t\tonChange: this.onChange,\n\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\tEditable: this.Editable,\n\t\t\t\t\t} ) }\n\t\t\t\t{ ! children && <this.Editable /> }\n\t\t\t</>\n\t\t);\n\t}\n}\n\nRichText.defaultProps = {\n\tformat: 'string',\n\tvalue: '',\n};\n\nconst RichTextWrapper = compose( [ withSafeTimeout, withFormatTypes ] )(\n\tRichText\n);\n\n/**\n * Renders a rich content input, providing users with the option to format the\n * content.\n */\nexport default forwardRef( ( props, ref ) => {\n\treturn <RichTextWrapper { ...props } forwardedRef={ ref } />;\n} );\n"]}
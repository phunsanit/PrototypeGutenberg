{"version":3,"sources":["@wordpress/edit-navigation/src/index.js"],"names":["map","registerCoreBlocks","__experimentalRegisterExperimentalCoreBlocks","render","__","apiFetch","addQueryArgs","decodeEntities","Layout","fetchLinkSuggestions","search","perPage","path","per_page","type","posts","post","id","url","title","subtype","initialize","settings","process","env","GUTENBERG_PHASE","__experimentalFetchLinkSuggestions","document","getElementById"],"mappings":";;;;AAAA;;;AAGA,SAASA,GAAT,QAAoB,QAApB;AAEA;;;;AAGA,OAAO,oBAAP;AACA,SACCC,kBADD,EAECC,4CAFD,QAGO,0BAHP;AAIA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA;;;;AAGA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA;;;;;;;;;;;;;AAYA,IAAMC,oBAAoB;AAAA,sEAAG,iBAAQC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,4EAAmC,EAAnC,wBAAkBC,OAAlB,EAAkBA,OAAlB,8BAA4B,EAA5B;AAAA;AAAA,mBACRN,QAAQ,CAAE;AAC7BO,cAAAA,IAAI,EAAEN,YAAY,CAAE,eAAF,EAAmB;AACpCI,gBAAAA,MAAM,EAANA,MADoC;AAEpCG,gBAAAA,QAAQ,EAAEF,OAF0B;AAGpCG,gBAAAA,IAAI,EAAE;AAH8B,eAAnB;AADW,aAAF,CADA;;AAAA;AACtBC,YAAAA,KADsB;AAAA,6CASrBf,GAAG,CAAEe,KAAF,EAAS,UAAEC,IAAF;AAAA,qBAAc;AAChCC,gBAAAA,EAAE,EAAED,IAAI,CAACC,EADuB;AAEhCC,gBAAAA,GAAG,EAAEF,IAAI,CAACE,GAFsB;AAGhCC,gBAAAA,KAAK,EAAEZ,cAAc,CAAES,IAAI,CAACG,KAAP,CAAd,IAAgCf,EAAE,CAAE,YAAF,CAHT;AAIhCU,gBAAAA,IAAI,EAAEE,IAAI,CAACI,OAAL,IAAgBJ,IAAI,CAACF;AAJK,eAAd;AAAA,aAAT,CATkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBL,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;AAiBA,OAAO,SAASY,UAAT,CAAqBJ,EAArB,EAAyBK,QAAzB,EAAoC;AAC1CrB,EAAAA,kBAAkB;;AAClB,MAAKsB,OAAO,CAACC,GAAR,CAAYC,eAAZ,KAAgC,CAArC,EAAyC;AACxCvB,IAAAA,4CAA4C,CAAEoB,QAAF,CAA5C;AACA;;AACDA,EAAAA,QAAQ,CAACI,kCAAT,GAA8CjB,oBAA9C;AACAN,EAAAA,MAAM,CACL,cAAC,MAAD;AAAQ,IAAA,mBAAmB,EAAGmB;AAA9B,IADK,EAELK,QAAQ,CAACC,cAAT,CAAyBX,EAAzB,CAFK,CAAN;AAIA","sourcesContent":["/**\n * External dependencies\n */\nimport { map } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport '@wordpress/notices';\nimport {\n\tregisterCoreBlocks,\n\t__experimentalRegisterExperimentalCoreBlocks,\n} from '@wordpress/block-library';\nimport { render } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport { decodeEntities } from '@wordpress/html-entities';\n\n/**\n * Internal dependencies\n */\nimport Layout from './components/layout';\n\n/**\n * Fetches link suggestions from the API. This function is an exact copy of a function found at:\n *\n * wordpress/editor/src/components/provider/index.js\n *\n * It seems like there is no suitable package to import this from. Ideally it would be either part of core-data.\n * Until we refactor it, just copying the code is the simplest solution.\n *\n * @param {Object} search\n * @param {number} perPage\n * @return {Promise<Object[]>} List of suggestions\n */\nconst fetchLinkSuggestions = async ( search, { perPage = 20 } = {} ) => {\n\tconst posts = await apiFetch( {\n\t\tpath: addQueryArgs( '/wp/v2/search', {\n\t\t\tsearch,\n\t\t\tper_page: perPage,\n\t\t\ttype: 'post',\n\t\t} ),\n\t} );\n\n\treturn map( posts, ( post ) => ( {\n\t\tid: post.id,\n\t\turl: post.url,\n\t\ttitle: decodeEntities( post.title ) || __( '(no title)' ),\n\t\ttype: post.subtype || post.type,\n\t} ) );\n};\n\nexport function initialize( id, settings ) {\n\tregisterCoreBlocks();\n\tif ( process.env.GUTENBERG_PHASE === 2 ) {\n\t\t__experimentalRegisterExperimentalCoreBlocks( settings );\n\t}\n\tsettings.__experimentalFetchLinkSuggestions = fetchLinkSuggestions;\n\trender(\n\t\t<Layout blockEditorSettings={ settings } />,\n\t\tdocument.getElementById( id )\n\t);\n}\n"]}
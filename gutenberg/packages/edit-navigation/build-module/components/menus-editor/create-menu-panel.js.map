{"version":3,"sources":["@wordpress/edit-navigation/src/components/menus-editor/create-menu-panel.js"],"names":["some","Button","Panel","PanelBody","TextControl","withFocusReturn","useDispatch","useSelect","useCallback","useEffect","useState","__","sprintf","window","DOMParser","noticeId","menuNameMatches","menuName","menu","name","toLowerCase","CreateMenuForm","onCancel","onCreateMenu","menus","setMenuName","isCreatingMenu","setIsCreatingMenu","menuSaveError","select","getLastEntitySaveError","saveMenu","createInfoNotice","createErrorNotice","removeNotice","document","parseFromString","message","errorText","body","textContent","id","createMenu","event","preventDefault","length","type","isDismissible"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { some } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tButton,\n\tPanel,\n\tPanelBody,\n\tTextControl,\n\twithFocusReturn,\n} from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useCallback, useEffect, useState } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nconst { DOMParser } = window;\n\nconst noticeId = 'edit-navigation-create-menu-error';\n\nconst menuNameMatches = ( menuName ) => ( menu ) =>\n\tmenu.name.toLowerCase() === menuName.toLowerCase();\n\nexport function CreateMenuForm( { onCancel, onCreateMenu, menus } ) {\n\tconst [ menuName, setMenuName ] = useState( '' );\n\tconst [ isCreatingMenu, setIsCreatingMenu ] = useState( false );\n\tconst menuSaveError = useSelect( ( select ) =>\n\t\tselect( 'core' ).getLastEntitySaveError( 'root', 'menu' )\n\t);\n\tconst { saveMenu } = useDispatch( 'core' );\n\tconst { createInfoNotice, createErrorNotice, removeNotice } = useDispatch(\n\t\t'core/notices'\n\t);\n\n\t// Handle REST API Error messages.\n\tuseEffect( () => {\n\t\tif ( menuSaveError ) {\n\t\t\t// Error messages from the REST API often contain HTML.\n\t\t\t// createErrorNotice does not support HTML in error text, so first\n\t\t\t// strip HTML out using DOMParser.\n\t\t\tconst document = new DOMParser().parseFromString(\n\t\t\t\tmenuSaveError.message,\n\t\t\t\t'text/html'\n\t\t\t);\n\t\t\tconst errorText = document.body.textContent || '';\n\t\t\tcreateErrorNotice( errorText, { id: noticeId } );\n\t\t}\n\t}, [ menuSaveError ] );\n\n\tconst createMenu = useCallback(\n\t\tasync ( event ) => {\n\t\t\t// Prevent form submission.\n\t\t\tevent.preventDefault();\n\n\t\t\t// Remove existing notices.\n\t\t\tremoveNotice( noticeId );\n\n\t\t\tif ( menuName.length === 0 ) {\n\t\t\t\t// Button is aria-disabled, do nothing.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Validate the menu name doesn't match an existing menu.\n\t\t\tif ( some( menus, menuNameMatches( menuName ) ) ) {\n\t\t\t\tconst message = sprintf(\n\t\t\t\t\t// translators: %s: the name of a menu.\n\t\t\t\t\t__(\n\t\t\t\t\t\t'The menu name %s conflicts with another menu name. Please try another.'\n\t\t\t\t\t),\n\t\t\t\t\tmenuName\n\t\t\t\t);\n\t\t\t\tcreateErrorNotice( message, { id: noticeId } );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsetIsCreatingMenu( true );\n\n\t\t\tconst menu = await saveMenu( { name: menuName } );\n\t\t\tif ( menu ) {\n\t\t\t\tcreateInfoNotice( __( 'Menu created' ), {\n\t\t\t\t\ttype: 'snackbar',\n\t\t\t\t\tisDismissible: true,\n\t\t\t\t} );\n\t\t\t\tonCreateMenu( menu.id );\n\t\t\t}\n\n\t\t\tsetIsCreatingMenu( false );\n\t\t},\n\t\t[ menuName, menus ]\n\t);\n\n\treturn (\n\t\t<Panel className=\"edit-navigation-menus-editor__create-menu-panel\">\n\t\t\t<PanelBody title={ __( 'Create navigation menu' ) }>\n\t\t\t\t<form onSubmit={ createMenu }>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\t// Disable reason - autoFocus is legitimate in this usage,\n\t\t\t\t\t\t// The first focusable on the form should be focused,\n\t\t\t\t\t\t// which is this element.\n\t\t\t\t\t\t// eslint-disable-next-line jsx-a11y/no-autofocus\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tlabel={ __( 'Menu name' ) }\n\t\t\t\t\t\tvalue={ menuName }\n\t\t\t\t\t\tonChange={ setMenuName }\n\t\t\t\t\t\tplaceholder={ __( 'Main Navigation' ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tisBusy={ isCreatingMenu }\n\t\t\t\t\t\tonClick={ createMenu }\n\t\t\t\t\t\taria-disabled={ menuName.length === 0 }\n\t\t\t\t\t\tisPrimary\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Create menu' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t\t{ onCancel && (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"edit-navigation-menus-editor__cancel-create-menu-button\"\n\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\tonClick={ onCancel }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Cancel' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t) }\n\t\t\t\t</form>\n\t\t\t</PanelBody>\n\t\t</Panel>\n\t);\n}\n\nexport default withFocusReturn( CreateMenuForm );\n"]}
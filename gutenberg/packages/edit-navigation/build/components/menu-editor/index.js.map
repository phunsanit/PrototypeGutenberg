{"version":3,"sources":["@wordpress/edit-navigation/src/components/menu-editor/index.js"],"names":["MenuEditor","menuId","blockEditorSettings","onDeleteMenu","blocks","setBlocks","saveBlocks","isLargeViewport","updatedBlocks","templateLock","hasFixedToolbar"],"mappings":";;;;;;;;;;;;;;;AAGA;;AAIA;;AAKA;;AACA;;AACA;;AACA;;;;;;AAEe,SAASA,UAAT,OAIX;AAAA,MAHHC,MAGG,QAHHA,MAGG;AAAA,MAFHC,mBAEG,QAFHA,mBAEG;AAAA,MADHC,YACG,QADHA,YACG;;AAAA,6BACuC,mCAAqBF,MAArB,CADvC;AAAA;AAAA,MACKG,MADL;AAAA,MACaC,SADb;AAAA,MACwBC,UADxB;;AAEH,MAAMC,eAAe,GAAG,+BAAkB,QAAlB,CAAxB;AAEA,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,KACC,4BAAC,yCAAD,CAA8B,QAA9B,OADD,EAEC,4BAAC,kBAAD,CAAqB,QAArB,OAFD,EAIC,4BAAC,gCAAD;AACC,IAAA,KAAK,EAAGH,MADT;AAEC,IAAA,OAAO,EAAG,iBAAEI,aAAF;AAAA,aAAqBH,SAAS,CAAEG,aAAF,CAA9B;AAAA,KAFX;AAGC,IAAA,QAAQ,EAAG,kBAAEA,aAAF;AAAA,aAAqBH,SAAS,CAAEG,aAAF,CAA9B;AAAA,KAHZ;AAIC,IAAA,QAAQ,oBACJN,mBADI;AAEPO,MAAAA,YAAY,EAAE,KAFP;AAGPC,MAAAA,eAAe,EAAE;AAHV;AAJT,KAUC,4BAAC,yCAAD,OAVD,EAWC,4BAAC,kBAAD;AAAqB,IAAA,UAAU,EAAGJ;AAAlC,IAXD,EAYC,4BAAC,iCAAD;AACC,IAAA,MAAM,EAAGF,MADV;AAEC,IAAA,WAAW,EAAGG;AAFf,IAZD,EAgBC,4BAAC,yBAAD;AACC,IAAA,UAAU,EAAGD,UADd;AAEC,IAAA,MAAM,EAAGL,MAFV;AAGC,IAAA,YAAY,EAAGE;AAHhB,IAhBD,CAJD,CADD;AA6BA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tBlockEditorKeyboardShortcuts,\n\tBlockEditorProvider,\n} from '@wordpress/block-editor';\nimport { useViewportMatch } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport useNavigationBlocks from './use-navigation-blocks';\nimport MenuEditorShortcuts from './shortcuts';\nimport BlockEditorPanel from './block-editor-panel';\nimport NavigationStructurePanel from './navigation-structure-panel';\n\nexport default function MenuEditor( {\n\tmenuId,\n\tblockEditorSettings,\n\tonDeleteMenu,\n} ) {\n\tconst [ blocks, setBlocks, saveBlocks ] = useNavigationBlocks( menuId );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\n\treturn (\n\t\t<div className=\"edit-navigation-menu-editor\">\n\t\t\t<BlockEditorKeyboardShortcuts.Register />\n\t\t\t<MenuEditorShortcuts.Register />\n\n\t\t\t<BlockEditorProvider\n\t\t\t\tvalue={ blocks }\n\t\t\t\tonInput={ ( updatedBlocks ) => setBlocks( updatedBlocks ) }\n\t\t\t\tonChange={ ( updatedBlocks ) => setBlocks( updatedBlocks ) }\n\t\t\t\tsettings={ {\n\t\t\t\t\t...blockEditorSettings,\n\t\t\t\t\ttemplateLock: 'all',\n\t\t\t\t\thasFixedToolbar: true,\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t<BlockEditorKeyboardShortcuts />\n\t\t\t\t<MenuEditorShortcuts saveBlocks={ saveBlocks } />\n\t\t\t\t<NavigationStructurePanel\n\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\tinitialOpen={ isLargeViewport }\n\t\t\t\t/>\n\t\t\t\t<BlockEditorPanel\n\t\t\t\t\tsaveBlocks={ saveBlocks }\n\t\t\t\t\tmenuId={ menuId }\n\t\t\t\t\tonDeleteMenu={ onDeleteMenu }\n\t\t\t\t/>\n\t\t\t</BlockEditorProvider>\n\t\t</div>\n\t);\n}\n"]}
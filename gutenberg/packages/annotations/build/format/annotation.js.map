{"version":3,"sources":["@wordpress/annotations/src/format/annotation.js"],"names":["FORMAT_NAME","ANNOTATION_ATTRIBUTE_PREFIX","STORE_KEY","applyAnnotations","record","annotations","forEach","annotation","start","end","text","length","className","source","id","type","attributes","removeAnnotations","retrieveAnnotationPositions","formats","positions","characterFormats","i","filter","format","replace","hasOwnProperty","updateAnnotationsWithPositions","removeAnnotation","updateAnnotationRange","currentAnnotation","position","name","title","tagName","edit","__experimentalGetPropsForEditableTreePreparation","select","richTextIdentifier","blockClientId","__experimentalGetAnnotationsForRichText","__experimentalCreatePrepareEditableTree","__experimentalGetPropsForEditableTreeChangeHandler","dispatch","__experimentalRemoveAnnotation","__experimentalUpdateAnnotationRange","__experimentalCreateOnChangeEditableValue","props"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { applyFormat, removeFormat } from '@wordpress/rich-text';\n\nconst FORMAT_NAME = 'core/annotation';\n\nconst ANNOTATION_ATTRIBUTE_PREFIX = 'annotation-text-';\nconst STORE_KEY = 'core/annotations';\n\n/**\n * Applies given annotations to the given record.\n *\n * @param {Object} record The record to apply annotations to.\n * @param {Array} annotations The annotation to apply.\n * @return {Object} A record with the annotations applied.\n */\nexport function applyAnnotations( record, annotations = [] ) {\n\tannotations.forEach( ( annotation ) => {\n\t\tlet { start, end } = annotation;\n\n\t\tif ( start > record.text.length ) {\n\t\t\tstart = record.text.length;\n\t\t}\n\n\t\tif ( end > record.text.length ) {\n\t\t\tend = record.text.length;\n\t\t}\n\n\t\tconst className = ANNOTATION_ATTRIBUTE_PREFIX + annotation.source;\n\t\tconst id = ANNOTATION_ATTRIBUTE_PREFIX + annotation.id;\n\n\t\trecord = applyFormat(\n\t\t\trecord,\n\t\t\t{\n\t\t\t\ttype: FORMAT_NAME,\n\t\t\t\tattributes: {\n\t\t\t\t\tclassName,\n\t\t\t\t\tid,\n\t\t\t\t},\n\t\t\t},\n\t\t\tstart,\n\t\t\tend\n\t\t);\n\t} );\n\n\treturn record;\n}\n\n/**\n * Removes annotations from the given record.\n *\n * @param {Object} record Record to remove annotations from.\n * @return {Object} The cleaned record.\n */\nexport function removeAnnotations( record ) {\n\treturn removeFormat( record, 'core/annotation', 0, record.text.length );\n}\n\n/**\n * Retrieves the positions of annotations inside an array of formats.\n *\n * @param {Array} formats Formats with annotations in there.\n * @return {Object} ID keyed positions of annotations.\n */\nfunction retrieveAnnotationPositions( formats ) {\n\tconst positions = {};\n\n\tformats.forEach( ( characterFormats, i ) => {\n\t\tcharacterFormats = characterFormats || [];\n\t\tcharacterFormats = characterFormats.filter(\n\t\t\t( format ) => format.type === FORMAT_NAME\n\t\t);\n\t\tcharacterFormats.forEach( ( format ) => {\n\t\t\tlet { id } = format.attributes;\n\t\t\tid = id.replace( ANNOTATION_ATTRIBUTE_PREFIX, '' );\n\n\t\t\tif ( ! positions.hasOwnProperty( id ) ) {\n\t\t\t\tpositions[ id ] = {\n\t\t\t\t\tstart: i,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Annotations refer to positions between characters.\n\t\t\t// Formats refer to the character themselves.\n\t\t\t// So we need to adjust for that here.\n\t\t\tpositions[ id ].end = i + 1;\n\t\t} );\n\t} );\n\n\treturn positions;\n}\n\n/**\n * Updates annotations in the state based on positions retrieved from RichText.\n *\n * @param {Array}    annotations                   The annotations that are currently applied.\n * @param {Array}    positions                     The current positions of the given annotations.\n * @param {Object}   actions\n * @param {Function} actions.removeAnnotation      Function to remove an annotation from the state.\n * @param {Function} actions.updateAnnotationRange Function to update an annotation range in the state.\n */\nfunction updateAnnotationsWithPositions(\n\tannotations,\n\tpositions,\n\t{ removeAnnotation, updateAnnotationRange }\n) {\n\tannotations.forEach( ( currentAnnotation ) => {\n\t\tconst position = positions[ currentAnnotation.id ];\n\t\t// If we cannot find an annotation, delete it.\n\t\tif ( ! position ) {\n\t\t\t// Apparently the annotation has been removed, so remove it from the state:\n\t\t\t// Remove...\n\t\t\tremoveAnnotation( currentAnnotation.id );\n\t\t\treturn;\n\t\t}\n\n\t\tconst { start, end } = currentAnnotation;\n\t\tif ( start !== position.start || end !== position.end ) {\n\t\t\tupdateAnnotationRange(\n\t\t\t\tcurrentAnnotation.id,\n\t\t\t\tposition.start,\n\t\t\t\tposition.end\n\t\t\t);\n\t\t}\n\t} );\n}\n\nexport const annotation = {\n\tname: FORMAT_NAME,\n\ttitle: __( 'Annotation' ),\n\ttagName: 'mark',\n\tclassName: 'annotation-text',\n\tattributes: {\n\t\tclassName: 'class',\n\t\tid: 'id',\n\t},\n\tedit() {\n\t\treturn null;\n\t},\n\t__experimentalGetPropsForEditableTreePreparation(\n\t\tselect,\n\t\t{ richTextIdentifier, blockClientId }\n\t) {\n\t\treturn {\n\t\t\tannotations: select(\n\t\t\t\tSTORE_KEY\n\t\t\t).__experimentalGetAnnotationsForRichText(\n\t\t\t\tblockClientId,\n\t\t\t\trichTextIdentifier\n\t\t\t),\n\t\t};\n\t},\n\t__experimentalCreatePrepareEditableTree( { annotations } ) {\n\t\treturn ( formats, text ) => {\n\t\t\tif ( annotations.length === 0 ) {\n\t\t\t\treturn formats;\n\t\t\t}\n\n\t\t\tlet record = { formats, text };\n\t\t\trecord = applyAnnotations( record, annotations );\n\t\t\treturn record.formats;\n\t\t};\n\t},\n\t__experimentalGetPropsForEditableTreeChangeHandler( dispatch ) {\n\t\treturn {\n\t\t\tremoveAnnotation: dispatch( STORE_KEY )\n\t\t\t\t.__experimentalRemoveAnnotation,\n\t\t\tupdateAnnotationRange: dispatch( STORE_KEY )\n\t\t\t\t.__experimentalUpdateAnnotationRange,\n\t\t};\n\t},\n\t__experimentalCreateOnChangeEditableValue( props ) {\n\t\treturn ( formats ) => {\n\t\t\tconst positions = retrieveAnnotationPositions( formats );\n\t\t\tconst {\n\t\t\t\tremoveAnnotation,\n\t\t\t\tupdateAnnotationRange,\n\t\t\t\tannotations,\n\t\t\t} = props;\n\n\t\t\tupdateAnnotationsWithPositions( annotations, positions, {\n\t\t\t\tremoveAnnotation,\n\t\t\t\tupdateAnnotationRange,\n\t\t\t} );\n\t\t};\n\t},\n};\n"]}
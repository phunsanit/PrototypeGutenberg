{"version":3,"sources":["@wordpress/block-library/src/buttons/edit.native.js"],"names":["View","InnerBlocks","__experimentalAlignmentHookSettingsProvider","AlignmentHookSettingsProvider","withSelect","withDispatch","compose","useResizeObserver","createBlock","useState","useEffect","name","buttonBlockName","styles","ALLOWED_BLOCKS","BUTTONS_TEMPLATE","ButtonsEdit","isSelected","attributes","onDelete","onAddNextButton","shouldDelete","isInnerButtonSelected","align","resizeObserver","sizes","maxWidth","setMaxWidth","shouldRenderFooterAppender","spacing","marginLeft","margins","parent","marginRight","width","renderFooterAppender","appenderContainer","alignmentHooksSetting","isEmbedButton","undefined","select","clientId","getBlockCount","getBlockParents","getSelectedBlockClientId","selectedBlockClientId","selectedBlockParents","dispatch","registry","replaceInnerBlocks","selectBlock","removeBlock","getBlocks","getBlockOrder","innerBlocks","selectedId","order","selectedButtonIndex","findIndex","i","index","length","insertedBlock","splice"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n/**\n * WordPress dependencies\n */\nimport {\n\tInnerBlocks,\n\t__experimentalAlignmentHookSettingsProvider as AlignmentHookSettingsProvider,\n} from '@wordpress/block-editor';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose, useResizeObserver } from '@wordpress/compose';\nimport { createBlock } from '@wordpress/blocks';\nimport { useState, useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { name as buttonBlockName } from '../button/';\nimport styles from './editor.scss';\n\nconst ALLOWED_BLOCKS = [ buttonBlockName ];\nconst BUTTONS_TEMPLATE = [ [ 'core/button' ] ];\n\nfunction ButtonsEdit( {\n\tisSelected,\n\tattributes,\n\tonDelete,\n\tonAddNextButton,\n\tshouldDelete,\n\tisInnerButtonSelected,\n} ) {\n\tconst { align } = attributes;\n\tconst [ resizeObserver, sizes ] = useResizeObserver();\n\tconst [ maxWidth, setMaxWidth ] = useState( 0 );\n\tconst shouldRenderFooterAppender = isSelected || isInnerButtonSelected;\n\tconst { marginLeft: spacing } = styles.spacing;\n\n\tuseEffect( () => {\n\t\tconst margins = 2 * styles.parent.marginRight;\n\t\tconst { width } = sizes || {};\n\t\tif ( width ) {\n\t\t\tsetMaxWidth( width - margins );\n\t\t}\n\t}, [ sizes ] );\n\n\tfunction renderFooterAppender() {\n\t\treturn (\n\t\t\t<View style={ styles.appenderContainer }>\n\t\t\t\t<InnerBlocks.ButtonBlockAppender\n\t\t\t\t\tisFloating={ true }\n\t\t\t\t\tonAddBlock={ onAddNextButton }\n\t\t\t\t/>\n\t\t\t</View>\n\t\t);\n\t}\n\n\t// Inside buttons block alignment options are not supported.\n\tconst alignmentHooksSetting = {\n\t\tisEmbedButton: true,\n\t};\n\n\treturn (\n\t\t<AlignmentHookSettingsProvider value={ alignmentHooksSetting }>\n\t\t\t{ resizeObserver }\n\t\t\t<InnerBlocks\n\t\t\t\tallowedBlocks={ ALLOWED_BLOCKS }\n\t\t\t\ttemplate={ BUTTONS_TEMPLATE }\n\t\t\t\trenderFooterAppender={\n\t\t\t\t\tshouldRenderFooterAppender && renderFooterAppender\n\t\t\t\t}\n\t\t\t\t__experimentalMoverDirection=\"horizontal\"\n\t\t\t\thorizontalAlignment={ align }\n\t\t\t\tonDeleteBlock={ shouldDelete ? onDelete : undefined }\n\t\t\t\tonAddBlock={ onAddNextButton }\n\t\t\t\tparentWidth={ maxWidth }\n\t\t\t\tmarginHorizontal={ spacing }\n\t\t\t\tmarginVertical={ spacing }\n\t\t\t/>\n\t\t</AlignmentHookSettingsProvider>\n\t);\n}\n\nexport default compose(\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst {\n\t\t\tgetBlockCount,\n\t\t\tgetBlockParents,\n\t\t\tgetSelectedBlockClientId,\n\t\t} = select( 'core/block-editor' );\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\tconst selectedBlockParents = getBlockParents(\n\t\t\tselectedBlockClientId,\n\t\t\ttrue\n\t\t);\n\n\t\treturn {\n\t\t\t// The purpose of `shouldDelete` check is giving the ability to pass to\n\t\t\t// mobile toolbar function called `onDelete` which removes the whole\n\t\t\t// `Buttons` container along with the last inner button when\n\t\t\t// there is exactly one button.\n\t\t\tshouldDelete: getBlockCount( clientId ) === 1,\n\t\t\tisInnerButtonSelected: selectedBlockParents[ 0 ] === clientId,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, { clientId }, registry ) => {\n\t\tconst { replaceInnerBlocks, selectBlock, removeBlock } = dispatch(\n\t\t\t'core/block-editor'\n\t\t);\n\t\tconst { getBlocks, getBlockOrder } = registry.select(\n\t\t\t'core/block-editor'\n\t\t);\n\t\tconst innerBlocks = getBlocks( clientId );\n\n\t\treturn {\n\t\t\t// The purpose of `onAddNextButton` is giving the ability to automatically\n\t\t\t// adding `Button` inside `Buttons` block on the appender press event.\n\t\t\tonAddNextButton: ( selectedId ) => {\n\t\t\t\tconst order = getBlockOrder( clientId );\n\t\t\t\tconst selectedButtonIndex = order.findIndex(\n\t\t\t\t\t( i ) => i === selectedId\n\t\t\t\t);\n\n\t\t\t\tconst index =\n\t\t\t\t\tselectedButtonIndex === -1\n\t\t\t\t\t\t? order.length + 1\n\t\t\t\t\t\t: selectedButtonIndex;\n\n\t\t\t\tconst insertedBlock = createBlock( 'core/button' );\n\n\t\t\t\tinnerBlocks.splice( index + 1, 0, insertedBlock );\n\n\t\t\t\treplaceInnerBlocks( clientId, innerBlocks, true );\n\t\t\t\tselectBlock( insertedBlock.clientId );\n\t\t\t},\n\t\t\tonDelete: () => {\n\t\t\t\tremoveBlock( clientId );\n\t\t\t},\n\t\t};\n\t} )\n)( ButtonsEdit );\n"]}
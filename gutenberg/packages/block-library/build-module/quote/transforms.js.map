{"version":3,"sources":["@wordpress/block-library/src/quote/transforms.js"],"names":["createBlock","create","join","split","toHTMLString","transforms","from","type","isMultiBlock","blocks","transform","attributes","value","map","content","html","multilineTag","citation","prefix","isMatch","node","isParagraphOrSingleCite","hasCitation","child","nodeName","Array","childNodes","every","schema","phrasingContentSchema","blockquote","children","p","cite","to","paragraphs","push","piece","length","attrs","pieces","headingBlock","quotePieces","slice","quoteBlock"],"mappings":";;;;;;;;AAAA;;;AAGA,SAASA,WAAT,QAA4B,mBAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,sBAAlD;AAEA,IAAMC,UAAU,GAAG;AAClBC,EAAAA,IAAI,EAAE,CACL;AACCC,IAAAA,IAAI,EAAE,OADP;AAECC,IAAAA,YAAY,EAAE,IAFf;AAGCC,IAAAA,MAAM,EAAE,CAAE,gBAAF,CAHT;AAICC,IAAAA,SAAS,EAAE,mBAAEC,UAAF,EAAkB;AAC5B,aAAOX,WAAW,CAAE,YAAF,EAAgB;AACjCY,QAAAA,KAAK,EAAER,YAAY,CAAE;AACpBQ,UAAAA,KAAK,EAAEV,IAAI,CACVS,UAAU,CAACE,GAAX,CAAgB;AAAA,gBAAIC,OAAJ,QAAIA,OAAJ;AAAA,mBACfb,MAAM,CAAE;AAAEc,cAAAA,IAAI,EAAED;AAAR,aAAF,CADS;AAAA,WAAhB,CADU,EAIV,QAJU,CADS;AAOpBE,UAAAA,YAAY,EAAE;AAPM,SAAF;AADc,OAAhB,CAAlB;AAWA;AAhBF,GADK,EAmBL;AACCT,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,cAAF,CAFT;AAGCC,IAAAA,SAAS,EAAE,0BAAmB;AAAA,UAAfI,OAAe,SAAfA,OAAe;AAC7B,aAAOd,WAAW,CAAE,YAAF,EAAgB;AACjCY,QAAAA,KAAK,eAASE,OAAT;AAD4B,OAAhB,CAAlB;AAGA;AAPF,GAnBK,EA4BL;AACCP,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,gBAAF,CAFT;AAGCC,IAAAA,SAAS,EAAE;AAAA,UAAIE,KAAJ,SAAIA,KAAJ;AAAA,UAAWK,QAAX,SAAWA,QAAX;AAAA,aACVjB,WAAW,CAAE,YAAF,EAAgB;AAC1BY,QAAAA,KAAK,EAALA,KAD0B;AAE1BK,QAAAA,QAAQ,EAARA;AAF0B,OAAhB,CADD;AAAA;AAHZ,GA5BK,EAqCL;AACCV,IAAAA,IAAI,EAAE,QADP;AAECW,IAAAA,MAAM,EAAE,GAFT;AAGCR,IAAAA,SAAS,EAAE,mBAAEI,OAAF,EAAe;AACzB,aAAOd,WAAW,CAAE,YAAF,EAAgB;AACjCY,QAAAA,KAAK,eAASE,OAAT;AAD4B,OAAhB,CAAlB;AAGA;AAPF,GArCK,EA8CL;AACCP,IAAAA,IAAI,EAAE,KADP;AAECY,IAAAA,OAAO,EAAE,iBAAEC,IAAF,EAAY;AACpB,UAAMC,uBAAuB,GAAK,YAAM;AACvC,YAAIC,WAAW,GAAG,KAAlB;AACA,eAAO,UAAEC,KAAF,EAAa;AACnB;AACA,cAAKA,KAAK,CAACC,QAAN,KAAmB,GAAxB,EAA8B;AAC7B,mBAAO,IAAP;AACA,WAJkB,CAKnB;;;AACA,cAAK,CAAEF,WAAF,IAAiBC,KAAK,CAACC,QAAN,KAAmB,MAAzC,EAAkD;AACjDF,YAAAA,WAAW,GAAG,IAAd;AACA,mBAAO,IAAP;AACA;AACD,SAVD;AAWA,OAb+B,EAAhC;;AAcA,aACCF,IAAI,CAACI,QAAL,KAAkB,YAAlB,IACA;AACA;AACAC,MAAAA,KAAK,CAACnB,IAAN,CAAYc,IAAI,CAACM,UAAjB,EAA8BC,KAA9B,CACCN,uBADD,CAJD;AAQA,KAzBF;AA0BCO,IAAAA,MAAM,EAAE;AAAA,UAAIC,qBAAJ,SAAIA,qBAAJ;AAAA,aAAmC;AAC1CC,QAAAA,UAAU,EAAE;AACXC,UAAAA,QAAQ,EAAE;AACTC,YAAAA,CAAC,EAAE;AACFD,cAAAA,QAAQ,EAAEF;AADR,aADM;AAITI,YAAAA,IAAI,EAAE;AACLF,cAAAA,QAAQ,EAAEF;AADL;AAJG;AADC;AAD8B,OAAnC;AAAA;AA1BT,GA9CK,CADY;AAuFlBK,EAAAA,EAAE,EAAE,CACH;AACC3B,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,gBAAF,CAFT;AAGCC,IAAAA,SAAS,EAAE,0BAA2B;AAAA,UAAvBE,KAAuB,SAAvBA,KAAuB;AAAA,UAAhBK,QAAgB,SAAhBA,QAAgB;AACrC,UAAMkB,UAAU,GAAG,EAAnB;;AACA,UAAKvB,KAAK,IAAIA,KAAK,KAAK,SAAxB,EAAoC;AACnCuB,QAAAA,UAAU,CAACC,IAAX,OAAAD,UAAU,qBACNhC,KAAK,CACPF,MAAM,CAAE;AAAEc,UAAAA,IAAI,EAAEH,KAAR;AAAeI,UAAAA,YAAY,EAAE;AAA7B,SAAF,CADC,EAEP,QAFO,CAAL,CAGDH,GAHC,CAGI,UAAEwB,KAAF;AAAA,iBACNrC,WAAW,CAAE,gBAAF,EAAoB;AAC9Bc,YAAAA,OAAO,EAAEV,YAAY,CAAE;AAAEQ,cAAAA,KAAK,EAAEyB;AAAT,aAAF;AADS,WAApB,CADL;AAAA,SAHJ,CADM,EAAV;AAUA;;AACD,UAAKpB,QAAQ,IAAIA,QAAQ,KAAK,SAA9B,EAA0C;AACzCkB,QAAAA,UAAU,CAACC,IAAX,CACCpC,WAAW,CAAE,gBAAF,EAAoB;AAC9Bc,UAAAA,OAAO,EAAEG;AADqB,SAApB,CADZ;AAKA;;AAED,UAAKkB,UAAU,CAACG,MAAX,KAAsB,CAA3B,EAA+B;AAC9B,eAAOtC,WAAW,CAAE,gBAAF,EAAoB;AACrCc,UAAAA,OAAO,EAAE;AAD4B,SAApB,CAAlB;AAGA;;AACD,aAAOqB,UAAP;AACA;AA/BF,GADG,EAmCH;AACC5B,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,cAAF,CAFT;AAGCC,IAAAA,SAAS,EAAE,0BAAqC;AAAA,UAAjCE,KAAiC,SAAjCA,KAAiC;AAAA,UAA1BK,QAA0B,SAA1BA,QAA0B;AAAA,UAAbsB,KAAa;;AAC/C;AACA;AACA;AACA,UAAK3B,KAAK,KAAK,SAAf,EAA2B;AAC1B,eAAOZ,WAAW,CAAE,cAAF,EAAkB;AACnCc,UAAAA,OAAO,EAAEG;AAD0B,SAAlB,CAAlB;AAGA;;AAED,UAAMuB,MAAM,GAAGrC,KAAK,CACnBF,MAAM,CAAE;AAAEc,QAAAA,IAAI,EAAEH,KAAR;AAAeI,QAAAA,YAAY,EAAE;AAA7B,OAAF,CADa,EAEnB,QAFmB,CAApB;AAKA,UAAMyB,YAAY,GAAGzC,WAAW,CAAE,cAAF,EAAkB;AACjDc,QAAAA,OAAO,EAAEV,YAAY,CAAE;AAAEQ,UAAAA,KAAK,EAAE4B,MAAM,CAAE,CAAF;AAAf,SAAF;AAD4B,OAAlB,CAAhC;;AAIA,UAAK,CAAEvB,QAAF,IAAcuB,MAAM,CAACF,MAAP,KAAkB,CAArC,EAAyC;AACxC,eAAOG,YAAP;AACA;;AAED,UAAMC,WAAW,GAAGF,MAAM,CAACG,KAAP,CAAc,CAAd,CAApB;AAEA,UAAMC,UAAU,GAAG5C,WAAW,CAAE,YAAF,oBAC1BuC,KAD0B;AAE7BtB,QAAAA,QAAQ,EAARA,QAF6B;AAG7BL,QAAAA,KAAK,EAAER,YAAY,CAAE;AACpBQ,UAAAA,KAAK,EAAE8B,WAAW,CAACJ,MAAZ,GACJpC,IAAI,CAAEsC,MAAM,CAACG,KAAP,CAAc,CAAd,CAAF,EAAqB,QAArB,CADA,GAEJ1C,MAAM,EAHW;AAIpBe,UAAAA,YAAY,EAAE;AAJM,SAAF;AAHU,SAA9B;AAWA,aAAO,CAAEyB,YAAF,EAAgBG,UAAhB,CAAP;AACA;AAxCF,GAnCG,EA8EH;AACCrC,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,gBAAF,CAFT;AAGCC,IAAAA,SAAS,EAAE,0BAA2B;AAAA,UAAvBE,KAAuB,SAAvBA,KAAuB;AAAA,UAAhBK,QAAgB,SAAhBA,QAAgB;AACrC,aAAOjB,WAAW,CAAE,gBAAF,EAAoB;AACrCY,QAAAA,KAAK,EAALA,KADqC;AAErCK,QAAAA,QAAQ,EAARA;AAFqC,OAApB,CAAlB;AAIA;AARF,GA9EG;AAvFc,CAAnB;AAkLA,eAAeZ,UAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport { create, join, split, toHTMLString } from '@wordpress/rich-text';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tisMultiBlock: true,\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( attributes ) => {\n\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: join(\n\t\t\t\t\t\t\tattributes.map( ( { content } ) =>\n\t\t\t\t\t\t\t\tcreate( { html: content } )\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t'\\u2028'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/heading' ],\n\t\t\ttransform: ( { content } ) => {\n\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\tvalue: `<p>${ content }</p>`,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/pullquote' ],\n\t\t\ttransform: ( { value, citation } ) =>\n\t\t\t\tcreateBlock( 'core/quote', {\n\t\t\t\t\tvalue,\n\t\t\t\t\tcitation,\n\t\t\t\t} ),\n\t\t},\n\t\t{\n\t\t\ttype: 'prefix',\n\t\t\tprefix: '>',\n\t\t\ttransform: ( content ) => {\n\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\tvalue: `<p>${ content }</p>`,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'raw',\n\t\t\tisMatch: ( node ) => {\n\t\t\t\tconst isParagraphOrSingleCite = ( () => {\n\t\t\t\t\tlet hasCitation = false;\n\t\t\t\t\treturn ( child ) => {\n\t\t\t\t\t\t// Child is a paragraph.\n\t\t\t\t\t\tif ( child.nodeName === 'P' ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Child is a cite and no other cite child exists before it.\n\t\t\t\t\t\tif ( ! hasCitation && child.nodeName === 'CITE' ) {\n\t\t\t\t\t\t\thasCitation = true;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t} )();\n\t\t\t\treturn (\n\t\t\t\t\tnode.nodeName === 'BLOCKQUOTE' &&\n\t\t\t\t\t// The quote block can only handle multiline paragraph\n\t\t\t\t\t// content with an optional cite child.\n\t\t\t\t\tArray.from( node.childNodes ).every(\n\t\t\t\t\t\tisParagraphOrSingleCite\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t},\n\t\t\tschema: ( { phrasingContentSchema } ) => ( {\n\t\t\t\tblockquote: {\n\t\t\t\t\tchildren: {\n\t\t\t\t\t\tp: {\n\t\t\t\t\t\t\tchildren: phrasingContentSchema,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcite: {\n\t\t\t\t\t\t\tchildren: phrasingContentSchema,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} ),\n\t\t},\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( { value, citation } ) => {\n\t\t\t\tconst paragraphs = [];\n\t\t\t\tif ( value && value !== '<p></p>' ) {\n\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\t...split(\n\t\t\t\t\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t\t\t'\\u2028'\n\t\t\t\t\t\t).map( ( piece ) =>\n\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\tcontent: toHTMLString( { value: piece } ),\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif ( citation && citation !== '<p></p>' ) {\n\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif ( paragraphs.length === 0 ) {\n\t\t\t\t\treturn createBlock( 'core/paragraph', {\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn paragraphs;\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/heading' ],\n\t\t\ttransform: ( { value, citation, ...attrs } ) => {\n\t\t\t\t// If there is no quote content, use the citation as the\n\t\t\t\t// content of the resulting heading. A nonexistent citation\n\t\t\t\t// will result in an empty heading.\n\t\t\t\tif ( value === '<p></p>' ) {\n\t\t\t\t\treturn createBlock( 'core/heading', {\n\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tconst pieces = split(\n\t\t\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t'\\u2028'\n\t\t\t\t);\n\n\t\t\t\tconst headingBlock = createBlock( 'core/heading', {\n\t\t\t\t\tcontent: toHTMLString( { value: pieces[ 0 ] } ),\n\t\t\t\t} );\n\n\t\t\t\tif ( ! citation && pieces.length === 1 ) {\n\t\t\t\t\treturn headingBlock;\n\t\t\t\t}\n\n\t\t\t\tconst quotePieces = pieces.slice( 1 );\n\n\t\t\t\tconst quoteBlock = createBlock( 'core/quote', {\n\t\t\t\t\t...attrs,\n\t\t\t\t\tcitation,\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: quotePieces.length\n\t\t\t\t\t\t\t? join( pieces.slice( 1 ), '\\u2028' )\n\t\t\t\t\t\t\t: create(),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t} );\n\n\t\t\t\treturn [ headingBlock, quoteBlock ];\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/pullquote' ],\n\t\t\ttransform: ( { value, citation } ) => {\n\t\t\t\treturn createBlock( 'core/pullquote', {\n\t\t\t\t\tvalue,\n\t\t\t\t\tcitation,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}
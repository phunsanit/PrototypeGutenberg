{"version":3,"sources":["@wordpress/block-library/src/post-date/edit.js"],"names":["useEntityProp","useEntityId","useState","__experimentalGetSettings","dateI18n","BlockControls","InspectorControls","ToolbarGroup","ToolbarButton","Popover","DateTimePicker","PanelBody","CustomSelectControl","__","PostDateEditor","format","setAttributes","siteFormat","date","setDate","isPickerOpen","setIsPickerOpen","settings","is12Hour","test","formats","time","toLowerCase","replace","split","reverse","join","formatOptions","Object","values","map","formatOption","key","name","resolvedFormat","_isPickerOpen","bind","selectedItem","find","option","PostDateEdit","attributes"],"mappings":";;;AAAA;;;AAGA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,sBAA3C;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,yBAAT,EAAoCC,QAApC,QAAoD,iBAApD;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,yBAAjD;AACA,SACCC,YADD,EAECC,aAFD,EAGCC,OAHD,EAICC,cAJD,EAKCC,SALD,EAMCC,mBAND,QAOO,uBAPP;AAQA,SAASC,EAAT,QAAmB,iBAAnB;;AAEA,SAASC,cAAT,OAAqD;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;AAAA,MAAlBC,aAAkB,QAAlBA,aAAkB;;AAAA,uBAC7BhB,aAAa,CAAE,MAAF,EAAU,MAAV,EAAkB,aAAlB,CADgB;AAAA;AAAA,MAC5CiB,UAD4C;;AAAA,wBAE1BjB,aAAa,CAAE,UAAF,EAAc,MAAd,EAAsB,MAAtB,CAFa;AAAA;AAAA,MAE5CkB,IAF4C;AAAA,MAEtCC,OAFsC;;AAAA,kBAGVjB,QAAQ,CAAE,KAAF,CAHE;AAAA;AAAA,MAG5CkB,YAH4C;AAAA,MAG9BC,eAH8B;;AAIpD,MAAMC,QAAQ,GAAGnB,yBAAyB,EAA1C,CAJoD,CAKpD;AACA;;;AACA,MAAMoB,QAAQ,GAAG,WAAWC,IAAX,CAChBF,QAAQ,CAACG,OAAT,CAAiBC,IAAjB,CACEC,WADF,GACgB;AADhB,GAEEC,OAFF,CAEW,OAFX,EAEoB,EAFpB,EAEyB;AAFzB,GAGEC,KAHF,CAGS,EAHT,EAIEC,OAJF,GAKEC,IALF,CAKQ,EALR,CADgB,CAMH;AANG,GAAjB;AAQA,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAeZ,QAAQ,CAACG,OAAxB,EAAkCU,GAAlC,CACrB,UAAEC,YAAF;AAAA,WAAsB;AACrBC,MAAAA,GAAG,EAAED,YADgB;AAErBE,MAAAA,IAAI,EAAElC,QAAQ,CAAEgC,YAAF,EAAgBlB,IAAhB;AAFO,KAAtB;AAAA,GADqB,CAAtB;AAMA,MAAMqB,cAAc,GAAGxB,MAAM,IAAIE,UAAV,IAAwBK,QAAQ,CAACG,OAAT,CAAiBP,IAAhE;AACA,SAAOA,IAAI,GACV;AAAM,IAAA,QAAQ,EAAGd,QAAQ,CAAE,GAAF,EAAOc,IAAP;AAAzB,KACC,cAAC,aAAD,QACC,cAAC,YAAD,QACC,cAAC,aAAD;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,KAAK,EAAGL,EAAE,CAAE,aAAF,CAFX;AAGC,IAAA,OAAO,EAAG;AAAA,aACTQ,eAAe,CACd,UAAEmB,aAAF;AAAA,eAAqB,CAAEA,aAAvB;AAAA,OADc,CADN;AAAA;AAHX,IADD,CADD,CADD,EAcGpC,QAAQ,CAAEmC,cAAF,EAAkBrB,IAAlB,CAdX,EAeGE,YAAY,IACb,cAAC,OAAD;AAAS,IAAA,OAAO,EAAGC,eAAe,CAACoB,IAAhB,CAAsB,IAAtB,EAA4B,KAA5B;AAAnB,KACC,cAAC,cAAD;AACC,IAAA,WAAW,EAAGvB,IADf;AAEC,IAAA,QAAQ,EAAGC,OAFZ;AAGC,IAAA,QAAQ,EAAGI;AAHZ,IADD,CAhBF,EAwBC,cAAC,iBAAD,QACC,cAAC,SAAD;AAAW,IAAA,KAAK,EAAGV,EAAE,CAAE,iBAAF;AAArB,KACC,cAAC,mBAAD;AACC,IAAA,mBAAmB,MADpB;AAEC,IAAA,KAAK,EAAGA,EAAE,CAAE,aAAF,CAFX;AAGC,IAAA,OAAO,EAAGmB,aAHX;AAIC,IAAA,QAAQ,EAAG;AAAA,UAAIU,YAAJ,SAAIA,YAAJ;AAAA,aACV1B,aAAa,CAAE;AACdD,QAAAA,MAAM,EAAE2B,YAAY,CAACL;AADP,OAAF,CADH;AAAA,KAJZ;AASC,IAAA,KAAK,EAAGL,aAAa,CAACW,IAAd,CACP,UAAEC,MAAF;AAAA,aAAcA,MAAM,CAACP,GAAP,KAAeE,cAA7B;AAAA,KADO;AATT,IADD,CADD,CAxBD,CADU,GA4CV1B,EAAE,CAAE,SAAF,CA5CH;AA8CA;;AAED,eAAe,SAASgC,YAAT,QAGX;AAAA,MAFW9B,MAEX,SAFH+B,UAEG,CAFW/B,MAEX;AAAA,MADHC,aACG,SADHA,aACG;;AACH,MAAK,CAAEf,WAAW,CAAE,UAAF,EAAc,MAAd,CAAlB,EAA2C;AAC1C,WAAO,yBAAK,eAAL,CAAP;AACA;;AACD,SAAO,cAAC,cAAD;AAAgB,IAAA,MAAM,EAAGc,MAAzB;AAAkC,IAAA,aAAa,EAAGC;AAAlD,IAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEntityProp, useEntityId } from '@wordpress/core-data';\nimport { useState } from '@wordpress/element';\nimport { __experimentalGetSettings, dateI18n } from '@wordpress/date';\nimport { BlockControls, InspectorControls } from '@wordpress/block-editor';\nimport {\n\tToolbarGroup,\n\tToolbarButton,\n\tPopover,\n\tDateTimePicker,\n\tPanelBody,\n\tCustomSelectControl,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\n\nfunction PostDateEditor( { format, setAttributes } ) {\n\tconst [ siteFormat ] = useEntityProp( 'root', 'site', 'date_format' );\n\tconst [ date, setDate ] = useEntityProp( 'postType', 'post', 'date' );\n\tconst [ isPickerOpen, setIsPickerOpen ] = useState( false );\n\tconst settings = __experimentalGetSettings();\n\t// To know if the current time format is a 12 hour time, look for \"a\".\n\t// Also make sure this \"a\" is not escaped by a \"/\".\n\tconst is12Hour = /a(?!\\\\)/i.test(\n\t\tsettings.formats.time\n\t\t\t.toLowerCase() // Test only for the lower case \"a\".\n\t\t\t.replace( /\\\\\\\\/g, '' ) // Replace \"//\" with empty strings.\n\t\t\t.split( '' )\n\t\t\t.reverse()\n\t\t\t.join( '' ) // Reverse the string and test for \"a\" not followed by a slash.\n\t);\n\tconst formatOptions = Object.values( settings.formats ).map(\n\t\t( formatOption ) => ( {\n\t\t\tkey: formatOption,\n\t\t\tname: dateI18n( formatOption, date ),\n\t\t} )\n\t);\n\tconst resolvedFormat = format || siteFormat || settings.formats.date;\n\treturn date ? (\n\t\t<time dateTime={ dateI18n( 'c', date ) }>\n\t\t\t<BlockControls>\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ticon=\"edit\"\n\t\t\t\t\t\ttitle={ __( 'Change Date' ) }\n\t\t\t\t\t\tonClick={ () =>\n\t\t\t\t\t\t\tsetIsPickerOpen(\n\t\t\t\t\t\t\t\t( _isPickerOpen ) => ! _isPickerOpen\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</ToolbarGroup>\n\t\t\t</BlockControls>\n\t\t\t{ dateI18n( resolvedFormat, date ) }\n\t\t\t{ isPickerOpen && (\n\t\t\t\t<Popover onClose={ setIsPickerOpen.bind( null, false ) }>\n\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\tcurrentDate={ date }\n\t\t\t\t\t\tonChange={ setDate }\n\t\t\t\t\t\tis12Hour={ is12Hour }\n\t\t\t\t\t/>\n\t\t\t\t</Popover>\n\t\t\t) }\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Format settings' ) }>\n\t\t\t\t\t<CustomSelectControl\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\tlabel={ __( 'Date Format' ) }\n\t\t\t\t\t\toptions={ formatOptions }\n\t\t\t\t\t\tonChange={ ( { selectedItem } ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tformat: selectedItem.key,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={ formatOptions.find(\n\t\t\t\t\t\t\t( option ) => option.key === resolvedFormat\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t</time>\n\t) : (\n\t\t__( 'No Date' )\n\t);\n}\n\nexport default function PostDateEdit( {\n\tattributes: { format },\n\tsetAttributes,\n} ) {\n\tif ( ! useEntityId( 'postType', 'post' ) ) {\n\t\treturn <p>{ 'Jan 1st, 1440' }</p>;\n\t}\n\treturn <PostDateEditor format={ format } setAttributes={ setAttributes } />;\n}\n"]}
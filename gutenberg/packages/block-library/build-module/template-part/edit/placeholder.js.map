{"version":3,"sources":["@wordpress/block-library/src/template-part/edit/placeholder.js"],"names":["useEntityBlockEditor","EntityProvider","__","BlockPreview","useState","useCallback","useSelect","useDispatch","cleanForSlug","Placeholder","TextControl","Button","layout","useTemplatePartPost","TemplatePartPreview","blocks","TemplatePartPlaceholder","setAttributes","slug","_setSlug","theme","setTheme","help","setHelp","postId","preview","select","templatePart","getEntityRecord","setSlug","nextSlug","saveEntityRecord","onChooseOrCreate","nextAttributes","undefined","cleanSlug","title","status","meta","id"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEntityBlockEditor, EntityProvider } from '@wordpress/core-data';\nimport { __ } from '@wordpress/i18n';\nimport { BlockPreview } from '@wordpress/block-editor';\nimport { useState, useCallback } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { cleanForSlug } from '@wordpress/url';\nimport { Placeholder, TextControl, Button } from '@wordpress/components';\nimport { layout } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport useTemplatePartPost from './use-template-part-post';\n\nfunction TemplatePartPreview() {\n\tconst [ blocks ] = useEntityBlockEditor( 'postType', 'wp_template_part' );\n\treturn (\n\t\t<div className=\"wp-block-template-part__placeholder-preview\">\n\t\t\t<div className=\"wp-block-template-part__placeholder-preview-title\">\n\t\t\t\t{ __( 'Preview' ) }\n\t\t\t</div>\n\t\t\t<BlockPreview blocks={ blocks } viewportWidth={ 1200 } />\n\t\t</div>\n\t);\n}\n\nexport default function TemplatePartPlaceholder( { setAttributes } ) {\n\tconst [ slug, _setSlug ] = useState( '' );\n\tconst [ theme, setTheme ] = useState( '' );\n\tconst [ help, setHelp ] = useState();\n\n\t// Try to find an existing template part.\n\tconst postId = useTemplatePartPost( null, slug, theme );\n\n\t// If found, get its preview.\n\tconst preview = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! postId ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst templatePart = select( 'core' ).getEntityRecord(\n\t\t\t\t'postType',\n\t\t\t\t'wp_template_part',\n\t\t\t\tpostId\n\t\t\t);\n\t\t\tif ( templatePart ) {\n\t\t\t\treturn (\n\t\t\t\t\t<EntityProvider\n\t\t\t\t\t\tkind=\"postType\"\n\t\t\t\t\t\ttype=\"wp_template_part\"\n\t\t\t\t\t\tid={ postId }\n\t\t\t\t\t>\n\t\t\t\t\t\t<TemplatePartPreview />\n\t\t\t\t\t</EntityProvider>\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t[ postId ]\n\t);\n\n\tconst setSlug = useCallback( ( nextSlug ) => {\n\t\t_setSlug( nextSlug );\n\t\tsetHelp( cleanForSlug( nextSlug ) );\n\t}, [] );\n\n\tconst { saveEntityRecord } = useDispatch( 'core' );\n\tconst onChooseOrCreate = useCallback( async () => {\n\t\tconst nextAttributes = { slug, theme };\n\t\tif ( postId !== undefined && postId !== null ) {\n\t\t\t// Existing template part found.\n\t\t\tnextAttributes.postId = postId;\n\t\t} else {\n\t\t\t// Create a new template part.\n\t\t\ttry {\n\t\t\t\tconst cleanSlug = cleanForSlug( slug );\n\t\t\t\tconst templatePart = await saveEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\t'wp_template_part',\n\t\t\t\t\t{\n\t\t\t\t\t\ttitle: cleanSlug,\n\t\t\t\t\t\tstatus: 'publish',\n\t\t\t\t\t\tslug: cleanSlug,\n\t\t\t\t\t\tmeta: { theme },\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tnextAttributes.postId = templatePart.id;\n\t\t\t} catch ( err ) {\n\t\t\t\tsetHelp( __( 'Error adding template.' ) );\n\t\t\t}\n\t\t}\n\t\tsetAttributes( nextAttributes );\n\t}, [ postId, slug, theme ] );\n\treturn (\n\t\t<Placeholder\n\t\t\ticon={ layout }\n\t\t\tlabel={ __( 'Template Part' ) }\n\t\t\tinstructions={ __(\n\t\t\t\t'Choose a template part by slug and theme, or create a new one.'\n\t\t\t) }\n\t\t>\n\t\t\t<div className=\"wp-block-template-part__placeholder-input-container\">\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Slug' ) }\n\t\t\t\t\tplaceholder={ __( 'header' ) }\n\t\t\t\t\tvalue={ slug }\n\t\t\t\t\tonChange={ setSlug }\n\t\t\t\t\thelp={ help }\n\t\t\t\t\tclassName=\"wp-block-template-part__placeholder-input\"\n\t\t\t\t/>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Theme' ) }\n\t\t\t\t\tplaceholder={ __( 'twentytwenty' ) }\n\t\t\t\t\tvalue={ theme }\n\t\t\t\t\tonChange={ setTheme }\n\t\t\t\t\tclassName=\"wp-block-template-part__placeholder-input\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t{ preview }\n\t\t\t<Button\n\t\t\t\tisPrimary\n\t\t\t\tdisabled={ ! slug || ! theme }\n\t\t\t\tonClick={ onChooseOrCreate }\n\t\t\t>\n\t\t\t\t{ postId ? __( 'Choose' ) : __( 'Create' ) }\n\t\t\t</Button>\n\t\t</Placeholder>\n\t);\n}\n"]}
{"version":3,"sources":["@wordpress/block-library/src/template-part/edit/index.js"],"names":["useRef","useEffect","EntityProvider","useTemplatePartPost","TemplatePartInnerBlocks","TemplatePartPlaceholder","TemplatePartEdit","attributes","_postId","postId","slug","theme","setAttributes","initialPostId","initialSlug","initialTheme","current","undefined"],"mappings":";;AAAA;;;AAGA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AAEA;;;;AAGA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,uBAAP,MAAoC,gBAApC;AACA,OAAOC,uBAAP,MAAoC,eAApC;AAEA,eAAe,SAASC,gBAAT,OAGX;AAAA,6BAFHC,UAEG;AAAA,MAFmBC,OAEnB,mBAFWC,MAEX;AAAA,MAF4BC,IAE5B,mBAF4BA,IAE5B;AAAA,MAFkCC,KAElC,mBAFkCA,KAElC;AAAA,MADHC,aACG,QADHA,aACG;AACH,MAAMC,aAAa,GAAGb,MAAM,CAAEQ,OAAF,CAA5B;AACA,MAAMM,WAAW,GAAGd,MAAM,CAAEU,IAAF,CAA1B;AACA,MAAMK,YAAY,GAAGf,MAAM,CAAEW,KAAF,CAA3B,CAHG,CAKH;;AACA,MAAMF,MAAM,GAAGN,mBAAmB,CAAEK,OAAF,EAAWE,IAAX,EAAiBC,KAAjB,CAAlC,CANG,CAQH;;AACAV,EAAAA,SAAS,CAAE,YAAM;AAChB,QACC,CAAEY,aAAa,CAACG,OAAd,KAA0BC,SAA1B,IACDJ,aAAa,CAACG,OAAd,KAA0B,IAD3B,KAEAP,MAAM,KAAKQ,SAFX,IAGAR,MAAM,KAAK,IAJZ,EAKE;AACDG,MAAAA,aAAa,CAAE;AAAEH,QAAAA,MAAM,EAANA;AAAF,OAAF,CAAb;AACA;AACD,GATQ,EASN,CAAEA,MAAF,CATM,CAAT;;AAWA,MAAKA,MAAL,EAAc;AACb;AACA,WACC,cAAC,cAAD;AACC,MAAA,IAAI,EAAC,UADN;AAEC,MAAA,IAAI,EAAC,kBAFN;AAGC,MAAA,EAAE,EAAGA;AAHN,OAKC,cAAC,uBAAD,OALD,CADD;AASA;;AACD,MAAK,CAAEK,WAAW,CAACE,OAAd,IAAyB,CAAED,YAAY,CAACC,OAA7C,EAAuD;AACtD;AACA,WAAO,cAAC,uBAAD;AAAyB,MAAA,aAAa,EAAGJ;AAAzC,MAAP;AACA,GAnCE,CAoCH;;;AACA,SAAO,IAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useEffect } from '@wordpress/element';\nimport { EntityProvider } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport useTemplatePartPost from './use-template-part-post';\nimport TemplatePartInnerBlocks from './inner-blocks';\nimport TemplatePartPlaceholder from './placeholder';\n\nexport default function TemplatePartEdit( {\n\tattributes: { postId: _postId, slug, theme },\n\tsetAttributes,\n} ) {\n\tconst initialPostId = useRef( _postId );\n\tconst initialSlug = useRef( slug );\n\tconst initialTheme = useRef( theme );\n\n\t// Resolve the post ID if not set, and load its post.\n\tconst postId = useTemplatePartPost( _postId, slug, theme );\n\n\t// Set the post ID, once found, so that edits persist.\n\tuseEffect( () => {\n\t\tif (\n\t\t\t( initialPostId.current === undefined ||\n\t\t\t\tinitialPostId.current === null ) &&\n\t\t\tpostId !== undefined &&\n\t\t\tpostId !== null\n\t\t) {\n\t\t\tsetAttributes( { postId } );\n\t\t}\n\t}, [ postId ] );\n\n\tif ( postId ) {\n\t\t// Part of a template file, post ID already resolved.\n\t\treturn (\n\t\t\t<EntityProvider\n\t\t\t\tkind=\"postType\"\n\t\t\t\ttype=\"wp_template_part\"\n\t\t\t\tid={ postId }\n\t\t\t>\n\t\t\t\t<TemplatePartInnerBlocks />\n\t\t\t</EntityProvider>\n\t\t);\n\t}\n\tif ( ! initialSlug.current && ! initialTheme.current ) {\n\t\t// Fresh new block.\n\t\treturn <TemplatePartPlaceholder setAttributes={ setAttributes } />;\n\t}\n\t// Part of a template file, post ID not resolved yet.\n\treturn null;\n}\n"]}
{"version":3,"sources":["@wordpress/block-library/src/button/edit.native.js"],"names":["NEW_TAB_REL","MIN_BORDER_RADIUS_VALUE","MAX_BORDER_RADIUS_VALUE","INITIAL_MAX_WIDTH","PREPEND_HTTP","ButtonEdit","props","onChangeText","bind","onChangeBorderRadius","onChangeLinkRel","onChangeOpenInNewTab","onChangeURL","onClearSettings","onLayout","onSetMaxWidth","dismissSheet","getURLFromClipboard","onShowLinkSettings","onHideLinkSettings","onToggleButtonFocus","setRef","onRemove","getPlaceholderWidth","isEditingURL","state","maxWidth","isLinkSheetVisible","isButtonFocused","placeholderTextWidth","prevProps","prevState","selectedId","setAttributes","editorSidebarOpened","url","attributes","parentWidth","Platform","OS","richTextRef","blur","selectedRichText","id","AccessibilityInfo","isScreenReaderEnabled","then","enabled","focus","Clipboard","getString","clipboardText","backgroundColor","gradient","customGradient","defaultGradients","SETTINGS_DEFAULTS","gradients","find","defaultGradient","slug","colorAndStyleProps","style","background","color","styles","defaultButton","textColor","value","text","borderRadius","rel","newLinkTarget","undefined","updatedRel","linkTarget","setState","nativeEvent","width","layout","spacing","marginRight","isParentWidthChanged","isWidthChanged","numOfButtons","onDeleteBlock","onReplace","closeSettingsBottomSheet","isCompatibleWithSettings","link","external","LinkRelIcon","richText","placeholderText","placeholder","textWidth","lines","Math","min","isSelected","clientId","mergeBlocks","paddingTop","borderWidth","borderRadiusValue","Number","isInteger","outlineBorderRadius","minWidth","getBackgroundColor","getTextColor","actions","label","onPress","outline","borderColor","richTextStyle","placeholderTextColor","linkSettingsPanel","getLinkSettings","Component","withInstanceId","select","isEditorSidebarOpened","getSelectedBlockClientId","getBlockCount","getBlockRootClientId","parentId","dispatch","closeGeneralSidebar"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tView,\n\tAccessibilityInfo,\n\tPlatform,\n\tClipboard,\n\tText,\n} from 'react-native';\n/**\n * WordPress dependencies\n */\nimport { withInstanceId, compose } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tRichText,\n\twithColors,\n\tInspectorControls,\n\tBlockControls,\n\tSETTINGS_DEFAULTS,\n} from '@wordpress/block-editor';\nimport {\n\tTextControl,\n\tToggleControl,\n\tPanelBody,\n\tPanelActions,\n\tRangeControl,\n\tToolbarGroup,\n\tToolbarButton,\n\tBottomSheet,\n} from '@wordpress/components';\nimport { Component } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { isURL, prependHTTP } from '@wordpress/url';\nimport { link, external } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport richTextStyle from './rich-text.scss';\nimport styles from './editor.scss';\nimport ColorBackground from './color-background';\nimport LinkRelIcon from './link-rel';\nimport ColorEdit from './color-edit';\nimport getColorAndStyleProps from './color-props';\n\nconst NEW_TAB_REL = 'noreferrer noopener';\nconst MIN_BORDER_RADIUS_VALUE = 0;\nconst MAX_BORDER_RADIUS_VALUE = 50;\nconst INITIAL_MAX_WIDTH = 108;\nconst PREPEND_HTTP = 'http://';\n\nclass ButtonEdit extends Component {\n\tconstructor( props ) {\n\t\tsuper( props );\n\t\tthis.onChangeText = this.onChangeText.bind( this );\n\t\tthis.onChangeBorderRadius = this.onChangeBorderRadius.bind( this );\n\t\tthis.onChangeLinkRel = this.onChangeLinkRel.bind( this );\n\t\tthis.onChangeOpenInNewTab = this.onChangeOpenInNewTab.bind( this );\n\t\tthis.onChangeURL = this.onChangeURL.bind( this );\n\t\tthis.onClearSettings = this.onClearSettings.bind( this );\n\t\tthis.onLayout = this.onLayout.bind( this );\n\t\tthis.onSetMaxWidth = this.onSetMaxWidth.bind( this );\n\t\tthis.dismissSheet = this.dismissSheet.bind( this );\n\t\tthis.getURLFromClipboard = this.getURLFromClipboard.bind( this );\n\t\tthis.onShowLinkSettings = this.onShowLinkSettings.bind( this );\n\t\tthis.onHideLinkSettings = this.onHideLinkSettings.bind( this );\n\t\tthis.onToggleButtonFocus = this.onToggleButtonFocus.bind( this );\n\t\tthis.setRef = this.setRef.bind( this );\n\t\tthis.onRemove = this.onRemove.bind( this );\n\t\tthis.getPlaceholderWidth = this.getPlaceholderWidth.bind( this );\n\n\t\t// `isEditingURL` property is used to prevent from automatically pasting\n\t\t// URL from clipboard while trying to clear `Button URL` field and then\n\t\t// manually adding specific link\n\t\tthis.isEditingURL = false;\n\n\t\tthis.state = {\n\t\t\tmaxWidth: INITIAL_MAX_WIDTH,\n\t\t\tisLinkSheetVisible: false,\n\t\t\tisButtonFocused: true,\n\t\t\tplaceholderTextWidth: 0,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.onSetMaxWidth();\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState ) {\n\t\tconst {\n\t\t\tselectedId,\n\t\t\tsetAttributes,\n\t\t\teditorSidebarOpened,\n\t\t\tattributes: { url },\n\t\t\tparentWidth,\n\t\t} = this.props;\n\t\tconst { isLinkSheetVisible, isButtonFocused } = this.state;\n\n\t\tif ( prevProps.selectedId !== selectedId ) {\n\t\t\tthis.onToggleButtonFocus( true );\n\t\t}\n\n\t\tif ( prevProps.parentWidth !== parentWidth ) {\n\t\t\tthis.onSetMaxWidth();\n\t\t}\n\n\t\tif (\n\t\t\t( prevProps.editorSidebarOpened && ! editorSidebarOpened ) ||\n\t\t\t( prevState.isLinkSheetVisible && ! isLinkSheetVisible )\n\t\t) {\n\t\t\t// Prepends \"http://\" to an url when closing link settings sheet and button settings sheet\n\t\t\tsetAttributes( { url: prependHTTP( url ) } );\n\t\t\t// Get initial value for `isEditingURL` when closing link settings sheet or button settings sheet\n\t\t\tthis.isEditingURL = false;\n\t\t}\n\n\t\t// Blur `RichText` on Android when link settings sheet or button settings sheet is opened,\n\t\t// to avoid flashing caret after closing one of them\n\t\tif (\n\t\t\t( ! prevProps.editorSidebarOpened && editorSidebarOpened ) ||\n\t\t\t( ! prevState.isLinkSheetVisible && isLinkSheetVisible )\n\t\t) {\n\t\t\tif ( Platform.OS === 'android' && this.richTextRef ) {\n\t\t\t\tthis.richTextRef.blur();\n\t\t\t\tthis.onToggleButtonFocus( false );\n\t\t\t}\n\t\t}\n\n\t\t// Paste a URL from clipboard\n\t\tif (\n\t\t\t( isLinkSheetVisible || editorSidebarOpened ) &&\n\t\t\t! url &&\n\t\t\t! this.isEditingURL\n\t\t) {\n\t\t\tthis.getURLFromClipboard();\n\t\t}\n\n\t\tif ( this.richTextRef ) {\n\t\t\tconst selectedRichText = this.richTextRef.props.id === selectedId;\n\n\t\t\tif ( ! selectedRichText && isButtonFocused ) {\n\t\t\t\tthis.onToggleButtonFocus( false );\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\tselectedRichText &&\n\t\t\t\tselectedId !== prevProps.selectedId &&\n\t\t\t\t! isButtonFocused\n\t\t\t) {\n\t\t\t\tAccessibilityInfo.isScreenReaderEnabled().then( ( enabled ) => {\n\t\t\t\t\tif ( enabled ) {\n\t\t\t\t\t\tthis.onToggleButtonFocus( true );\n\t\t\t\t\t\tthis.richTextRef.focus();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getURLFromClipboard() {\n\t\tconst { setAttributes } = this.props;\n\t\tconst clipboardText = await Clipboard.getString();\n\n\t\tif ( ! clipboardText ) {\n\t\t\treturn;\n\t\t}\n\t\t// Check if pasted text is URL\n\t\tif ( ! isURL( clipboardText ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAttributes( { url: clipboardText } );\n\t}\n\n\tgetBackgroundColor() {\n\t\tconst { backgroundColor, attributes } = this.props;\n\t\tconst { gradient, customGradient } = attributes;\n\t\tconst defaultGradients = SETTINGS_DEFAULTS.gradients;\n\n\t\tif ( customGradient || gradient ) {\n\t\t\treturn (\n\t\t\t\tcustomGradient ||\n\t\t\t\tdefaultGradients.find(\n\t\t\t\t\t( defaultGradient ) => defaultGradient.slug === gradient\n\t\t\t\t).gradient\n\t\t\t);\n\t\t}\n\t\tconst colorAndStyleProps = getColorAndStyleProps( attributes );\n\t\treturn (\n\t\t\tcolorAndStyleProps.style?.backgroundColor ||\n\t\t\tcolorAndStyleProps.style?.background ||\n\t\t\t// We still need the `backgroundColor.color` to support colors from the color pallete (not custom ones)\n\t\t\tbackgroundColor.color ||\n\t\t\tstyles.defaultButton.backgroundColor\n\t\t);\n\t}\n\n\tgetTextColor() {\n\t\tconst { textColor, attributes } = this.props;\n\t\tconst colorAndStyleProps = getColorAndStyleProps( attributes );\n\n\t\treturn (\n\t\t\tcolorAndStyleProps.style?.color ||\n\t\t\t// We still need the `textColor.color` to support colors from the color pallete (not custom ones)\n\t\t\ttextColor.color ||\n\t\t\tstyles.defaultButton.color\n\t\t);\n\t}\n\n\tonChangeText( value ) {\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( { text: value } );\n\t}\n\n\tonChangeBorderRadius( value ) {\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( {\n\t\t\tborderRadius: value,\n\t\t} );\n\t}\n\n\tonChangeLinkRel( value ) {\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( { rel: value } );\n\t}\n\n\tonChangeURL( value ) {\n\t\tthis.isEditingURL = true;\n\t\tconst { setAttributes } = this.props;\n\t\tsetAttributes( { url: value } );\n\t}\n\n\tonChangeOpenInNewTab( value ) {\n\t\tconst { setAttributes, attributes } = this.props;\n\t\tconst { rel } = attributes;\n\n\t\tconst newLinkTarget = value ? '_blank' : undefined;\n\n\t\tlet updatedRel = rel;\n\t\tif ( newLinkTarget && ! rel ) {\n\t\t\tupdatedRel = NEW_TAB_REL;\n\t\t} else if ( ! newLinkTarget && rel === NEW_TAB_REL ) {\n\t\t\tupdatedRel = undefined;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\tlinkTarget: newLinkTarget,\n\t\t\trel: updatedRel,\n\t\t} );\n\t}\n\n\tonShowLinkSettings() {\n\t\tthis.setState( { isLinkSheetVisible: true } );\n\t}\n\n\tonHideLinkSettings() {\n\t\tthis.setState( { isLinkSheetVisible: false } );\n\t}\n\n\tonToggleButtonFocus( value ) {\n\t\tthis.setState( { isButtonFocused: value } );\n\t}\n\n\tonClearSettings() {\n\t\tconst { setAttributes } = this.props;\n\n\t\tsetAttributes( {\n\t\t\turl: '',\n\t\t\trel: '',\n\t\t\tlinkTarget: '',\n\t\t} );\n\n\t\tthis.setState( { isLinkSheetVisible: false } );\n\t}\n\n\tonLayout( { nativeEvent } ) {\n\t\tconst { width } = nativeEvent.layout;\n\t\tthis.onSetMaxWidth( width );\n\t}\n\n\tonSetMaxWidth( width ) {\n\t\tconst { maxWidth } = this.state;\n\t\tconst { parentWidth } = this.props;\n\t\tconst { marginRight: spacing } = styles.defaultButton;\n\n\t\tconst isParentWidthChanged = maxWidth !== parentWidth;\n\t\tconst isWidthChanged = maxWidth !== width;\n\n\t\tif ( parentWidth && ! width && isParentWidthChanged ) {\n\t\t\tthis.setState( {\n\t\t\t\tmaxWidth: parentWidth,\n\t\t\t} );\n\t\t} else if ( ! parentWidth && width && isWidthChanged ) {\n\t\t\tthis.setState( { maxWidth: width - spacing } );\n\t\t}\n\t}\n\n\tonRemove() {\n\t\tconst { numOfButtons, onDeleteBlock, onReplace } = this.props;\n\n\t\tif ( numOfButtons === 1 ) {\n\t\t\tonDeleteBlock();\n\t\t} else {\n\t\t\tonReplace( [] );\n\t\t}\n\t}\n\n\tdismissSheet() {\n\t\tthis.setState( {\n\t\t\tisLinkSheetVisible: false,\n\t\t} );\n\t\tthis.props.closeSettingsBottomSheet();\n\t}\n\n\tgetLinkSettings( url, rel, linkTarget, isCompatibleWithSettings ) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<TextControl\n\t\t\t\t\ticon={ ! isCompatibleWithSettings && link }\n\t\t\t\t\tlabel={ __( 'Button Link URL' ) }\n\t\t\t\t\tvalue={ url || '' }\n\t\t\t\t\tvaluePlaceholder={ __( 'Add URL' ) }\n\t\t\t\t\tonChange={ this.onChangeURL }\n\t\t\t\t\tonSubmit={ this.dismissSheet }\n\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\tautoCorrect={ false }\n\t\t\t\t\t// eslint-disable-next-line jsx-a11y/no-autofocus\n\t\t\t\t\tautoFocus={\n\t\t\t\t\t\t! isCompatibleWithSettings && Platform.OS === 'ios'\n\t\t\t\t\t}\n\t\t\t\t\tkeyboardType=\"url\"\n\t\t\t\t/>\n\t\t\t\t<ToggleControl\n\t\t\t\t\ticon={ ! isCompatibleWithSettings && external }\n\t\t\t\t\tlabel={ __( 'Open in new tab' ) }\n\t\t\t\t\tchecked={ linkTarget === '_blank' }\n\t\t\t\t\tonChange={ this.onChangeOpenInNewTab }\n\t\t\t\t/>\n\t\t\t\t<TextControl\n\t\t\t\t\ticon={ ! isCompatibleWithSettings && LinkRelIcon }\n\t\t\t\t\tlabel={ __( 'Link Rel' ) }\n\t\t\t\t\tvalue={ rel || '' }\n\t\t\t\t\tvaluePlaceholder={ __( 'None' ) }\n\t\t\t\t\tonChange={ this.onChangeLinkRel }\n\t\t\t\t\tonSubmit={ this.dismissSheet }\n\t\t\t\t\tautoCapitalize=\"none\"\n\t\t\t\t\tautoCorrect={ false }\n\t\t\t\t\tkeyboardType=\"url\"\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n\n\tsetRef( richText ) {\n\t\tthis.richTextRef = richText;\n\t}\n\n\t// Render `Text` with `placeholderText` styled as a placeholder\n\t// to calculate its width which then is set as a `minWidth`\n\tgetPlaceholderWidth( placeholderText ) {\n\t\tconst { maxWidth, placeholderTextWidth } = this.state;\n\t\treturn (\n\t\t\t<Text\n\t\t\t\tstyle={ styles.placeholder }\n\t\t\t\tonTextLayout={ ( { nativeEvent } ) => {\n\t\t\t\t\tconst textWidth =\n\t\t\t\t\t\tnativeEvent.lines[ 0 ] && nativeEvent.lines[ 0 ].width;\n\t\t\t\t\tif ( textWidth && textWidth !== placeholderTextWidth ) {\n\t\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\t\tplaceholderTextWidth: Math.min(\n\t\t\t\t\t\t\t\ttextWidth,\n\t\t\t\t\t\t\t\tmaxWidth\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t} );\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ placeholderText }\n\t\t\t</Text>\n\t\t);\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tattributes,\n\t\t\tisSelected,\n\t\t\tclientId,\n\t\t\tonReplace,\n\t\t\tmergeBlocks,\n\t\t\tparentWidth,\n\t\t} = this.props;\n\t\tconst {\n\t\t\tplaceholder,\n\t\t\ttext,\n\t\t\tborderRadius,\n\t\t\turl,\n\t\t\tlinkTarget,\n\t\t\trel,\n\t\t} = attributes;\n\t\tconst {\n\t\t\tmaxWidth,\n\t\t\tisLinkSheetVisible,\n\t\t\tisButtonFocused,\n\t\t\tplaceholderTextWidth,\n\t\t} = this.state;\n\t\tconst { paddingTop: spacing, borderWidth } = styles.defaultButton;\n\n\t\tif ( parentWidth === 0 ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst borderRadiusValue = Number.isInteger( borderRadius )\n\t\t\t? borderRadius\n\t\t\t: styles.defaultButton.borderRadius;\n\t\tconst outlineBorderRadius =\n\t\t\tborderRadiusValue > 0\n\t\t\t\t? borderRadiusValue + spacing + borderWidth\n\t\t\t\t: 0;\n\n\t\t// To achieve proper expanding and shrinking `RichText` on iOS, there is a need to set a `minWidth`\n\t\t// value at least on 1 when `RichText` is focused or when is not focused, but `RichText` value is\n\t\t// different than empty string.\n\t\tconst minWidth =\n\t\t\tisButtonFocused || ( ! isButtonFocused && text && text !== '' )\n\t\t\t\t? 1\n\t\t\t\t: placeholderTextWidth;\n\t\t// To achieve proper expanding and shrinking `RichText` on Android, there is a need to set\n\t\t// a `placeholder` as an empty string when `RichText` is focused,\n\t\t// because `AztecView` is calculating a `minWidth` based on placeholder text.\n\t\tconst placeholderText =\n\t\t\tisButtonFocused || ( ! isButtonFocused && text && text !== '' )\n\t\t\t\t? ''\n\t\t\t\t: placeholder || __( 'Add text…' );\n\n\t\tconst backgroundColor = this.getBackgroundColor();\n\t\tconst textColor = this.getTextColor();\n\n\t\tconst actions = [\n\t\t\t{\n\t\t\t\tlabel: __( 'Remove link' ),\n\t\t\t\tonPress: this.onClearSettings,\n\t\t\t},\n\t\t];\n\n\t\treturn (\n\t\t\t<View onLayout={ this.onLayout }>\n\t\t\t\t{ this.getPlaceholderWidth( placeholderText ) }\n\t\t\t\t<ColorBackground\n\t\t\t\t\tborderRadiusValue={ borderRadiusValue }\n\t\t\t\t\tbackgroundColor={ backgroundColor }\n\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t>\n\t\t\t\t\t{ isSelected && (\n\t\t\t\t\t\t<View\n\t\t\t\t\t\t\tpointerEvents=\"none\"\n\t\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\t\tstyles.outline,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tborderRadius: outlineBorderRadius,\n\t\t\t\t\t\t\t\t\tborderColor: backgroundColor,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<RichText\n\t\t\t\t\t\tsetRef={ this.setRef }\n\t\t\t\t\t\tplaceholder={ placeholderText }\n\t\t\t\t\t\tvalue={ text }\n\t\t\t\t\t\tonChange={ this.onChangeText }\n\t\t\t\t\t\tstyle={ {\n\t\t\t\t\t\t\t...richTextStyle.richText,\n\t\t\t\t\t\t\tcolor: textColor,\n\t\t\t\t\t\t} }\n\t\t\t\t\t\ttextAlign=\"center\"\n\t\t\t\t\t\tplaceholderTextColor={\n\t\t\t\t\t\t\tstyles.placeholderTextColor.color\n\t\t\t\t\t\t}\n\t\t\t\t\t\tidentifier=\"content\"\n\t\t\t\t\t\ttagName=\"p\"\n\t\t\t\t\t\tminWidth={ minWidth }\n\t\t\t\t\t\tmaxWidth={ maxWidth }\n\t\t\t\t\t\tid={ clientId }\n\t\t\t\t\t\tisSelected={ isButtonFocused }\n\t\t\t\t\t\twithoutInteractiveFormatting\n\t\t\t\t\t\tunstableOnFocus={ () =>\n\t\t\t\t\t\t\tthis.onToggleButtonFocus( true )\n\t\t\t\t\t\t}\n\t\t\t\t\t\t__unstableMobileNoFocusOnMount={ ! isSelected }\n\t\t\t\t\t\tselectionColor={ textColor }\n\t\t\t\t\t\tonBlur={ () => {\n\t\t\t\t\t\t\tthis.onToggleButtonFocus( false );\n\t\t\t\t\t\t\tthis.onSetMaxWidth();\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonReplace={ onReplace }\n\t\t\t\t\t\tonRemove={ this.onRemove }\n\t\t\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\t\t/>\n\t\t\t\t</ColorBackground>\n\n\t\t\t\t{ isSelected && (\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\ttitle={ __( 'Edit link' ) }\n\t\t\t\t\t\t\t\ticon={ link }\n\t\t\t\t\t\t\t\tonClick={ this.onShowLinkSettings }\n\t\t\t\t\t\t\t\tisActive={ url && url !== PREPEND_HTTP }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t) }\n\n\t\t\t\t<BottomSheet\n\t\t\t\t\tisVisible={ isLinkSheetVisible }\n\t\t\t\t\tonClose={ this.onHideLinkSettings }\n\t\t\t\t\thideHeader\n\t\t\t\t>\n\t\t\t\t\t<PanelBody style={ styles.linkSettingsPanel }>\n\t\t\t\t\t\t{ this.getLinkSettings( url, rel, linkTarget ) }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelActions actions={ actions } />\n\t\t\t\t</BottomSheet>\n\n\t\t\t\t<ColorEdit { ...this.props } />\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody title={ __( 'Border Settings' ) }>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tlabel={ __( 'Border Radius' ) }\n\t\t\t\t\t\t\tminimumValue={ MIN_BORDER_RADIUS_VALUE }\n\t\t\t\t\t\t\tmaximumValue={ MAX_BORDER_RADIUS_VALUE }\n\t\t\t\t\t\t\tvalue={ borderRadiusValue }\n\t\t\t\t\t\t\tonChange={ this.onChangeBorderRadius }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelBody title={ __( 'Link Settings' ) }>\n\t\t\t\t\t\t{ this.getLinkSettings( url, rel, linkTarget, true ) }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithInstanceId,\n\twithColors( 'backgroundColor', { textColor: 'color' } ),\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst { isEditorSidebarOpened } = select( 'core/edit-post' );\n\t\tconst {\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetBlockCount,\n\t\t\tgetBlockRootClientId,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst parentId = getBlockRootClientId( clientId );\n\t\tconst selectedId = getSelectedBlockClientId();\n\t\tconst numOfButtons = getBlockCount( parentId );\n\n\t\treturn {\n\t\t\tselectedId,\n\t\t\teditorSidebarOpened: isEditorSidebarOpened(),\n\t\t\tnumOfButtons,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\treturn {\n\t\t\tcloseSettingsBottomSheet() {\n\t\t\t\tdispatch( 'core/edit-post' ).closeGeneralSidebar();\n\t\t\t},\n\t\t};\n\t} ),\n] )( ButtonEdit );\n"]}
{"version":3,"sources":["@wordpress/block-library/src/column/edit.native.js"],"names":["ColumnEdit","attributes","setAttributes","hasChildren","isSelected","getStylesFromColorScheme","isParentSelected","contentStyle","verticalAlignment","updateAlignment","alignment","styles","columnPlaceholder","columnPlaceholderDark","columnPlaceholderNotSelected","innerBlocksBottomSpace","InnerBlocks","ButtonBlockAppender","ColumnEditWrapper","props","getVerticalAlignmentRemap","flexBase","select","clientId","getBlockCount","getBlockRootClientId","getSelectedBlockClientId","selectedBlockClientId","parentId","withPreferredColorScheme"],"mappings":";;;;;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAQA;;;;;;AAEA,SAASA,UAAT,OAQI;AAAA,MAPHC,UAOG,QAPHA,UAOG;AAAA,MANHC,aAMG,QANHA,aAMG;AAAA,MALHC,WAKG,QALHA,WAKG;AAAA,MAJHC,UAIG,QAJHA,UAIG;AAAA,MAHHC,wBAGG,QAHHA,wBAGG;AAAA,MAFHC,gBAEG,QAFHA,gBAEG;AAAA,MADHC,YACG,QADHA,YACG;AAAA,MACKC,iBADL,GAC2BP,UAD3B,CACKO,iBADL;;AAGH,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAEC,SAAF,EAAiB;AACxCR,IAAAA,aAAa,CAAE;AAAEM,MAAAA,iBAAiB,EAAEE;AAArB,KAAF,CAAb;AACA,GAFD;;AAIA,MAAK,CAAEN,UAAF,IAAgB,CAAED,WAAvB,EAAqC;AACpC,WACC,4BAAC,iBAAD;AACC,MAAA,KAAK,EAAG,CACP,CAAEG,gBAAF,IACCD,wBAAwB,CACvBM,gBAAOC,iBADgB,EAEvBD,gBAAOE,qBAFgB,CAFlB,EAMPN,YANO,EAOPI,gBAAOG,4BAPA;AADT,MADD;AAaA;;AAED,SACC,qDACC,4BAAC,0BAAD,QACC,4BAAC,0CAAD;AACC,IAAA,QAAQ,EAAGL,eADZ;AAEC,IAAA,KAAK,EAAGD;AAFT,IADD,CADD,EAOC,4BAAC,iBAAD;AACC,IAAA,KAAK,EAAG,CACPD,YADO,EAEPH,UAAU,IAAID,WAAd,IAA6BQ,gBAAOI,sBAF7B;AADT,KAMC,4BAAC,wBAAD;AACC,IAAA,cAAc,EACbX,UAAU,IAAIY,yBAAYC;AAF5B,IAND,CAPD,CADD;AAsBA;;AAED,SAASC,iBAAT,CAA4BC,KAA5B,EAAoC;AAAA,MAC3BX,iBAD2B,GACLW,KAAK,CAAClB,UADD,CAC3BO,iBAD2B;;AAGnC,MAAMY,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAEV,SAAF,EAAiB;AAClD,QAAK,CAAEA,SAAP,EAAmB,OAAOC,gBAAOU,QAAd;AACnB,6BACIV,gBAAOU,QADX,MAEIV,gDAAkCD,SAAlC,EAFJ;AAIA,GAND;;AAQA,SACC,4BAAC,iBAAD;AAAM,IAAA,KAAK,EAAGU,yBAAyB,CAAEZ,iBAAF;AAAvC,KACC,4BAAC,UAAD,EAAiBW,KAAjB,CADD,CADD;AAKA;;eAEc,sBAAS,CACvB,sBAAY,UAAEG,MAAF,SAA4B;AAAA,MAAhBC,QAAgB,SAAhBA,QAAgB;;AAAA,gBAKnCD,MAAM,CAAE,mBAAF,CAL6B;AAAA,MAEtCE,aAFsC,WAEtCA,aAFsC;AAAA,MAGtCC,oBAHsC,WAGtCA,oBAHsC;AAAA,MAItCC,wBAJsC,WAItCA,wBAJsC;;AAOvC,MAAMC,qBAAqB,GAAGD,wBAAwB,EAAtD;AACA,MAAMtB,UAAU,GAAGuB,qBAAqB,KAAKJ,QAA7C;AAEA,MAAMK,QAAQ,GAAGH,oBAAoB,CAAEF,QAAF,CAArC;AACA,MAAMpB,WAAW,GAAG,CAAC,CAAEqB,aAAa,CAAED,QAAF,CAApC;AAEA,MAAMjB,gBAAgB,GACrBqB,qBAAqB,IAAIA,qBAAqB,KAAKC,QADpD;AAGA,SAAO;AACNzB,IAAAA,WAAW,EAAXA,WADM;AAENG,IAAAA,gBAAgB,EAAhBA,gBAFM;AAGNF,IAAAA,UAAU,EAAVA;AAHM,GAAP;AAKA,CArBD,CADuB,EAuBvByB,iCAvBuB,CAAT,EAwBVX,iBAxBU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { withSelect } from '@wordpress/data';\nimport { compose, withPreferredColorScheme } from '@wordpress/compose';\nimport {\n\tInnerBlocks,\n\tBlockControls,\n\tBlockVerticalAlignmentToolbar,\n} from '@wordpress/block-editor';\n/**\n * Internal dependencies\n */\nimport styles from './editor.scss';\n\nfunction ColumnEdit( {\n\tattributes,\n\tsetAttributes,\n\thasChildren,\n\tisSelected,\n\tgetStylesFromColorScheme,\n\tisParentSelected,\n\tcontentStyle,\n} ) {\n\tconst { verticalAlignment } = attributes;\n\n\tconst updateAlignment = ( alignment ) => {\n\t\tsetAttributes( { verticalAlignment: alignment } );\n\t};\n\n\tif ( ! isSelected && ! hasChildren ) {\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\t! isParentSelected &&\n\t\t\t\t\t\tgetStylesFromColorScheme(\n\t\t\t\t\t\t\tstyles.columnPlaceholder,\n\t\t\t\t\t\t\tstyles.columnPlaceholderDark\n\t\t\t\t\t\t),\n\t\t\t\t\tcontentStyle,\n\t\t\t\t\tstyles.columnPlaceholderNotSelected,\n\t\t\t\t] }\n\t\t\t></View>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<BlockVerticalAlignmentToolbar\n\t\t\t\t\tonChange={ updateAlignment }\n\t\t\t\t\tvalue={ verticalAlignment }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tcontentStyle,\n\t\t\t\t\tisSelected && hasChildren && styles.innerBlocksBottomSpace,\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t<InnerBlocks\n\t\t\t\t\trenderAppender={\n\t\t\t\t\t\tisSelected && InnerBlocks.ButtonBlockAppender\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</View>\n\t\t</>\n\t);\n}\n\nfunction ColumnEditWrapper( props ) {\n\tconst { verticalAlignment } = props.attributes;\n\n\tconst getVerticalAlignmentRemap = ( alignment ) => {\n\t\tif ( ! alignment ) return styles.flexBase;\n\t\treturn {\n\t\t\t...styles.flexBase,\n\t\t\t...styles[ `is-vertically-aligned-${ alignment }` ],\n\t\t};\n\t};\n\n\treturn (\n\t\t<View style={ getVerticalAlignmentRemap( verticalAlignment ) }>\n\t\t\t<ColumnEdit { ...props } />\n\t\t</View>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select, { clientId } ) => {\n\t\tconst {\n\t\t\tgetBlockCount,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetSelectedBlockClientId,\n\t\t} = select( 'core/block-editor' );\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\tconst isSelected = selectedBlockClientId === clientId;\n\n\t\tconst parentId = getBlockRootClientId( clientId );\n\t\tconst hasChildren = !! getBlockCount( clientId );\n\n\t\tconst isParentSelected =\n\t\t\tselectedBlockClientId && selectedBlockClientId === parentId;\n\n\t\treturn {\n\t\t\thasChildren,\n\t\t\tisParentSelected,\n\t\t\tisSelected,\n\t\t};\n\t} ),\n\twithPreferredColorScheme,\n] )( ColumnEditWrapper );\n"]}
{"version":3,"sources":["@wordpress/block-library/src/image/edit.js"],"names":["pickRelevantMediaFiles","image","imageProps","url","isTemporaryImage","id","isExternalImage","getFilename","path","split","ImageEdit","attributes","alt","caption","align","href","rel","linkClass","linkDestination","title","width","height","linkTarget","sizeSlug","setAttributes","isSelected","className","noticeUI","insertBlocksAfter","noticeOperations","onReplace","ref","select","getMedia","getSettings","maxWidth","isRTL","imageSizes","mediaUpload","toggleSelection","isLargeViewport","captionFocused","setCaptionFocused","isWideAligned","onResizeStart","onResizeStop","onUploadError","message","removeAllNotices","createErrorNotice","onSelectImage","media","undefined","mediaAttributes","additionalAttributes","DEFAULT_SIZE_SLUG","LINK_DESTINATION_MEDIA","LINK_DESTINATION_ATTACHMENT","link","onSelectURL","newURL","onImageError","embedBlock","onSetHref","props","onSetTitle","value","onFocusCaption","onImageClick","updateAlt","newAlt","updateAlignment","nextAlign","extraUpdatedAttributes","updateImage","newSizeSlug","newUrl","getImageSizeOptions","slug","name","label","isTemp","file","filesList","onFileChange","img","allowedTypes","ALLOWED_MEDIA_TYPES","onError","isExternal","controls","source_url","src","mediaPreview","mediaPlaceholder","icon","imageWidthWithinContainer","imageHeightWithinContainer","imageWidth","imageHeight","classes","isResizable","imageSizeOptions","inspectorControls","filename","defaultedAlt","currentWidth","currentHeight","ratio","minWidth","MIN_SIZE","minHeight","maxWidthBuffer","showRightHandle","showLeftHandle","top","right","bottom","left","event","direction","elt","delta","parseInt","RichText","isEmpty"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { get, filter, map, last, omit, pick, includes } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { getBlobByURL, isBlobURL, revokeBlobURL } from '@wordpress/blob';\nimport {\n\tExternalLink,\n\tPanelBody,\n\tResizableBox,\n\tSpinner,\n\tTextareaControl,\n\tTextControl,\n\tToolbarGroup,\n\twithNotices,\n} from '@wordpress/components';\nimport { useViewportMatch } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tBlockAlignmentToolbar,\n\tBlockControls,\n\tBlockIcon,\n\tInspectorControls,\n\tInspectorAdvancedControls,\n\tMediaPlaceholder,\n\tMediaReplaceFlow,\n\tRichText,\n\t__experimentalBlock as Block,\n\t__experimentalImageSizeControl as ImageSizeControl,\n\t__experimentalImageURLInputUI as ImageURLInputUI,\n} from '@wordpress/block-editor';\nimport { useEffect, useState, useRef } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { getPath } from '@wordpress/url';\nimport { image as icon } from '@wordpress/icons';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { createUpgradedEmbedBlock } from '../embed/util';\nimport useImageSize from './image-size';\n\n/**\n * Module constants\n */\nimport {\n\tMIN_SIZE,\n\tLINK_DESTINATION_MEDIA,\n\tLINK_DESTINATION_ATTACHMENT,\n\tALLOWED_MEDIA_TYPES,\n\tDEFAULT_SIZE_SLUG,\n} from './constants';\n\nexport const pickRelevantMediaFiles = ( image ) => {\n\tconst imageProps = pick( image, [ 'alt', 'id', 'link', 'caption' ] );\n\timageProps.url =\n\t\tget( image, [ 'sizes', 'large', 'url' ] ) ||\n\t\tget( image, [ 'media_details', 'sizes', 'large', 'source_url' ] ) ||\n\t\timage.url;\n\treturn imageProps;\n};\n\n/**\n * Is the URL a temporary blob URL? A blob URL is one that is used temporarily\n * while the image is being uploaded and will not have an id yet allocated.\n *\n * @param {number=} id The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the URL a Blob URL\n */\nconst isTemporaryImage = ( id, url ) => ! id && isBlobURL( url );\n\n/**\n * Is the url for the image hosted externally. An externally hosted image has no\n * id and is not a blob url.\n *\n * @param {number=} id  The id of the image.\n * @param {string=} url The url of the image.\n *\n * @return {boolean} Is the url an externally hosted url?\n */\nconst isExternalImage = ( id, url ) => url && ! id && ! isBlobURL( url );\n\nfunction getFilename( url ) {\n\tconst path = getPath( url );\n\tif ( path ) {\n\t\treturn last( path.split( '/' ) );\n\t}\n}\n\nexport function ImageEdit( {\n\tattributes: {\n\t\turl = '',\n\t\talt,\n\t\tcaption,\n\t\talign,\n\t\tid,\n\t\thref,\n\t\trel,\n\t\tlinkClass,\n\t\tlinkDestination,\n\t\ttitle,\n\t\twidth,\n\t\theight,\n\t\tlinkTarget,\n\t\tsizeSlug,\n\t},\n\tsetAttributes,\n\tisSelected,\n\tclassName,\n\tnoticeUI,\n\tinsertBlocksAfter,\n\tnoticeOperations,\n\tonReplace,\n} ) {\n\tconst ref = useRef();\n\tconst { image, maxWidth, isRTL, imageSizes, mediaUpload } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getMedia } = select( 'core' );\n\t\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\t\treturn {\n\t\t\t\t...pick( getSettings(), [\n\t\t\t\t\t'mediaUpload',\n\t\t\t\t\t'imageSizes',\n\t\t\t\t\t'isRTL',\n\t\t\t\t\t'maxWidth',\n\t\t\t\t] ),\n\t\t\t\timage: id && isSelected ? getMedia( id ) : null,\n\t\t\t};\n\t\t},\n\t\t[ id, isSelected ]\n\t);\n\tconst { toggleSelection } = useDispatch( 'core/block-editor' );\n\tconst isLargeViewport = useViewportMatch( 'medium' );\n\tconst [ captionFocused, setCaptionFocused ] = useState( false );\n\tconst isWideAligned = includes( [ 'wide', 'full' ], align );\n\n\tfunction onResizeStart() {\n\t\ttoggleSelection( false );\n\t}\n\n\tfunction onResizeStop() {\n\t\ttoggleSelection( true );\n\t}\n\n\tfunction onUploadError( message ) {\n\t\tnoticeOperations.removeAllNotices();\n\t\tnoticeOperations.createErrorNotice( message );\n\t}\n\n\tfunction onSelectImage( media ) {\n\t\tif ( ! media || ! media.url ) {\n\t\t\tsetAttributes( {\n\t\t\t\turl: undefined,\n\t\t\t\talt: undefined,\n\t\t\t\tid: undefined,\n\t\t\t\ttitle: undefined,\n\t\t\t\tcaption: undefined,\n\t\t\t} );\n\t\t\treturn;\n\t\t}\n\n\t\tlet mediaAttributes = pickRelevantMediaFiles( media );\n\n\t\t// If the current image is temporary but an alt text was meanwhile\n\t\t// written by the user, make sure the text is not overwritten.\n\t\tif ( isTemporaryImage( id, url ) ) {\n\t\t\tif ( alt ) {\n\t\t\t\tmediaAttributes = omit( mediaAttributes, [ 'alt' ] );\n\t\t\t}\n\t\t}\n\n\t\t// If a caption text was meanwhile written by the user,\n\t\t// make sure the text is not overwritten by empty captions.\n\t\tif ( caption && ! get( mediaAttributes, [ 'caption' ] ) ) {\n\t\t\tmediaAttributes = omit( mediaAttributes, [ 'caption' ] );\n\t\t}\n\n\t\tlet additionalAttributes;\n\t\t// Reset the dimension attributes if changing to a different image.\n\t\tif ( ! media.id || media.id !== id ) {\n\t\t\tadditionalAttributes = {\n\t\t\t\twidth: undefined,\n\t\t\t\theight: undefined,\n\t\t\t\tsizeSlug: DEFAULT_SIZE_SLUG,\n\t\t\t};\n\t\t} else {\n\t\t\t// Keep the same url when selecting the same file, so \"Image Size\"\n\t\t\t// option is not changed.\n\t\t\tadditionalAttributes = { url };\n\t\t}\n\n\t\t// Check if the image is linked to it's media.\n\t\tif ( linkDestination === LINK_DESTINATION_MEDIA ) {\n\t\t\t// Update the media link.\n\t\t\tmediaAttributes.href = media.url;\n\t\t}\n\n\t\t// Check if the image is linked to the attachment page.\n\t\tif ( linkDestination === LINK_DESTINATION_ATTACHMENT ) {\n\t\t\t// Update the media link.\n\t\t\tmediaAttributes.href = media.link;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\t...mediaAttributes,\n\t\t\t...additionalAttributes,\n\t\t} );\n\t}\n\n\tfunction onSelectURL( newURL ) {\n\t\tif ( newURL !== url ) {\n\t\t\tsetAttributes( {\n\t\t\t\turl: newURL,\n\t\t\t\tid: undefined,\n\t\t\t\tsizeSlug: DEFAULT_SIZE_SLUG,\n\t\t\t} );\n\t\t}\n\t}\n\n\tfunction onImageError() {\n\t\t// Check if there's an embed block that handles this URL.\n\t\tconst embedBlock = createUpgradedEmbedBlock( { attributes: { url } } );\n\t\tif ( undefined !== embedBlock ) {\n\t\t\tonReplace( embedBlock );\n\t\t}\n\t}\n\n\tfunction onSetHref( props ) {\n\t\tsetAttributes( props );\n\t}\n\n\tfunction onSetTitle( value ) {\n\t\t// This is the HTML title attribute, separate from the media object\n\t\t// title.\n\t\tsetAttributes( { title: value } );\n\t}\n\n\tfunction onFocusCaption() {\n\t\tif ( ! captionFocused ) {\n\t\t\tsetCaptionFocused( true );\n\t\t}\n\t}\n\n\tfunction onImageClick() {\n\t\tif ( captionFocused ) {\n\t\t\tsetCaptionFocused( false );\n\t\t}\n\t}\n\n\tfunction updateAlt( newAlt ) {\n\t\tsetAttributes( { alt: newAlt } );\n\t}\n\n\tfunction updateAlignment( nextAlign ) {\n\t\tconst extraUpdatedAttributes = isWideAligned\n\t\t\t? { width: undefined, height: undefined }\n\t\t\t: {};\n\t\tsetAttributes( {\n\t\t\t...extraUpdatedAttributes,\n\t\t\talign: nextAlign,\n\t\t} );\n\t}\n\n\tfunction updateImage( newSizeSlug ) {\n\t\tconst newUrl = get( image, [\n\t\t\t'media_details',\n\t\t\t'sizes',\n\t\t\tnewSizeSlug,\n\t\t\t'source_url',\n\t\t] );\n\t\tif ( ! newUrl ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tsetAttributes( {\n\t\t\turl,\n\t\t\twidth: undefined,\n\t\t\theight: undefined,\n\t\t\tsizeSlug: newSizeSlug,\n\t\t} );\n\t}\n\n\tfunction getImageSizeOptions() {\n\t\treturn map(\n\t\t\tfilter( imageSizes, ( { slug } ) =>\n\t\t\t\tget( image, [ 'media_details', 'sizes', slug, 'source_url' ] )\n\t\t\t),\n\t\t\t( { name, slug } ) => ( { value: slug, label: name } )\n\t\t);\n\t}\n\n\tconst isTemp = isTemporaryImage( id, url );\n\n\t// Upload a temporary image on mount.\n\tuseEffect( () => {\n\t\tif ( ! isTemp ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst file = getBlobByURL( url );\n\n\t\tif ( file ) {\n\t\t\tmediaUpload( {\n\t\t\t\tfilesList: [ file ],\n\t\t\t\tonFileChange: ( [ img ] ) => {\n\t\t\t\t\tonSelectImage( img );\n\t\t\t\t},\n\t\t\t\tallowedTypes: ALLOWED_MEDIA_TYPES,\n\t\t\t\tonError: ( message ) => {\n\t\t\t\t\tnoticeOperations.createErrorNotice( message );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t}, [] );\n\n\t// If an image is temporary, revoke the Blob url when it is uploaded (and is\n\t// no longer temporary).\n\tuseEffect( () => {\n\t\tif ( ! isTemp ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn () => {\n\t\t\trevokeBlobURL( url );\n\t\t};\n\t}, [ isTemp ] );\n\n\tuseEffect( () => {\n\t\tif ( ! isSelected ) {\n\t\t\tsetCaptionFocused( false );\n\t\t}\n\t}, [ isSelected ] );\n\n\tconst isExternal = isExternalImage( id, url );\n\tconst controls = (\n\t\t<BlockControls>\n\t\t\t<BlockAlignmentToolbar\n\t\t\t\tvalue={ align }\n\t\t\t\tonChange={ updateAlignment }\n\t\t\t/>\n\t\t\t{ url && (\n\t\t\t\t<MediaReplaceFlow\n\t\t\t\t\tmediaId={ id }\n\t\t\t\t\tmediaURL={ url }\n\t\t\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\tonSelect={ onSelectImage }\n\t\t\t\t\tonSelectURL={ onSelectURL }\n\t\t\t\t\tonError={ onUploadError }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ url && (\n\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t<ImageURLInputUI\n\t\t\t\t\t\turl={ href || '' }\n\t\t\t\t\t\tonChangeUrl={ onSetHref }\n\t\t\t\t\t\tlinkDestination={ linkDestination }\n\t\t\t\t\t\tmediaUrl={ image && image.source_url }\n\t\t\t\t\t\tmediaLink={ image && image.link }\n\t\t\t\t\t\tlinkTarget={ linkTarget }\n\t\t\t\t\t\tlinkClass={ linkClass }\n\t\t\t\t\t\trel={ rel }\n\t\t\t\t\t/>\n\t\t\t\t</ToolbarGroup>\n\t\t\t) }\n\t\t</BlockControls>\n\t);\n\tconst src = isExternal ? url : undefined;\n\tconst mediaPreview = !! url && (\n\t\t<img\n\t\t\talt={ __( 'Edit image' ) }\n\t\t\ttitle={ __( 'Edit image' ) }\n\t\t\tclassName={ 'edit-image-preview' }\n\t\t\tsrc={ url }\n\t\t/>\n\t);\n\n\tconst mediaPlaceholder = (\n\t\t<MediaPlaceholder\n\t\t\ticon={ <BlockIcon icon={ icon } /> }\n\t\t\tonSelect={ onSelectImage }\n\t\t\tonSelectURL={ onSelectURL }\n\t\t\tnotices={ noticeUI }\n\t\t\tonError={ onUploadError }\n\t\t\taccept=\"image/*\"\n\t\t\tallowedTypes={ ALLOWED_MEDIA_TYPES }\n\t\t\tvalue={ { id, src } }\n\t\t\tmediaPreview={ mediaPreview }\n\t\t\tdisableMediaButtons={ url }\n\t\t/>\n\t);\n\n\tconst {\n\t\timageWidthWithinContainer,\n\t\timageHeightWithinContainer,\n\t\timageWidth,\n\t\timageHeight,\n\t} = useImageSize( ref, url, [ align ] );\n\n\tif ( ! url ) {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ controls }\n\t\t\t\t<Block.div>{ mediaPlaceholder }</Block.div>\n\t\t\t</>\n\t\t);\n\t}\n\n\tconst classes = classnames( className, {\n\t\t'is-transient': isBlobURL( url ),\n\t\t'is-resized': !! width || !! height,\n\t\t'is-focused': isSelected,\n\t\t[ `size-${ sizeSlug }` ]: sizeSlug,\n\t} );\n\n\tconst isResizable = ! isWideAligned && isLargeViewport;\n\tconst imageSizeOptions = getImageSizeOptions();\n\n\tconst inspectorControls = (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Image settings' ) }>\n\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\tlabel={ __( 'Alt text (alternative text)' ) }\n\t\t\t\t\t\tvalue={ alt }\n\t\t\t\t\t\tonChange={ updateAlt }\n\t\t\t\t\t\thelp={\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/WAI/tutorials/images/decision-tree\">\n\t\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t\t'Describe the purpose of the image'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'Leave empty if the image is purely decorative.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<ImageSizeControl\n\t\t\t\t\t\tonChangeImage={ updateImage }\n\t\t\t\t\t\tonChange={ ( value ) => setAttributes( value ) }\n\t\t\t\t\t\tslug={ sizeSlug }\n\t\t\t\t\t\twidth={ width }\n\t\t\t\t\t\theight={ height }\n\t\t\t\t\t\timageSizeOptions={ imageSizeOptions }\n\t\t\t\t\t\tisResizable={ isResizable }\n\t\t\t\t\t\timageWidth={ imageWidth }\n\t\t\t\t\t\timageHeight={ imageHeight }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<InspectorAdvancedControls>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={ __( 'Title attribute' ) }\n\t\t\t\t\tvalue={ title || '' }\n\t\t\t\t\tonChange={ onSetTitle }\n\t\t\t\t\thelp={\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t'Describe the role of this image on the page.'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t<ExternalLink href=\"https://www.w3.org/TR/html52/dom.html#the-title-attribute\">\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'(Note: many devices and browsers do not display this text.)'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t</>\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</InspectorAdvancedControls>\n\t\t</>\n\t);\n\n\tconst filename = getFilename( url );\n\tlet defaultedAlt;\n\n\tif ( alt ) {\n\t\tdefaultedAlt = alt;\n\t} else if ( filename ) {\n\t\tdefaultedAlt = sprintf(\n\t\t\t/* translators: %s: file name */\n\t\t\t__( 'This image has an empty alt attribute; its file name is %s' ),\n\t\t\tfilename\n\t\t);\n\t} else {\n\t\tdefaultedAlt = __( 'This image has an empty alt attribute' );\n\t}\n\n\tlet img = (\n\t\t// Disable reason: Image itself is not meant to be interactive, but\n\t\t// should direct focus to block.\n\t\t/* eslint-disable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t\t<>\n\t\t\t{ inspectorControls }\n\t\t\t<img\n\t\t\t\tsrc={ url }\n\t\t\t\talt={ defaultedAlt }\n\t\t\t\tonClick={ onImageClick }\n\t\t\t\tonError={ () => onImageError() }\n\t\t\t/>\n\t\t\t{ isBlobURL( url ) && <Spinner /> }\n\t\t</>\n\t\t/* eslint-enable jsx-a11y/no-noninteractive-element-interactions, jsx-a11y/click-events-have-key-events */\n\t);\n\n\tif ( ! isResizable || ! imageWidthWithinContainer ) {\n\t\timg = <div style={ { width, height } }>{ img }</div>;\n\t} else {\n\t\tconst currentWidth = width || imageWidthWithinContainer;\n\t\tconst currentHeight = height || imageHeightWithinContainer;\n\n\t\tconst ratio = imageWidth / imageHeight;\n\t\tconst minWidth = imageWidth < imageHeight ? MIN_SIZE : MIN_SIZE * ratio;\n\t\tconst minHeight =\n\t\t\timageHeight < imageWidth ? MIN_SIZE : MIN_SIZE / ratio;\n\n\t\t// With the current implementation of ResizableBox, an image needs an\n\t\t// explicit pixel value for the max-width. In absence of being able to\n\t\t// set the content-width, this max-width is currently dictated by the\n\t\t// vanilla editor style. The following variable adds a buffer to this\n\t\t// vanilla style, so 3rd party themes have some wiggleroom. This does,\n\t\t// in most cases, allow you to scale the image beyond the width of the\n\t\t// main column, though not infinitely.\n\t\t// @todo It would be good to revisit this once a content-width variable\n\t\t// becomes available.\n\t\tconst maxWidthBuffer = maxWidth * 2.5;\n\n\t\tlet showRightHandle = false;\n\t\tlet showLeftHandle = false;\n\n\t\t/* eslint-disable no-lonely-if */\n\t\t// See https://github.com/WordPress/gutenberg/issues/7584.\n\t\tif ( align === 'center' ) {\n\t\t\t// When the image is centered, show both handles.\n\t\t\tshowRightHandle = true;\n\t\t\tshowLeftHandle = true;\n\t\t} else if ( isRTL ) {\n\t\t\t// In RTL mode the image is on the right by default.\n\t\t\t// Show the right handle and hide the left handle only when it is\n\t\t\t// aligned left. Otherwise always show the left handle.\n\t\t\tif ( align === 'left' ) {\n\t\t\t\tshowRightHandle = true;\n\t\t\t} else {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t}\n\t\t} else {\n\t\t\t// Show the left handle and hide the right handle only when the\n\t\t\t// image is aligned right. Otherwise always show the right handle.\n\t\t\tif ( align === 'right' ) {\n\t\t\t\tshowLeftHandle = true;\n\t\t\t} else {\n\t\t\t\tshowRightHandle = true;\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-lonely-if */\n\n\t\timg = (\n\t\t\t<ResizableBox\n\t\t\t\tsize={ { width, height } }\n\t\t\t\tshowHandle={ isSelected }\n\t\t\t\tminWidth={ minWidth }\n\t\t\t\tmaxWidth={ maxWidthBuffer }\n\t\t\t\tminHeight={ minHeight }\n\t\t\t\tmaxHeight={ maxWidthBuffer / ratio }\n\t\t\t\tlockAspectRatio\n\t\t\t\tenable={ {\n\t\t\t\t\ttop: false,\n\t\t\t\t\tright: showRightHandle,\n\t\t\t\t\tbottom: true,\n\t\t\t\t\tleft: showLeftHandle,\n\t\t\t\t} }\n\t\t\t\tonResizeStart={ onResizeStart }\n\t\t\t\tonResizeStop={ ( event, direction, elt, delta ) => {\n\t\t\t\t\tonResizeStop();\n\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\twidth: parseInt( currentWidth + delta.width, 10 ),\n\t\t\t\t\t\theight: parseInt( currentHeight + delta.height, 10 ),\n\t\t\t\t\t} );\n\t\t\t\t} }\n\t\t\t>\n\t\t\t\t{ img }\n\t\t\t</ResizableBox>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{ controls }\n\t\t\t<Block.figure ref={ ref } className={ classes }>\n\t\t\t\t{ img }\n\t\t\t\t{ ( ! RichText.isEmpty( caption ) || isSelected ) && (\n\t\t\t\t\t<RichText\n\t\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\t\tplaceholder={ __( 'Write caption…' ) }\n\t\t\t\t\t\tvalue={ caption }\n\t\t\t\t\t\tunstableOnFocus={ onFocusCaption }\n\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisSelected={ captionFocused }\n\t\t\t\t\t\tinlineToolbar\n\t\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\t\tinsertBlocksAfter( createBlock( 'core/paragraph' ) )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ mediaPlaceholder }\n\t\t\t</Block.figure>\n\t\t</>\n\t);\n}\n\nexport default withNotices( ImageEdit );\n"]}
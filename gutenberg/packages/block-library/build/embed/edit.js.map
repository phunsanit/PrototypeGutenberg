{"version":3,"sources":["@wordpress/block-library/src/embed/edit.js"],"names":["getEmbedEditComponent","title","icon","responsive","arguments","switchBackToURLInput","bind","setUrl","getMergedAttributes","setMergedAttributes","getResponsiveHelp","toggleResponsive","handleIncomingPreview","state","editingURL","url","props","attributes","preview","onReplace","upgradedBlock","prevProps","hasPreview","undefined","hadPreview","previewChanged","html","switchedPreview","switchedURL","cannotEmbed","fetching","resubmitWithoutTrailingSlash","setState","prevState","replace","event","preventDefault","setAttributes","className","allowResponsive","checked","newAllowResponsive","isSelected","themeSupportsResponsive","tryAgain","label","target","value","previewAttributes","caption","type","Component"],"mappings":"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","sourcesContent":["/**\n * Internal dependencies\n */\nimport {\n\tcreateUpgradedEmbedBlock,\n\tgetClassNames,\n\tfallback,\n\tgetAttributesFromPreview,\n} from './util';\nimport EmbedControls from './embed-controls';\nimport EmbedLoading from './embed-loading';\nimport EmbedPlaceholder from './embed-placeholder';\nimport EmbedPreview from './embed-preview';\n\n/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\n\nexport function getEmbedEditComponent( title, icon, responsive = true ) {\n\treturn class extends Component {\n\t\tconstructor() {\n\t\t\tsuper( ...arguments );\n\t\t\tthis.switchBackToURLInput = this.switchBackToURLInput.bind( this );\n\t\t\tthis.setUrl = this.setUrl.bind( this );\n\t\t\tthis.getMergedAttributes = this.getMergedAttributes.bind( this );\n\t\t\tthis.setMergedAttributes = this.setMergedAttributes.bind( this );\n\t\t\tthis.getResponsiveHelp = this.getResponsiveHelp.bind( this );\n\t\t\tthis.toggleResponsive = this.toggleResponsive.bind( this );\n\t\t\tthis.handleIncomingPreview = this.handleIncomingPreview.bind(\n\t\t\t\tthis\n\t\t\t);\n\n\t\t\tthis.state = {\n\t\t\t\teditingURL: false,\n\t\t\t\turl: this.props.attributes.url,\n\t\t\t};\n\n\t\t\tif ( this.props.preview ) {\n\t\t\t\tthis.handleIncomingPreview();\n\t\t\t}\n\t\t}\n\n\t\thandleIncomingPreview() {\n\t\t\tthis.setMergedAttributes();\n\t\t\tif ( this.props.onReplace ) {\n\t\t\t\tconst upgradedBlock = createUpgradedEmbedBlock(\n\t\t\t\t\tthis.props,\n\t\t\t\t\tthis.getMergedAttributes()\n\t\t\t\t);\n\t\t\t\tif ( upgradedBlock ) {\n\t\t\t\t\tthis.props.onReplace( upgradedBlock );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomponentDidUpdate( prevProps ) {\n\t\t\tconst hasPreview = undefined !== this.props.preview;\n\t\t\tconst hadPreview = undefined !== prevProps.preview;\n\t\t\tconst previewChanged =\n\t\t\t\tprevProps.preview &&\n\t\t\t\tthis.props.preview &&\n\t\t\t\tthis.props.preview.html !== prevProps.preview.html;\n\t\t\tconst switchedPreview =\n\t\t\t\tpreviewChanged || ( hasPreview && ! hadPreview );\n\t\t\tconst switchedURL =\n\t\t\t\tthis.props.attributes.url !== prevProps.attributes.url;\n\n\t\t\tif ( switchedPreview || switchedURL ) {\n\t\t\t\tif ( this.props.cannotEmbed ) {\n\t\t\t\t\t// We either have a new preview or a new URL, but we can't embed it.\n\t\t\t\t\tif ( ! this.props.fetching ) {\n\t\t\t\t\t\t// If we're not fetching the preview, then we know it can't be embedded, so try\n\t\t\t\t\t\t// removing any trailing slash, and resubmit.\n\t\t\t\t\t\tthis.resubmitWithoutTrailingSlash();\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.handleIncomingPreview();\n\t\t\t}\n\t\t}\n\n\t\tresubmitWithoutTrailingSlash() {\n\t\t\tthis.setState(\n\t\t\t\t( prevState ) => ( {\n\t\t\t\t\turl: prevState.url.replace( /\\/$/, '' ),\n\t\t\t\t} ),\n\t\t\t\tthis.setUrl\n\t\t\t);\n\t\t}\n\n\t\tsetUrl( event ) {\n\t\t\tif ( event ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t\tconst { url } = this.state;\n\t\t\tconst { setAttributes } = this.props;\n\t\t\tthis.setState( { editingURL: false } );\n\t\t\tsetAttributes( { url } );\n\t\t}\n\n\t\t/***\n\t\t * @return {Object} Attributes derived from the preview, merged with the current attributes.\n\t\t */\n\t\tgetMergedAttributes() {\n\t\t\tconst { preview } = this.props;\n\t\t\tconst { className, allowResponsive } = this.props.attributes;\n\t\t\treturn {\n\t\t\t\t...this.props.attributes,\n\t\t\t\t...getAttributesFromPreview(\n\t\t\t\t\tpreview,\n\t\t\t\t\ttitle,\n\t\t\t\t\tclassName,\n\t\t\t\t\tresponsive,\n\t\t\t\t\tallowResponsive\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\n\t\t/***\n\t\t * Sets block attributes based on the current attributes and preview data.\n\t\t */\n\t\tsetMergedAttributes() {\n\t\t\tconst { setAttributes } = this.props;\n\t\t\tsetAttributes( this.getMergedAttributes() );\n\t\t}\n\n\t\tswitchBackToURLInput() {\n\t\t\tthis.setState( { editingURL: true } );\n\t\t}\n\n\t\tgetResponsiveHelp( checked ) {\n\t\t\treturn checked\n\t\t\t\t? __(\n\t\t\t\t\t\t'This embed will preserve its aspect ratio when the browser is resized.'\n\t\t\t\t  )\n\t\t\t\t: __(\n\t\t\t\t\t\t'This embed may not preserve its aspect ratio when the browser is resized.'\n\t\t\t\t  );\n\t\t}\n\n\t\ttoggleResponsive() {\n\t\t\tconst { allowResponsive, className } = this.props.attributes;\n\t\t\tconst { html } = this.props.preview;\n\t\t\tconst newAllowResponsive = ! allowResponsive;\n\n\t\t\tthis.props.setAttributes( {\n\t\t\t\tallowResponsive: newAllowResponsive,\n\t\t\t\tclassName: getClassNames(\n\t\t\t\t\thtml,\n\t\t\t\t\tclassName,\n\t\t\t\t\tresponsive && newAllowResponsive\n\t\t\t\t),\n\t\t\t} );\n\t\t}\n\n\t\trender() {\n\t\t\tconst { url, editingURL } = this.state;\n\t\t\tconst {\n\t\t\t\tfetching,\n\t\t\t\tsetAttributes,\n\t\t\t\tisSelected,\n\t\t\t\tpreview,\n\t\t\t\tcannotEmbed,\n\t\t\t\tthemeSupportsResponsive,\n\t\t\t\ttryAgain,\n\t\t\t} = this.props;\n\n\t\t\tif ( fetching ) {\n\t\t\t\treturn <EmbedLoading />;\n\t\t\t}\n\n\t\t\t// translators: %s: type of embed e.g: \"YouTube\", \"Twitter\", etc. \"Embed\" is used when no specific type exists\n\t\t\tconst label = sprintf( __( '%s URL' ), title );\n\n\t\t\t// No preview, or we can't embed the current URL, or we've clicked the edit button.\n\t\t\tif ( ! preview || cannotEmbed || editingURL ) {\n\t\t\t\treturn (\n\t\t\t\t\t<EmbedPlaceholder\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t\tonSubmit={ this.setUrl }\n\t\t\t\t\t\tvalue={ url }\n\t\t\t\t\t\tcannotEmbed={ cannotEmbed }\n\t\t\t\t\t\tonChange={ ( event ) =>\n\t\t\t\t\t\t\tthis.setState( { url: event.target.value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfallback={ () => fallback( url, this.props.onReplace ) }\n\t\t\t\t\t\ttryAgain={ tryAgain }\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// Even though we set attributes that get derived from the preview,\n\t\t\t// we don't access them directly because for the initial render,\n\t\t\t// the `setAttributes` call will not have taken effect. If we're\n\t\t\t// rendering responsive content, setting the responsive classes\n\t\t\t// after the preview has been rendered can result in unwanted\n\t\t\t// clipping or scrollbars. The `getAttributesFromPreview` function\n\t\t\t// that `getMergedAttributes` uses is memoized so that we're not\n\t\t\t// calculating them on every render.\n\t\t\tconst previewAttributes = this.getMergedAttributes();\n\t\t\tconst { caption, type, allowResponsive } = previewAttributes;\n\t\t\tconst className = classnames(\n\t\t\t\tpreviewAttributes.className,\n\t\t\t\tthis.props.className\n\t\t\t);\n\n\t\t\treturn (\n\t\t\t\t<>\n\t\t\t\t\t<EmbedControls\n\t\t\t\t\t\tshowEditButton={ preview && ! cannotEmbed }\n\t\t\t\t\t\tthemeSupportsResponsive={ themeSupportsResponsive }\n\t\t\t\t\t\tblockSupportsResponsive={ responsive }\n\t\t\t\t\t\tallowResponsive={ allowResponsive }\n\t\t\t\t\t\tgetResponsiveHelp={ this.getResponsiveHelp }\n\t\t\t\t\t\ttoggleResponsive={ this.toggleResponsive }\n\t\t\t\t\t\tswitchBackToURLInput={ this.switchBackToURLInput }\n\t\t\t\t\t/>\n\t\t\t\t\t<EmbedPreview\n\t\t\t\t\t\tpreview={ preview }\n\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\turl={ url }\n\t\t\t\t\t\ttype={ type }\n\t\t\t\t\t\tcaption={ caption }\n\t\t\t\t\t\tonCaptionChange={ ( value ) =>\n\t\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t);\n\t\t}\n\t};\n}\n"]}
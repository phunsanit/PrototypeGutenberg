{"version":3,"sources":["@wordpress/block-editor/src/hooks/style.js"],"names":["has","get","addFilter","hasBlockSupport","createHigherOrderComponent","PanelBody","__","Platform","InspectorControls","COLOR_SUPPORT_KEY","ColorEdit","LINE_HEIGHT_SUPPORT_KEY","LineHeightEdit","FONT_SIZE_SUPPORT_KEY","FontSizeEdit","styleSupportKeys","typographySupportKeys","hasStyleSupport","blockType","some","key","getInlineStyles","styles","mappings","lineHeight","fontSize","background","backgroundColor","color","output","Object","entries","forEach","styleKey","objectKey","addAttribute","settings","attributes","style","assign","type","addSaveProps","props","addEditProps","existingGetEditWrapperProps","getEditWrapperProps","withBlockControls","BlockEdit","blockName","name","hasTypographySupport","OS"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { has, get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { PanelBody } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { Platform } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport InspectorControls from '../components/inspector-controls';\nimport { COLOR_SUPPORT_KEY, ColorEdit } from './color';\nimport { LINE_HEIGHT_SUPPORT_KEY, LineHeightEdit } from './line-height';\nimport { FONT_SIZE_SUPPORT_KEY, FontSizeEdit } from './font-size';\n\nconst styleSupportKeys = [\n\tCOLOR_SUPPORT_KEY,\n\tLINE_HEIGHT_SUPPORT_KEY,\n\tFONT_SIZE_SUPPORT_KEY,\n];\n\nconst typographySupportKeys = [\n\tLINE_HEIGHT_SUPPORT_KEY,\n\tFONT_SIZE_SUPPORT_KEY,\n];\n\nconst hasStyleSupport = ( blockType ) =>\n\tstyleSupportKeys.some( ( key ) => hasBlockSupport( blockType, key ) );\n\n/**\n * Returns the inline styles to add depending on the style object\n *\n * @param  {Object} styles Styles configuration\n * @return {Object}        Flattened CSS variables declaration\n */\nexport function getInlineStyles( styles = {} ) {\n\tconst mappings = {\n\t\tlineHeight: [ 'typography', 'lineHeight' ],\n\t\tfontSize: [ 'typography', 'fontSize' ],\n\t\tbackground: [ 'color', 'gradient' ],\n\t\tbackgroundColor: [ 'color', 'background' ],\n\t\tcolor: [ 'color', 'text' ],\n\t};\n\n\tconst output = {};\n\tObject.entries( mappings ).forEach( ( [ styleKey, objectKey ] ) => {\n\t\tif ( has( styles, objectKey ) ) {\n\t\t\toutput[ styleKey ] = get( styles, objectKey );\n\t\t}\n\t} );\n\n\treturn output;\n}\n\n/**\n * Filters registered block settings, extending attributes to include `style` attribute.\n *\n * @param  {Object} settings Original block settings\n * @return {Object}          Filtered block settings\n */\nfunction addAttribute( settings ) {\n\tif ( ! hasStyleSupport( settings ) ) {\n\t\treturn settings;\n\t}\n\n\t// allow blocks to specify their own attribute definition with default values if needed.\n\tif ( ! settings.attributes.style ) {\n\t\tObject.assign( settings.attributes, {\n\t\t\tstyle: {\n\t\t\t\ttype: 'object',\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn settings;\n}\n\n/**\n * Override props assigned to save component to inject the CSS variables definition.\n *\n * @param  {Object} props      Additional props applied to save element\n * @param  {Object} blockType  Block type\n * @param  {Object} attributes Block attributes\n * @return {Object}            Filtered props applied to save element\n */\nexport function addSaveProps( props, blockType, attributes ) {\n\tif ( ! hasStyleSupport( blockType ) ) {\n\t\treturn props;\n\t}\n\n\tconst { style } = attributes;\n\tprops.style = {\n\t\t...getInlineStyles( style ),\n\t\t...props.style,\n\t};\n\n\treturn props;\n}\n\n/**\n * Filters registered block settings to extand the block edit wrapper\n * to apply the desired styles and classnames properly.\n *\n * @param  {Object} settings Original block settings\n * @return {Object}          Filtered block settings\n */\nexport function addEditProps( settings ) {\n\tif ( ! hasStyleSupport( settings ) ) {\n\t\treturn settings;\n\t}\n\n\tconst existingGetEditWrapperProps = settings.getEditWrapperProps;\n\tsettings.getEditWrapperProps = ( attributes ) => {\n\t\tlet props = {};\n\t\tif ( existingGetEditWrapperProps ) {\n\t\t\tprops = existingGetEditWrapperProps( attributes );\n\t\t}\n\n\t\treturn addSaveProps( props, settings, attributes );\n\t};\n\n\treturn settings;\n}\n\n/**\n * Override the default edit UI to include new inspector controls for\n * all the custom styles configs.\n *\n * @param  {Function} BlockEdit Original component\n * @return {Function}           Wrapped component\n */\nexport const withBlockControls = createHigherOrderComponent(\n\t( BlockEdit ) => ( props ) => {\n\t\tconst { name: blockName } = props;\n\t\tconst hasTypographySupport = typographySupportKeys.some( ( key ) =>\n\t\t\thasBlockSupport( blockName, key )\n\t\t);\n\n\t\treturn [\n\t\t\tPlatform.OS === 'web' && hasTypographySupport && (\n\t\t\t\t<InspectorControls key=\"typography\">\n\t\t\t\t\t<PanelBody title={ __( 'Typography' ) }>\n\t\t\t\t\t\t<FontSizeEdit { ...props } />\n\t\t\t\t\t\t<LineHeightEdit { ...props } />\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t),\n\t\t\t<ColorEdit key=\"colors\" { ...props } />,\n\t\t\t<BlockEdit key=\"edit\" { ...props } />,\n\t\t];\n\t},\n\t'withToolbarControls'\n);\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/style/addAttribute',\n\taddAttribute\n);\n\naddFilter(\n\t'blocks.getSaveContent.extraProps',\n\t'core/style/addSaveProps',\n\taddSaveProps\n);\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/style/addEditProps',\n\taddEditProps\n);\n\naddFilter(\n\t'editor.BlockEdit',\n\t'core/style/with-block-controls',\n\twithBlockControls\n);\n"]}
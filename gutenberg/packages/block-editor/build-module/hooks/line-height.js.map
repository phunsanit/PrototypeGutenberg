{"version":3,"sources":["@wordpress/block-editor/src/hooks/line-height.js"],"names":["hasBlockSupport","LineHeightControl","cleanEmptyObject","LINE_HEIGHT_SUPPORT_KEY","LineHeightEdit","props","blockName","name","style","attributes","onChange","newLineHeightValue","newStyle","typography","lineHeight","setAttributes"],"mappings":";;;;;;;AAAA;;;AAGA,SAASA,eAAT,QAAgC,mBAAhC;AAEA;;;;AAGA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,SAASC,gBAAT,QAAiC,SAAjC;AAEA,OAAO,IAAMC,uBAAuB,GAAG,0BAAhC;AAEP;;;;;;;;AAOA,OAAO,SAASC,cAAT,CAAyBC,KAAzB,EAAiC;AAAA;;AAAA,MAEhCC,SAFgC,GAInCD,KAJmC,CAEtCE,IAFsC;AAAA,MAGxBC,KAHwB,GAInCH,KAJmC,CAGtCI,UAHsC,CAGxBD,KAHwB;;AAMvC,MAAK,CAAER,eAAe,CAAEM,SAAF,EAAaH,uBAAb,CAAtB,EAA+D;AAC9D,WAAO,IAAP;AACA;;AAED,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAAEC,kBAAF,EAA0B;AAC1C,QAAMC,QAAQ,qBACVJ,KADU;AAEbK,MAAAA,UAAU,oBACNL,KADM,aACNA,KADM,uBACNA,KAAK,CAAEK,UADD;AAETC,QAAAA,UAAU,EAAEH;AAFH;AAFG,MAAd;;AAOAN,IAAAA,KAAK,CAACU,aAAN,CAAqB;AACpBP,MAAAA,KAAK,EAAEN,gBAAgB,CAAEU,QAAF;AADH,KAArB;AAGA,GAXD;;AAYA,SACC,cAAC,iBAAD;AACC,IAAA,KAAK,EAAGJ,KAAH,aAAGA,KAAH,4CAAGA,KAAK,CAAEK,UAAV,sDAAG,kBAAmBC,UAD5B;AAEC,IAAA,QAAQ,EAAGJ;AAFZ,IADD;AAMA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { hasBlockSupport } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport LineHeightControl from '../components/line-height-control';\nimport { cleanEmptyObject } from './utils';\n\nexport const LINE_HEIGHT_SUPPORT_KEY = '__experimentalLineHeight';\n\n/**\n * Inspector control panel containing the line height related configuration\n *\n * @param {Object} props\n *\n * @return {WPElement} Line height edit element.\n */\nexport function LineHeightEdit( props ) {\n\tconst {\n\t\tname: blockName,\n\t\tattributes: { style },\n\t} = props;\n\n\tif ( ! hasBlockSupport( blockName, LINE_HEIGHT_SUPPORT_KEY ) ) {\n\t\treturn null;\n\t}\n\n\tconst onChange = ( newLineHeightValue ) => {\n\t\tconst newStyle = {\n\t\t\t...style,\n\t\t\ttypography: {\n\t\t\t\t...style?.typography,\n\t\t\t\tlineHeight: newLineHeightValue,\n\t\t\t},\n\t\t};\n\t\tprops.setAttributes( {\n\t\t\tstyle: cleanEmptyObject( newStyle ),\n\t\t} );\n\t};\n\treturn (\n\t\t<LineHeightControl\n\t\t\tvalue={ style?.typography?.lineHeight }\n\t\t\tonChange={ onChange }\n\t\t/>\n\t);\n}\n"]}
{"version":3,"sources":["@wordpress/block-editor/src/hooks/font-size.js"],"names":["addFilter","hasBlockSupport","useSelect","TokenList","getFontSize","getFontSizeClass","getFontSizeObjectByValue","FontSizePicker","cleanEmptyObject","FONT_SIZE_SUPPORT_KEY","addAttributes","settings","attributes","fontSize","Object","assign","type","addSaveProps","props","blockType","classes","className","add","newClassName","value","undefined","addEditProps","existingGetEditWrapperProps","getEditWrapperProps","FontSizeEdit","blockName","name","style","setAttributes","select","getSettings","fontSizes","fontSizeObject","typography","onChange","fontSizeSlug","slug","size"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport TokenList from '@wordpress/token-list';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetFontSize,\n\tgetFontSizeClass,\n\tgetFontSizeObjectByValue,\n\tFontSizePicker,\n} from '../components/font-sizes';\nimport { cleanEmptyObject } from './utils';\n\nexport const FONT_SIZE_SUPPORT_KEY = '__experimentalFontSize';\n\n/**\n * Filters registered block settings, extending attributes to include\n * `fontSize` and `fontWeight` attributes.\n *\n * @param  {Object} settings Original block settings\n * @return {Object}          Filtered block settings\n */\nfunction addAttributes( settings ) {\n\tif ( ! hasBlockSupport( settings, FONT_SIZE_SUPPORT_KEY ) ) {\n\t\treturn settings;\n\t}\n\n\t// Allow blocks to specify a default value if needed.\n\tif ( ! settings.attributes.fontSize ) {\n\t\tObject.assign( settings.attributes, {\n\t\t\tfontSize: {\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn settings;\n}\n\n/**\n * Override props assigned to save component to inject font size.\n *\n * @param  {Object} props      Additional props applied to save element\n * @param  {Object} blockType  Block type\n * @param  {Object} attributes Block attributes\n * @return {Object}            Filtered props applied to save element\n */\nfunction addSaveProps( props, blockType, attributes ) {\n\tif ( ! hasBlockSupport( blockType, FONT_SIZE_SUPPORT_KEY ) ) {\n\t\treturn props;\n\t}\n\n\t// Use TokenList to dedupe classes.\n\tconst classes = new TokenList( props.className );\n\tclasses.add( getFontSizeClass( attributes.fontSize ) );\n\tconst newClassName = classes.value;\n\tprops.className = newClassName ? newClassName : undefined;\n\n\treturn props;\n}\n\n/**\n * Filters registered block settings to expand the block edit wrapper\n * by applying the desired styles and classnames.\n *\n * @param  {Object} settings Original block settings\n * @return {Object}          Filtered block settings\n */\nfunction addEditProps( settings ) {\n\tif ( ! hasBlockSupport( settings, FONT_SIZE_SUPPORT_KEY ) ) {\n\t\treturn settings;\n\t}\n\n\tconst existingGetEditWrapperProps = settings.getEditWrapperProps;\n\tsettings.getEditWrapperProps = ( attributes ) => {\n\t\tlet props = {};\n\t\tif ( existingGetEditWrapperProps ) {\n\t\t\tprops = existingGetEditWrapperProps( attributes );\n\t\t}\n\t\treturn addSaveProps( props, settings, attributes );\n\t};\n\n\treturn settings;\n}\n\n/**\n * Inspector control panel containing the font size related configuration\n *\n * @param {Object} props\n *\n * @return {WPElement} Font size edit element.\n */\nexport function FontSizeEdit( props ) {\n\tconst {\n\t\tname: blockName,\n\t\tattributes: { fontSize, style },\n\t\tsetAttributes,\n\t} = props;\n\n\tconst { fontSizes } = useSelect( ( select ) =>\n\t\tselect( 'core/block-editor' ).getSettings()\n\t);\n\n\tif ( ! hasBlockSupport( blockName, FONT_SIZE_SUPPORT_KEY ) ) {\n\t\treturn null;\n\t}\n\n\tconst fontSizeObject = getFontSize(\n\t\tfontSizes,\n\t\tfontSize,\n\t\tstyle?.typography?.fontSize\n\t);\n\tconst onChange = ( value ) => {\n\t\tconst fontSizeSlug = getFontSizeObjectByValue( fontSizes, value ).slug;\n\n\t\tsetAttributes( {\n\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t...style,\n\t\t\t\ttypography: {\n\t\t\t\t\t...style?.typography,\n\t\t\t\t\tfontSize: fontSizeSlug ? undefined : value,\n\t\t\t\t},\n\t\t\t} ),\n\t\t\tfontSize: fontSizeSlug,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<FontSizePicker value={ fontSizeObject.size } onChange={ onChange } />\n\t);\n}\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/font/addAttribute',\n\taddAttributes\n);\n\naddFilter(\n\t'blocks.getSaveContent.extraProps',\n\t'core/font/addSaveProps',\n\taddSaveProps\n);\n\naddFilter( 'blocks.registerBlockType', 'core/font/addEditProps', addEditProps );\n"]}
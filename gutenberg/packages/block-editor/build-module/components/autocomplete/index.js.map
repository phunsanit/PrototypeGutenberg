{"version":3,"sources":["@wordpress/block-editor/src/components/autocomplete/index.js"],"names":["clone","applyFilters","hasFilter","compose","Autocomplete","OriginalAutocomplete","useMemo","getDefaultBlockName","withBlockEditContext","blockAutocompleter","EMPTY_ARRAY","withFilteredAutocompleters","props","completers","blockName","concat","map","name"],"mappings":";;;AAAA;;;AAGA,SAASA,KAAT,QAAsB,QAAtB;AAEA;;;;AAGA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,YAAY,IAAIC,oBAAzB,QAAqD,uBAArD;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,mBAAT,QAAoC,mBAApC;AAEA;;;;AAGA,SAASC,oBAAT,QAAqC,uBAArC;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AAEA;;;;;;;AAMA,IAAMC,WAAW,GAAG,EAApB;AAEA;;;;;;;;;;AASA,OAAO,SAASC,0BAAT,CAAqCP,YAArC,EAAoD;AAC1D,SAAO,UAAEQ,KAAF,EAAa;AAAA,4BAC2BA,KAD3B,CACbC,UADa;AAAA,QACbA,UADa,kCACAH,WADA;AAAA,QACaI,SADb,GAC2BF,KAD3B,CACaE,SADb;AAEnBD,IAAAA,UAAU,GAAGP,OAAO,CAAE,YAAM;AAC3B,UAAKQ,SAAS,KAAKP,mBAAmB,EAAtC,EAA2C;AAC1C,eAAOM,UAAU,CAACE,MAAX,CAAmB,CAAEN,kBAAF,CAAnB,CAAP;AACA;;AACD,aAAOI,UAAP;AACA,KALmB,EAKjB,CAAEA,UAAF,EAAcC,SAAd,CALiB,CAApB;;AAOA,QAAKZ,SAAS,CAAE,gCAAF,CAAd,EAAqD;AACpDW,MAAAA,UAAU,GAAGZ,YAAY,CACxB,gCADwB,EAExB;AACAY,MAAAA,UAAU,CAACG,GAAX,CAAgBhB,KAAhB,CAHwB,EAIxBY,KAAK,CAACE,SAJkB,CAAzB;AAMA;;AAED,WAAO,cAAC,YAAD,eAAmBF,KAAnB;AAA2B,MAAA,UAAU,EAAGC;AAAxC,OAAP;AACA,GAnBD;AAoBA;AAED;;;;AAGA,eAAeV,OAAO,CAAE,CACvBK,oBAAoB,CAAE;AAAA,MAAIS,IAAJ,QAAIA,IAAJ;AAAA,SAAkB;AAAEH,IAAAA,SAAS,EAAEG;AAAb,GAAlB;AAAA,CAAF,CADG,EAEvBN,0BAFuB,CAAF,CAAP,CAGVN,oBAHU,CAAf","sourcesContent":["/**\n * External dependencies\n */\nimport { clone } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { applyFilters, hasFilter } from '@wordpress/hooks';\nimport { compose } from '@wordpress/compose';\nimport { Autocomplete as OriginalAutocomplete } from '@wordpress/components';\nimport { useMemo } from '@wordpress/element';\nimport { getDefaultBlockName } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { withBlockEditContext } from '../block-edit/context';\nimport blockAutocompleter from '../../autocompleters/block';\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\n/**\n * Wrap the default Autocomplete component with one that\n * supports a filter hook for customizing its list of autocompleters.\n *\n * This function is exported for unit test.\n *\n * @param  {Function} Autocomplete Original component.\n * @return {Function}              Wrapped component\n */\nexport function withFilteredAutocompleters( Autocomplete ) {\n\treturn ( props ) => {\n\t\tlet { completers = EMPTY_ARRAY, blockName } = props;\n\t\tcompleters = useMemo( () => {\n\t\t\tif ( blockName === getDefaultBlockName() ) {\n\t\t\t\treturn completers.concat( [ blockAutocompleter ] );\n\t\t\t}\n\t\t\treturn completers;\n\t\t}, [ completers, blockName ] );\n\n\t\tif ( hasFilter( 'editor.Autocomplete.completers' ) ) {\n\t\t\tcompleters = applyFilters(\n\t\t\t\t'editor.Autocomplete.completers',\n\t\t\t\t// Provide copies so filters may directly modify them.\n\t\t\t\tcompleters.map( clone ),\n\t\t\t\tprops.blockName\n\t\t\t);\n\t\t}\n\n\t\treturn <Autocomplete { ...props } completers={ completers } />;\n\t};\n}\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/master/packages/block-editor/src/components/autocomplete/README.md\n */\nexport default compose( [\n\twithBlockEditContext( ( { name } ) => ( { blockName: name } ) ),\n\twithFilteredAutocompleters,\n] )( OriginalAutocomplete );\n"]}
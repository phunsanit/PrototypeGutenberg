{"version":3,"sources":["@wordpress/block-editor/src/components/unit-control/index.js"],"names":["__experimentalUnitControl","BaseUnitControl","useEditorFeature","__defaultUnits","UnitControl","unitsProp","units","props","settings","isDisabled","Array","isArray","filterUnitsWithSettings","filter","unit","includes","value"],"mappings":";;;;AAAA;;;AAGA,SAASA,yBAAyB,IAAIC,eAAtC,QAA6D,uBAA7D;AAEA;;;;AAGA,OAAOC,gBAAP,MAA6B,uBAA7B;IAEQC,c,GAAmBF,e,CAAnBE,c;AAER,eAAe,SAASC,WAAT,OAAuD;AAAA,MAAxBC,SAAwB,QAA/BC,KAA+B;AAAA,MAAVC,KAAU;;AACrE,MAAMC,QAAQ,GAAGN,gBAAgB,CAAE,kCAAF,CAAjC;AACA,MAAMO,UAAU,GAAG,CAAC,CAAED,QAAtB,CAFqE,CAIrE;;AACA,MAAIF,KAAJ;AAEA;;;;;;;;;;AASA,MAAKI,KAAK,CAACC,OAAN,CAAeH,QAAf,CAAL,EAAiC;AAChCF,IAAAA,KAAK,GAAGM,uBAAuB,CAAEJ,QAAF,EAAYH,SAAZ,CAA/B;AACA,GAFD,MAEO;AACNC,IAAAA,KAAK,GAAGG,UAAU,GAAG,KAAH,GAAWJ,SAA7B;AACA;;AAED,SAAO,cAAC,eAAD;AAAiB,IAAA,KAAK,EAAGC;AAAzB,KAAsCC,KAAtC,EAAP;AACA,C,CAED;;AACAH,WAAW,CAACD,cAAZ,GAA6BA,cAA7B;AAEA;;;;;;;;;AAQA,SAASS,uBAAT,GAA8D;AAAA,MAA5BJ,QAA4B,uEAAjB,EAAiB;AAAA,MAAbF,KAAa,uEAAL,EAAK;AAC7D,SAAOA,KAAK,CAACO,MAAN,CAAc,UAAEC,IAAF,EAAY;AAChC,WAAON,QAAQ,CAACO,QAAT,CAAmBD,IAAI,CAACE,KAAxB,CAAP;AACA,GAFM,CAAP;AAGA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __experimentalUnitControl as BaseUnitControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport useEditorFeature from '../use-editor-feature';\n\nconst { __defaultUnits } = BaseUnitControl;\n\nexport default function UnitControl( { units: unitsProp, ...props } ) {\n\tconst settings = useEditorFeature( '__experimentalDisableCustomUnits' );\n\tconst isDisabled = !! settings;\n\n\t// Adjust units based on add_theme_support( 'experimental-custom-units' );\n\tlet units;\n\n\t/**\n\t * Handle extra arguments for add_theme_support\n\t *\n\t * Example: add_theme_support( 'experimental-custom-units', 'rem' );\n\t * Or: add_theme_support( 'experimental-custom-units', 'px, 'rem', 'em' );\n\t *\n\t * Note: If there are unit argument (e.g. 'em'), these units are enabled\n\t * within the control.\n\t */\n\tif ( Array.isArray( settings ) ) {\n\t\tunits = filterUnitsWithSettings( settings, unitsProp );\n\t} else {\n\t\tunits = isDisabled ? false : unitsProp;\n\t}\n\n\treturn <BaseUnitControl units={ units } { ...props } />;\n}\n\n// Hoisting statics from the BaseUnitControl\nUnitControl.__defaultUnits = __defaultUnits;\n\n/**\n * Filters available units based on values defined by settings.\n *\n * @param {Array} settings Collection of preferred units.\n * @param {Array} units Collection of available units.\n *\n * @return {Array} Filtered units based on settings.\n */\nfunction filterUnitsWithSettings( settings = [], units = [] ) {\n\treturn units.filter( ( unit ) => {\n\t\treturn settings.includes( unit.value );\n\t} );\n}\n"]}
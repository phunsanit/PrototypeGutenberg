{"version":3,"sources":["@wordpress/block-editor/src/components/writing-flow/index.js"],"names":["overEvery","find","findLast","reverse","first","last","classnames","useRef","useEffect","computeCaretRect","focus","isHorizontalEdge","isTextField","isVerticalEdge","placeCaretAtHorizontalEdge","placeCaretAtVerticalEdge","isEntirelySelected","UP","DOWN","LEFT","RIGHT","TAB","isKeyboardEvent","ESCAPE","useSelect","useDispatch","__","isBlockFocusStop","isInSameBlock","hasInnerBlocksContext","isInsideRootBlock","getBlockDOMNode","getBlockClientId","FocusCapture","window","getSelection","getComputedStyle","isTabbableTextField","tabbable","isTabbableIndex","isNavigationCandidate","element","keyCode","hasModifier","isVertical","tagName","getClosestTabbable","target","isReverse","containerElement","onlyVertical","focusableNodes","focusable","slice","indexOf","targetRect","getBoundingClientRect","isTabCandidate","node","i","array","nodeRect","left","right","contains","offset","nextNode","selector","select","getSelectedBlockClientId","getMultiSelectedBlocksStartClientId","getMultiSelectedBlocksEndClientId","getPreviousBlockClientId","getNextBlockClientId","getFirstMultiSelectedBlockClientId","getLastMultiSelectedBlockClientId","hasMultiSelection","getBlockOrder","isNavigationMode","getBlockRootClientId","getClientIdsOfDescendants","isSelectionEnabled","getBlockSelectionStart","isMultiSelecting","selectedBlockClientId","selectionStartClientId","selectionEndClientId","selectionBeforeEndClientId","selectionAfterEndClientId","selectedFirstClientId","selectedLastClientId","blocks","blockSelectionStart","WritingFlow","children","container","focusCaptureBeforeRef","focusCaptureAfterRef","multiSelectionContainer","entirelySelected","noCapture","verticalRect","multiSelect","selectBlock","clearSelectedBlock","setNavigationMode","onMouseDown","event","current","button","clientId","shiftKey","preventDefault","expandSelection","nextSelectionEndClientId","moveSelection","focusedBlockClientId","isTabbableEdge","closestTabbable","onKeyDown","isUp","isDown","isLeft","isRight","isTab","isEscape","isHorizontal","isNav","isShift","ctrlKey","altKey","metaKey","isNavEdge","navigateUp","navigateDown","navigateOut","navigateIn","focusedBlockUid","wrapper","nextTabbable","findNext","findPrevious","tabbables","lastTabbable","primary","isContentEditable","nativeEvent","defaultPrevented","direction","isReverseDir","isCollapsed","focusLastTextField","className","undefined","position"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { overEvery, find, findLast, reverse, first, last } from 'lodash';\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, useEffect } from '@wordpress/element';\nimport {\n\tcomputeCaretRect,\n\tfocus,\n\tisHorizontalEdge,\n\tisTextField,\n\tisVerticalEdge,\n\tplaceCaretAtHorizontalEdge,\n\tplaceCaretAtVerticalEdge,\n\tisEntirelySelected,\n} from '@wordpress/dom';\nimport {\n\tUP,\n\tDOWN,\n\tLEFT,\n\tRIGHT,\n\tTAB,\n\tisKeyboardEvent,\n\tESCAPE,\n} from '@wordpress/keycodes';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tisBlockFocusStop,\n\tisInSameBlock,\n\thasInnerBlocksContext,\n\tisInsideRootBlock,\n\tgetBlockDOMNode,\n\tgetBlockClientId,\n} from '../../utils/dom';\nimport FocusCapture from './focus-capture';\n\n/**\n * Browser constants\n */\n\nconst { getSelection, getComputedStyle } = window;\n\n/**\n * Given an element, returns true if the element is a tabbable text field, or\n * false otherwise.\n *\n * @param {Element} element Element to test.\n *\n * @return {boolean} Whether element is a tabbable text field.\n */\nconst isTabbableTextField = overEvery( [\n\tisTextField,\n\tfocus.tabbable.isTabbableIndex,\n] );\n\n/**\n * Returns true if the element should consider edge navigation upon a keyboard\n * event of the given directional key code, or false otherwise.\n *\n * @param {Element} element     HTML element to test.\n * @param {number}  keyCode     KeyboardEvent keyCode to test.\n * @param {boolean} hasModifier Whether a modifier is pressed.\n *\n * @return {boolean} Whether element should consider edge navigation.\n */\nexport function isNavigationCandidate( element, keyCode, hasModifier ) {\n\tconst isVertical = keyCode === UP || keyCode === DOWN;\n\n\t// Currently, all elements support unmodified vertical navigation.\n\tif ( isVertical && ! hasModifier ) {\n\t\treturn true;\n\t}\n\n\t// Native inputs should not navigate horizontally.\n\tconst { tagName } = element;\n\treturn tagName !== 'INPUT' && tagName !== 'TEXTAREA';\n}\n\n/**\n * Returns the optimal tab target from the given focused element in the\n * desired direction. A preference is made toward text fields, falling back\n * to the block focus stop if no other candidates exist for the block.\n *\n * @param {Element} target           Currently focused text field.\n * @param {boolean} isReverse        True if considering as the first field.\n * @param {Element} containerElement Element containing all blocks.\n * @param {boolean} onlyVertical     Wether to only consider tabbable elements\n *                                   that are visually above or under the\n *                                   target.\n *\n * @return {?Element} Optimal tab target, if one exists.\n */\nexport function getClosestTabbable(\n\ttarget,\n\tisReverse,\n\tcontainerElement,\n\tonlyVertical\n) {\n\t// Since the current focus target is not guaranteed to be a text field,\n\t// find all focusables. Tabbability is considered later.\n\tlet focusableNodes = focus.focusable.find( containerElement );\n\n\tif ( isReverse ) {\n\t\tfocusableNodes = reverse( focusableNodes );\n\t}\n\n\t// Consider as candidates those focusables after the current target.\n\t// It's assumed this can only be reached if the target is focusable\n\t// (on its keydown event), so no need to verify it exists in the set.\n\tfocusableNodes = focusableNodes.slice(\n\t\tfocusableNodes.indexOf( target ) + 1\n\t);\n\n\tlet targetRect;\n\n\tif ( onlyVertical ) {\n\t\ttargetRect = target.getBoundingClientRect();\n\t}\n\n\tfunction isTabCandidate( node, i, array ) {\n\t\t// Not a candidate if the node is not tabbable.\n\t\tif ( ! focus.tabbable.isTabbableIndex( node ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( onlyVertical ) {\n\t\t\tconst nodeRect = node.getBoundingClientRect();\n\n\t\t\tif (\n\t\t\t\tnodeRect.left >= targetRect.right ||\n\t\t\t\tnodeRect.right <= targetRect.left\n\t\t\t) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\t// Prefer text fields...\n\t\tif ( isTextField( node ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// ...but settle for block focus stop.\n\t\tif ( ! isBlockFocusStop( node ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If element contains inner blocks, stop immediately at its focus\n\t\t// wrapper.\n\t\tif ( hasInnerBlocksContext( node ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If navigating out of a block (in reverse), don't consider its\n\t\t// block focus stop.\n\t\tif ( node.contains( target ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// In case of block focus stop, check to see if there's a better\n\t\t// text field candidate within.\n\t\tfor (\n\t\t\tlet offset = 1, nextNode;\n\t\t\t( nextNode = array[ i + offset ] );\n\t\t\toffset++\n\t\t) {\n\t\t\t// Abort if no longer testing descendents of focus stop.\n\t\t\tif ( ! node.contains( nextNode ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Apply same tests by recursion. This is important to consider\n\t\t\t// nestable blocks where we don't want to settle for the inner\n\t\t\t// block focus stop.\n\t\t\tif ( isTabCandidate( nextNode, i + offset, array ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\treturn find( focusableNodes, isTabCandidate );\n}\n\nfunction selector( select ) {\n\tconst {\n\t\tgetSelectedBlockClientId,\n\t\tgetMultiSelectedBlocksStartClientId,\n\t\tgetMultiSelectedBlocksEndClientId,\n\t\tgetPreviousBlockClientId,\n\t\tgetNextBlockClientId,\n\t\tgetFirstMultiSelectedBlockClientId,\n\t\tgetLastMultiSelectedBlockClientId,\n\t\thasMultiSelection,\n\t\tgetBlockOrder,\n\t\tisNavigationMode,\n\t\tgetBlockRootClientId,\n\t\tgetClientIdsOfDescendants,\n\t\tisSelectionEnabled,\n\t\tgetBlockSelectionStart,\n\t\tisMultiSelecting,\n\t} = select( 'core/block-editor' );\n\n\tconst selectedBlockClientId = getSelectedBlockClientId();\n\tconst selectionStartClientId = getMultiSelectedBlocksStartClientId();\n\tconst selectionEndClientId = getMultiSelectedBlocksEndClientId();\n\n\treturn {\n\t\tselectedBlockClientId,\n\t\tselectionStartClientId,\n\t\tselectionBeforeEndClientId: getPreviousBlockClientId(\n\t\t\tselectionEndClientId || selectedBlockClientId\n\t\t),\n\t\tselectionAfterEndClientId: getNextBlockClientId(\n\t\t\tselectionEndClientId || selectedBlockClientId\n\t\t),\n\t\tselectedFirstClientId: getFirstMultiSelectedBlockClientId(),\n\t\tselectedLastClientId: getLastMultiSelectedBlockClientId(),\n\t\thasMultiSelection: hasMultiSelection(),\n\t\tblocks: getBlockOrder(),\n\t\tisNavigationMode: isNavigationMode(),\n\t\tgetBlockRootClientId,\n\t\tgetClientIdsOfDescendants,\n\t\tisSelectionEnabled: isSelectionEnabled(),\n\t\tblockSelectionStart: getBlockSelectionStart(),\n\t\tisMultiSelecting: isMultiSelecting(),\n\t};\n}\n\n/**\n * Handles selection and navigation across blocks. This component should be\n * wrapped around BlockList.\n */\nexport default function WritingFlow( { children } ) {\n\tconst container = useRef();\n\tconst focusCaptureBeforeRef = useRef();\n\tconst focusCaptureAfterRef = useRef();\n\tconst multiSelectionContainer = useRef();\n\n\tconst entirelySelected = useRef();\n\n\t// Reference that holds the a flag for enabling or disabling\n\t// capturing on the focus capture elements.\n\tconst noCapture = useRef();\n\n\t// Here a DOMRect is stored while moving the caret vertically so vertical\n\t// position of the start position can be restored. This is to recreate\n\t// browser behaviour across blocks.\n\tconst verticalRect = useRef();\n\n\tconst {\n\t\tselectedBlockClientId,\n\t\tselectionStartClientId,\n\t\tselectionBeforeEndClientId,\n\t\tselectionAfterEndClientId,\n\t\tselectedFirstClientId,\n\t\tselectedLastClientId,\n\t\thasMultiSelection,\n\t\tblocks,\n\t\tisNavigationMode,\n\t\tisSelectionEnabled,\n\t\tblockSelectionStart,\n\t\tisMultiSelecting,\n\t\tgetBlockRootClientId,\n\t\tgetClientIdsOfDescendants,\n\t} = useSelect( selector, [] );\n\tconst {\n\t\tmultiSelect,\n\t\tselectBlock,\n\t\tclearSelectedBlock,\n\t\tsetNavigationMode,\n\t} = useDispatch( 'core/block-editor' );\n\n\tfunction onMouseDown( event ) {\n\t\tverticalRect.current = null;\n\n\t\t// Clicking inside a selected block should exit navigation mode.\n\t\tif (\n\t\t\tisNavigationMode &&\n\t\t\tselectedBlockClientId &&\n\t\t\tisInsideRootBlock(\n\t\t\t\tgetBlockDOMNode( selectedBlockClientId ),\n\t\t\t\tevent.target\n\t\t\t)\n\t\t) {\n\t\t\tsetNavigationMode( false );\n\t\t}\n\n\t\t// Multi-select blocks when Shift+clicking.\n\t\tif (\n\t\t\tisSelectionEnabled &&\n\t\t\t// The main button.\n\t\t\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button\n\t\t\tevent.button === 0\n\t\t) {\n\t\t\tconst clientId = getBlockClientId( event.target );\n\n\t\t\tif ( clientId ) {\n\t\t\t\tif ( event.shiftKey ) {\n\t\t\t\t\tif ( blockSelectionStart !== clientId ) {\n\t\t\t\t\t\tmultiSelect( blockSelectionStart, clientId );\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\t// Allow user to escape out of a multi-selection to a singular\n\t\t\t\t\t// selection of a block via click. This is handled here since\n\t\t\t\t\t// focus handling excludes blocks when there is multiselection,\n\t\t\t\t\t// as focus can be incurred by starting a multiselection (focus\n\t\t\t\t\t// moved to first block's multi-controls).\n\t\t\t\t} else if ( hasMultiSelection ) {\n\t\t\t\t\tselectBlock( clientId );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction expandSelection( isReverse ) {\n\t\tconst nextSelectionEndClientId = isReverse\n\t\t\t? selectionBeforeEndClientId\n\t\t\t: selectionAfterEndClientId;\n\n\t\tif ( nextSelectionEndClientId ) {\n\t\t\tmultiSelect(\n\t\t\t\tselectionStartClientId || selectedBlockClientId,\n\t\t\t\tnextSelectionEndClientId\n\t\t\t);\n\t\t}\n\t}\n\n\tfunction moveSelection( isReverse ) {\n\t\tconst focusedBlockClientId = isReverse\n\t\t\t? selectedFirstClientId\n\t\t\t: selectedLastClientId;\n\n\t\tif ( focusedBlockClientId ) {\n\t\t\tselectBlock( focusedBlockClientId );\n\t\t}\n\t}\n\n\t/**\n\t * Returns true if the given target field is the last in its block which\n\t * can be considered for tab transition. For example, in a block with two\n\t * text fields, this would return true when reversing from the first of the\n\t * two fields, but false when reversing from the second.\n\t *\n\t * @param {Element} target    Currently focused text field.\n\t * @param {boolean} isReverse True if considering as the first field.\n\t *\n\t * @return {boolean} Whether field is at edge for tab transition.\n\t */\n\tfunction isTabbableEdge( target, isReverse ) {\n\t\tconst closestTabbable = getClosestTabbable(\n\t\t\ttarget,\n\t\t\tisReverse,\n\t\t\tcontainer.current\n\t\t);\n\t\treturn ! closestTabbable || ! isInSameBlock( target, closestTabbable );\n\t}\n\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode, target } = event;\n\t\tconst isUp = keyCode === UP;\n\t\tconst isDown = keyCode === DOWN;\n\t\tconst isLeft = keyCode === LEFT;\n\t\tconst isRight = keyCode === RIGHT;\n\t\tconst isTab = keyCode === TAB;\n\t\tconst isEscape = keyCode === ESCAPE;\n\t\tconst isReverse = isUp || isLeft;\n\t\tconst isHorizontal = isLeft || isRight;\n\t\tconst isVertical = isUp || isDown;\n\t\tconst isNav = isHorizontal || isVertical;\n\t\tconst isShift = event.shiftKey;\n\t\tconst hasModifier =\n\t\t\tisShift || event.ctrlKey || event.altKey || event.metaKey;\n\t\tconst isNavEdge = isVertical ? isVerticalEdge : isHorizontalEdge;\n\n\t\t// In navigation mode, tab and arrows navigate from block to block.\n\t\tif ( isNavigationMode ) {\n\t\t\tconst navigateUp = ( isTab && isShift ) || isUp;\n\t\t\tconst navigateDown = ( isTab && ! isShift ) || isDown;\n\t\t\t// Move out of current nesting level (no effect if at root level).\n\t\t\tconst navigateOut = isLeft;\n\t\t\t// Move into next nesting level (no effect if the current block has no innerBlocks).\n\t\t\tconst navigateIn = isRight;\n\n\t\t\tlet focusedBlockUid;\n\t\t\tif ( navigateUp ) {\n\t\t\t\tfocusedBlockUid = selectionBeforeEndClientId;\n\t\t\t} else if ( navigateDown ) {\n\t\t\t\tfocusedBlockUid = selectionAfterEndClientId;\n\t\t\t} else if ( navigateOut ) {\n\t\t\t\tfocusedBlockUid =\n\t\t\t\t\tgetBlockRootClientId( selectedBlockClientId ) ??\n\t\t\t\t\tselectedBlockClientId;\n\t\t\t} else if ( navigateIn ) {\n\t\t\t\tfocusedBlockUid =\n\t\t\t\t\tgetClientIdsOfDescendants( [\n\t\t\t\t\t\tselectedBlockClientId,\n\t\t\t\t\t] )[ 0 ] ?? selectedBlockClientId;\n\t\t\t}\n\n\t\t\tif ( navigateDown || navigateUp || navigateOut || navigateIn ) {\n\t\t\t\tif ( focusedBlockUid ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselectBlock( focusedBlockUid );\n\t\t\t\t} else if ( isTab && selectedBlockClientId ) {\n\t\t\t\t\tconst wrapper = getBlockDOMNode( selectedBlockClientId );\n\t\t\t\t\tlet nextTabbable;\n\n\t\t\t\t\tif ( navigateDown ) {\n\t\t\t\t\t\tnextTabbable = focus.tabbable.findNext( wrapper );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnextTabbable = focus.tabbable.findPrevious( wrapper );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( nextTabbable ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tnextTabbable.focus();\n\t\t\t\t\t\tclearSelectedBlock();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// In Edit mode, Tab should focus the first tabbable element after the\n\t\t// content, which is normally the sidebar (with block controls) and\n\t\t// Shift+Tab should focus the first tabbable element before the content,\n\t\t// which is normally the block toolbar.\n\t\t// Arrow keys can be used, and Tab and arrow keys can be used in\n\t\t// Navigation mode (press Esc), to navigate through blocks.\n\t\tif ( selectedBlockClientId ) {\n\t\t\tif ( isTab ) {\n\t\t\t\tconst wrapper = getBlockDOMNode( selectedBlockClientId );\n\n\t\t\t\tif ( isShift ) {\n\t\t\t\t\tif ( target === wrapper ) {\n\t\t\t\t\t\t// Disable focus capturing on the focus capture element, so\n\t\t\t\t\t\t// it doesn't refocus this block and so it allows default\n\t\t\t\t\t\t// behaviour (moving focus to the next tabbable element).\n\t\t\t\t\t\tnoCapture.current = true;\n\t\t\t\t\t\tfocusCaptureBeforeRef.current.focus();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst tabbables = focus.tabbable.find( wrapper );\n\t\t\t\t\tconst lastTabbable = last( tabbables ) || wrapper;\n\n\t\t\t\t\tif ( target === lastTabbable ) {\n\t\t\t\t\t\t// See comment above.\n\t\t\t\t\t\tnoCapture.current = true;\n\t\t\t\t\t\tfocusCaptureAfterRef.current.focus();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if ( isEscape ) {\n\t\t\t\tsetNavigationMode( true );\n\t\t\t}\n\t\t} else if (\n\t\t\thasMultiSelection &&\n\t\t\tisTab &&\n\t\t\ttarget === multiSelectionContainer.current\n\t\t) {\n\t\t\t// See comment above.\n\t\t\tnoCapture.current = true;\n\n\t\t\tif ( isShift ) {\n\t\t\t\tfocusCaptureBeforeRef.current.focus();\n\t\t\t} else {\n\t\t\t\tfocusCaptureAfterRef.current.focus();\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// When presing any key other than up or down, the initial vertical\n\t\t// position must ALWAYS be reset. The vertical position is saved so it\n\t\t// can be restored as well as possible on sebsequent vertical arrow key\n\t\t// presses. It may not always be possible to restore the exact same\n\t\t// position (such as at an empty line), so it wouldn't be good to\n\t\t// compute the position right before any vertical arrow key press.\n\t\tif ( ! isVertical ) {\n\t\t\tverticalRect.current = null;\n\t\t} else if ( ! verticalRect.current ) {\n\t\t\tverticalRect.current = computeCaretRect();\n\t\t}\n\n\t\t// This logic inside this condition needs to be checked before\n\t\t// the check for event.nativeEvent.defaultPrevented.\n\t\t// The logic handles meta+a keypress and this event is default prevented\n\t\t// by RichText.\n\t\tif ( ! isNav ) {\n\t\t\t// Set immediately before the meta+a combination can be pressed.\n\t\t\tif ( isKeyboardEvent.primary( event ) ) {\n\t\t\t\tentirelySelected.current = isEntirelySelected( target );\n\t\t\t}\n\n\t\t\tif ( isKeyboardEvent.primary( event, 'a' ) ) {\n\t\t\t\t// When the target is contentEditable, selection will already\n\t\t\t\t// have been set by the browser earlier in this call stack. We\n\t\t\t\t// need check the previous result, otherwise all blocks will be\n\t\t\t\t// selected right away.\n\t\t\t\tif (\n\t\t\t\t\ttarget.isContentEditable\n\t\t\t\t\t\t? entirelySelected.current\n\t\t\t\t\t\t: isEntirelySelected( target )\n\t\t\t\t) {\n\t\t\t\t\tmultiSelect( first( blocks ), last( blocks ) );\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t\t// After pressing primary + A we can assume isEntirelySelected is true.\n\t\t\t\t// Calling right away isEntirelySelected after primary + A may still return false on some browsers.\n\t\t\t\tentirelySelected.current = true;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if navigation has already been handled (e.g. RichText inline\n\t\t// boundaries).\n\t\tif ( event.nativeEvent.defaultPrevented ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Abort if our current target is not a candidate for navigation (e.g.\n\t\t// preserve native input behaviors).\n\t\tif ( ! isNavigationCandidate( target, keyCode, hasModifier ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In the case of RTL scripts, right means previous and left means next,\n\t\t// which is the exact reverse of LTR.\n\t\tconst { direction } = getComputedStyle( target );\n\t\tconst isReverseDir = direction === 'rtl' ? ! isReverse : isReverse;\n\n\t\tif ( isShift ) {\n\t\t\tif (\n\t\t\t\t// Ensure that there is a target block.\n\t\t\t\t( ( isReverse && selectionBeforeEndClientId ) ||\n\t\t\t\t\t( ! isReverse && selectionAfterEndClientId ) ) &&\n\t\t\t\t( hasMultiSelection ||\n\t\t\t\t\t( isTabbableEdge( target, isReverse ) &&\n\t\t\t\t\t\tisNavEdge( target, isReverse ) ) )\n\t\t\t) {\n\t\t\t\t// Shift key is down, and there is multi selection or we're at\n\t\t\t\t// the end of the current block.\n\t\t\t\texpandSelection( isReverse );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else if ( hasMultiSelection ) {\n\t\t\t// Moving from block multi-selection to single block selection\n\t\t\tmoveSelection( isReverse );\n\t\t\tevent.preventDefault();\n\t\t} else if ( isVertical && isVerticalEdge( target, isReverse ) ) {\n\t\t\tconst closestTabbable = getClosestTabbable(\n\t\t\t\ttarget,\n\t\t\t\tisReverse,\n\t\t\t\tcontainer.current,\n\t\t\t\ttrue\n\t\t\t);\n\n\t\t\tif ( closestTabbable ) {\n\t\t\t\tplaceCaretAtVerticalEdge(\n\t\t\t\t\tclosestTabbable,\n\t\t\t\t\tisReverse,\n\t\t\t\t\tverticalRect.current\n\t\t\t\t);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t} else if (\n\t\t\tisHorizontal &&\n\t\t\tgetSelection().isCollapsed &&\n\t\t\tisHorizontalEdge( target, isReverseDir )\n\t\t) {\n\t\t\tconst closestTabbable = getClosestTabbable(\n\t\t\t\ttarget,\n\t\t\t\tisReverseDir,\n\t\t\t\tcontainer.current\n\t\t\t);\n\t\t\tplaceCaretAtHorizontalEdge( closestTabbable, isReverseDir );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tfunction focusLastTextField() {\n\t\tconst focusableNodes = focus.focusable.find( container.current );\n\t\tconst target = findLast( focusableNodes, isTabbableTextField );\n\t\tif ( target ) {\n\t\t\tplaceCaretAtHorizontalEdge( target, true );\n\t\t}\n\t}\n\n\tuseEffect( () => {\n\t\tif ( hasMultiSelection && ! isMultiSelecting ) {\n\t\t\tmultiSelectionContainer.current.focus();\n\t\t}\n\t}, [ hasMultiSelection, isMultiSelecting ] );\n\n\tconst className = classnames( 'block-editor-writing-flow', {\n\t\t'is-navigate-mode': isNavigationMode,\n\t} );\n\n\t// Disable reason: Wrapper itself is non-interactive, but must capture\n\t// bubbling events from children to determine focus transition intents.\n\t/* eslint-disable jsx-a11y/no-static-element-interactions */\n\treturn (\n\t\t<div className={ className }>\n\t\t\t<FocusCapture\n\t\t\t\tref={ focusCaptureBeforeRef }\n\t\t\t\tselectedClientId={ selectedBlockClientId }\n\t\t\t\tcontainerRef={ container }\n\t\t\t\tnoCapture={ noCapture }\n\t\t\t\thasMultiSelection={ hasMultiSelection }\n\t\t\t\tmultiSelectionContainer={ multiSelectionContainer }\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tref={ container }\n\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\tonMouseDown={ onMouseDown }\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tref={ multiSelectionContainer }\n\t\t\t\t\ttabIndex={ hasMultiSelection ? '0' : undefined }\n\t\t\t\t\taria-label={\n\t\t\t\t\t\thasMultiSelection\n\t\t\t\t\t\t\t? __( 'Multiple selected blocks' )\n\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t}\n\t\t\t\t\t// Needs to be positioned within the viewport, so focus to this\n\t\t\t\t\t// element does not scroll the page.\n\t\t\t\t\tstyle={ { position: 'fixed' } }\n\t\t\t\t/>\n\t\t\t\t{ children }\n\t\t\t</div>\n\t\t\t<FocusCapture\n\t\t\t\tref={ focusCaptureAfterRef }\n\t\t\t\tselectedClientId={ selectedBlockClientId }\n\t\t\t\tcontainerRef={ container }\n\t\t\t\tnoCapture={ noCapture }\n\t\t\t\thasMultiSelection={ hasMultiSelection }\n\t\t\t\tmultiSelectionContainer={ multiSelectionContainer }\n\t\t\t\tisReverse\n\t\t\t/>\n\t\t\t<div\n\t\t\t\taria-hidden\n\t\t\t\ttabIndex={ -1 }\n\t\t\t\tonClick={ focusLastTextField }\n\t\t\t\tclassName=\"block-editor-writing-flow__click-redirect\"\n\t\t\t/>\n\t\t</div>\n\t);\n\t/* eslint-enable jsx-a11y/no-static-element-interactions */\n}\n"]}
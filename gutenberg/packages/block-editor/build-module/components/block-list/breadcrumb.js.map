{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/breadcrumb.js"],"names":["Button","useSelect","useDispatch","useEffect","useRef","BACKSPACE","DELETE","getBlockType","__experimentalGetAccessibleBlockLabel","getAccessibleBlockLabel","BlockTitle","BlockBreadcrumb","clientId","rootClientId","moverDirection","props","selected","select","__unstableGetBlockWithoutInnerBlocks","getBlockIndex","index","name","attributes","setNavigationMode","removeBlock","ref","current","focus","onKeyDown","event","keyCode","preventDefault","blockType","label"],"mappings":";;;;AAAA;;;AAGA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,qBAAlC;AACA,SACCC,YADD,EAECC,qCAAqC,IAAIC,uBAF1C,QAGO,mBAHP;AAKA;;;;AAGA,OAAOC,UAAP,MAAuB,gBAAvB;AAEA;;;;;;;;;;;AAUA,SAASC,eAAT,OAKI;AAAA,MAJHC,QAIG,QAJHA,QAIG;AAAA,MAHHC,YAGG,QAHHA,YAGG;AAAA,MAFHC,cAEG,QAFHA,cAEG;AAAA,MADAC,KACA;;AACH,MAAMC,QAAQ,GAAGf,SAAS,CACzB,UAAEgB,MAAF,EAAc;AAAA,kBAITA,MAAM,CAAE,mBAAF,CAJG;AAAA,QAEZC,oCAFY,WAEZA,oCAFY;AAAA,QAGZC,aAHY,WAGZA,aAHY;;AAKb,QAAMC,KAAK,GAAGD,aAAa,CAAEP,QAAF,EAAYC,YAAZ,CAA3B;;AALa,+BAMgBK,oCAAoC,CAChEN,QADgE,CANpD;AAAA,QAMLS,IANK,wBAMLA,IANK;AAAA,QAMCC,UAND,wBAMCA,UAND;;AASb,WAAO;AAAEF,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,IAAI,EAAJA,IAAT;AAAeC,MAAAA,UAAU,EAAVA;AAAf,KAAP;AACA,GAXwB,EAYzB,CAAEV,QAAF,EAAYC,YAAZ,CAZyB,CAA1B;AADG,MAeKO,KAfL,GAeiCJ,QAfjC,CAeKI,KAfL;AAAA,MAeYC,IAfZ,GAeiCL,QAfjC,CAeYK,IAfZ;AAAA,MAekBC,UAflB,GAeiCN,QAfjC,CAekBM,UAflB;;AAAA,qBAgBwCpB,WAAW,CACrD,mBADqD,CAhBnD;AAAA,MAgBKqB,iBAhBL,gBAgBKA,iBAhBL;AAAA,MAgBwBC,WAhBxB,gBAgBwBA,WAhBxB;;AAmBH,MAAMC,GAAG,GAAGrB,MAAM,EAAlB,CAnBG,CAqBH;;AACAD,EAAAA,SAAS,CAAE,YAAM;AAChBsB,IAAAA,GAAG,CAACC,OAAJ,CAAYC,KAAZ;AACA,GAFQ,CAAT;;AAIA,WAASC,SAAT,CAAoBC,KAApB,EAA4B;AAAA,QACnBC,OADmB,GACPD,KADO,CACnBC,OADmB;;AAG3B,QAAKA,OAAO,KAAKzB,SAAZ,IAAyByB,OAAO,KAAKxB,MAA1C,EAAmD;AAClDkB,MAAAA,WAAW,CAAEZ,QAAF,CAAX;AACAiB,MAAAA,KAAK,CAACE,cAAN;AACA;AACD;;AAED,MAAMC,SAAS,GAAGzB,YAAY,CAAEc,IAAF,CAA9B;AACA,MAAMY,KAAK,GAAGxB,uBAAuB,CACpCuB,SADoC,EAEpCV,UAFoC,EAGpCF,KAAK,GAAG,CAH4B,EAIpCN,cAJoC,CAArC;AAOA,SACC;AAAK,IAAA,SAAS,EAAC;AAAf,KAA0DC,KAA1D,GACC,cAAC,MAAD;AACC,IAAA,GAAG,EAAGU,GADP;AAEC,IAAA,OAAO,EAAG;AAAA,aAAMF,iBAAiB,CAAE,KAAF,CAAvB;AAAA,KAFX;AAGC,IAAA,SAAS,EAAGK,SAHb;AAIC,IAAA,KAAK,EAAGK;AAJT,KAMC,cAAC,UAAD;AAAY,IAAA,QAAQ,EAAGrB;AAAvB,IAND,CADD,CADD;AAYA;;AAED,eAAeD,eAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Button } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { BACKSPACE, DELETE } from '@wordpress/keycodes';\nimport {\n\tgetBlockType,\n\t__experimentalGetAccessibleBlockLabel as getAccessibleBlockLabel,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport BlockTitle from '../block-title';\n\n/**\n * Block breadcrumb component, displaying the label of the block. If the block\n * descends from a root block, a button is displayed enabling the user to select\n * the root block.\n *\n * @param {string} props          Component props.\n * @param {string} props.clientId Client ID of block.\n *\n * @return {WPComponent} The component to be rendered.\n */\nfunction BlockBreadcrumb( {\n\tclientId,\n\trootClientId,\n\tmoverDirection,\n\t...props\n} ) {\n\tconst selected = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\t__unstableGetBlockWithoutInnerBlocks,\n\t\t\t\tgetBlockIndex,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\tconst index = getBlockIndex( clientId, rootClientId );\n\t\t\tconst { name, attributes } = __unstableGetBlockWithoutInnerBlocks(\n\t\t\t\tclientId\n\t\t\t);\n\t\t\treturn { index, name, attributes };\n\t\t},\n\t\t[ clientId, rootClientId ]\n\t);\n\tconst { index, name, attributes } = selected;\n\tconst { setNavigationMode, removeBlock } = useDispatch(\n\t\t'core/block-editor'\n\t);\n\tconst ref = useRef();\n\n\t// Focus the breadcrumb in navigation mode.\n\tuseEffect( () => {\n\t\tref.current.focus();\n\t} );\n\n\tfunction onKeyDown( event ) {\n\t\tconst { keyCode } = event;\n\n\t\tif ( keyCode === BACKSPACE || keyCode === DELETE ) {\n\t\t\tremoveBlock( clientId );\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tconst blockType = getBlockType( name );\n\tconst label = getAccessibleBlockLabel(\n\t\tblockType,\n\t\tattributes,\n\t\tindex + 1,\n\t\tmoverDirection\n\t);\n\n\treturn (\n\t\t<div className=\"block-editor-block-list__breadcrumb\" { ...props }>\n\t\t\t<Button\n\t\t\t\tref={ ref }\n\t\t\t\tonClick={ () => setNavigationMode( false ) }\n\t\t\t\tonKeyDown={ onKeyDown }\n\t\t\t\tlabel={ label }\n\t\t\t>\n\t\t\t\t<BlockTitle clientId={ clientId } />\n\t\t\t</Button>\n\t\t</div>\n\t);\n}\n\nexport default BlockBreadcrumb;\n"]}
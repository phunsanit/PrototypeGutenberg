{"version":3,"sources":["@wordpress/block-editor/src/components/block-actions/index.js"],"names":["castArray","first","last","every","compose","withSelect","withDispatch","hasBlockSupport","switchToBlockType","BlockActions","canDuplicate","canInsertDefaultBlock","children","isLocked","onDuplicate","onGroup","onInsertAfter","onInsertBefore","onRemove","onUngroup","blocks","select","props","canInsertBlockType","getBlockRootClientId","getBlocksByClientId","getTemplateLock","getDefaultBlockName","clientIds","rootClientId","block","name","extraProps","dispatch","removeBlocks","replaceBlocks","duplicateBlocks","insertAfterBlock","insertBeforeBlock","length","getGroupingBlockName","groupingBlockName","newBlocks","innerBlocks"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, first, last, every } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { compose } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { hasBlockSupport, switchToBlockType } from '@wordpress/blocks';\n\nfunction BlockActions( {\n\tcanDuplicate,\n\tcanInsertDefaultBlock,\n\tchildren,\n\tisLocked,\n\tonDuplicate,\n\tonGroup,\n\tonInsertAfter,\n\tonInsertBefore,\n\tonRemove,\n\tonUngroup,\n\tblocks,\n} ) {\n\treturn children( {\n\t\tcanDuplicate,\n\t\tcanInsertDefaultBlock,\n\t\tisLocked,\n\t\tonDuplicate,\n\t\tonGroup,\n\t\tonInsertAfter,\n\t\tonInsertBefore,\n\t\tonRemove,\n\t\tonUngroup,\n\t\tblocks,\n\t} );\n}\n\nexport default compose( [\n\twithSelect( ( select, props ) => {\n\t\tconst {\n\t\t\tcanInsertBlockType,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlocksByClientId,\n\t\t\tgetTemplateLock,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { getDefaultBlockName } = select( 'core/blocks' );\n\n\t\tconst blocks = getBlocksByClientId( props.clientIds );\n\t\tconst rootClientId = getBlockRootClientId( props.clientIds[ 0 ] );\n\t\tconst canDuplicate = every( blocks, ( block ) => {\n\t\t\treturn (\n\t\t\t\t!! block &&\n\t\t\t\thasBlockSupport( block.name, 'multiple', true ) &&\n\t\t\t\tcanInsertBlockType( block.name, rootClientId )\n\t\t\t);\n\t\t} );\n\n\t\tconst canInsertDefaultBlock = canInsertBlockType(\n\t\t\tgetDefaultBlockName(),\n\t\t\trootClientId\n\t\t);\n\n\t\treturn {\n\t\t\tblocks,\n\t\t\tcanDuplicate,\n\t\t\tcanInsertDefaultBlock,\n\t\t\textraProps: props,\n\t\t\tisLocked: !! getTemplateLock( rootClientId ),\n\t\t\trootClientId,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, props, { select } ) => {\n\t\tconst { clientIds, blocks } = props;\n\n\t\tconst {\n\t\t\tremoveBlocks,\n\t\t\treplaceBlocks,\n\t\t\tduplicateBlocks,\n\t\t\tinsertAfterBlock,\n\t\t\tinsertBeforeBlock,\n\t\t} = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tonDuplicate() {\n\t\t\t\treturn duplicateBlocks( clientIds );\n\t\t\t},\n\t\t\tonRemove() {\n\t\t\t\tremoveBlocks( clientIds );\n\t\t\t},\n\t\t\tonInsertBefore() {\n\t\t\t\tinsertBeforeBlock( first( castArray( clientIds ) ) );\n\t\t\t},\n\t\t\tonInsertAfter() {\n\t\t\t\tinsertAfterBlock( last( castArray( clientIds ) ) );\n\t\t\t},\n\t\t\tonGroup() {\n\t\t\t\tif ( ! blocks.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst { getGroupingBlockName } = select( 'core/blocks' );\n\n\t\t\t\tconst groupingBlockName = getGroupingBlockName();\n\n\t\t\t\t// Activate the `transform` on `core/group` which does the conversion\n\t\t\t\tconst newBlocks = switchToBlockType(\n\t\t\t\t\tblocks,\n\t\t\t\t\tgroupingBlockName\n\t\t\t\t);\n\n\t\t\t\tif ( ! newBlocks ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treplaceBlocks( clientIds, newBlocks );\n\t\t\t},\n\n\t\t\tonUngroup() {\n\t\t\t\tif ( ! blocks.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst innerBlocks = blocks[ 0 ].innerBlocks;\n\n\t\t\t\tif ( ! innerBlocks.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treplaceBlocks( clientIds, innerBlocks );\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockActions );\n"]}
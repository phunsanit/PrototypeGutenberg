{"version":3,"sources":["@wordpress/block-editor/src/hooks/font-size.js"],"names":["FONT_SIZE_SUPPORT_KEY","addAttributes","settings","attributes","fontSize","Object","assign","type","addSaveProps","props","blockType","classes","TokenList","className","add","newClassName","value","undefined","addEditProps","existingGetEditWrapperProps","getEditWrapperProps","FontSizeEdit","blockName","name","style","setAttributes","select","getSettings","fontSizes","fontSizeObject","typography","onChange","fontSizeSlug","slug","size"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { addFilter } from '@wordpress/hooks';\nimport { hasBlockSupport } from '@wordpress/blocks';\nimport { useSelect } from '@wordpress/data';\nimport TokenList from '@wordpress/token-list';\n\n/**\n * Internal dependencies\n */\nimport {\n\tgetFontSize,\n\tgetFontSizeClass,\n\tgetFontSizeObjectByValue,\n\tFontSizePicker,\n} from '../components/font-sizes';\nimport { cleanEmptyObject } from './utils';\n\nexport const FONT_SIZE_SUPPORT_KEY = '__experimentalFontSize';\n\n/**\n * Filters registered block settings, extending attributes to include\n * `fontSize` and `fontWeight` attributes.\n *\n * @param  {Object} settings Original block settings\n * @return {Object}          Filtered block settings\n */\nfunction addAttributes( settings ) {\n\tif ( ! hasBlockSupport( settings, FONT_SIZE_SUPPORT_KEY ) ) {\n\t\treturn settings;\n\t}\n\n\t// Allow blocks to specify a default value if needed.\n\tif ( ! settings.attributes.fontSize ) {\n\t\tObject.assign( settings.attributes, {\n\t\t\tfontSize: {\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t} );\n\t}\n\n\treturn settings;\n}\n\n/**\n * Override props assigned to save component to inject font size.\n *\n * @param  {Object} props      Additional props applied to save element\n * @param  {Object} blockType  Block type\n * @param  {Object} attributes Block attributes\n * @return {Object}            Filtered props applied to save element\n */\nfunction addSaveProps( props, blockType, attributes ) {\n\tif ( ! hasBlockSupport( blockType, FONT_SIZE_SUPPORT_KEY ) ) {\n\t\treturn props;\n\t}\n\n\t// Use TokenList to dedupe classes.\n\tconst classes = new TokenList( props.className );\n\tclasses.add( getFontSizeClass( attributes.fontSize ) );\n\tconst newClassName = classes.value;\n\tprops.className = newClassName ? newClassName : undefined;\n\n\treturn props;\n}\n\n/**\n * Filters registered block settings to expand the block edit wrapper\n * by applying the desired styles and classnames.\n *\n * @param  {Object} settings Original block settings\n * @return {Object}          Filtered block settings\n */\nfunction addEditProps( settings ) {\n\tif ( ! hasBlockSupport( settings, FONT_SIZE_SUPPORT_KEY ) ) {\n\t\treturn settings;\n\t}\n\n\tconst existingGetEditWrapperProps = settings.getEditWrapperProps;\n\tsettings.getEditWrapperProps = ( attributes ) => {\n\t\tlet props = {};\n\t\tif ( existingGetEditWrapperProps ) {\n\t\t\tprops = existingGetEditWrapperProps( attributes );\n\t\t}\n\t\treturn addSaveProps( props, settings, attributes );\n\t};\n\n\treturn settings;\n}\n\n/**\n * Inspector control panel containing the font size related configuration\n *\n * @param {Object} props\n *\n * @return {WPElement} Font size edit element.\n */\nexport function FontSizeEdit( props ) {\n\tconst {\n\t\tname: blockName,\n\t\tattributes: { fontSize, style },\n\t\tsetAttributes,\n\t} = props;\n\n\tconst { fontSizes } = useSelect( ( select ) =>\n\t\tselect( 'core/block-editor' ).getSettings()\n\t);\n\n\tif ( ! hasBlockSupport( blockName, FONT_SIZE_SUPPORT_KEY ) ) {\n\t\treturn null;\n\t}\n\n\tconst fontSizeObject = getFontSize(\n\t\tfontSizes,\n\t\tfontSize,\n\t\tstyle?.typography?.fontSize\n\t);\n\tconst onChange = ( value ) => {\n\t\tconst fontSizeSlug = getFontSizeObjectByValue( fontSizes, value ).slug;\n\n\t\tsetAttributes( {\n\t\t\tstyle: cleanEmptyObject( {\n\t\t\t\t...style,\n\t\t\t\ttypography: {\n\t\t\t\t\t...style?.typography,\n\t\t\t\t\tfontSize: fontSizeSlug ? undefined : value,\n\t\t\t\t},\n\t\t\t} ),\n\t\t\tfontSize: fontSizeSlug,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<FontSizePicker value={ fontSizeObject.size } onChange={ onChange } />\n\t);\n}\n\naddFilter(\n\t'blocks.registerBlockType',\n\t'core/font/addAttribute',\n\taddAttributes\n);\n\naddFilter(\n\t'blocks.getSaveContent.extraProps',\n\t'core/font/addSaveProps',\n\taddSaveProps\n);\n\naddFilter( 'blocks.registerBlockType', 'core/font/addEditProps', addEditProps );\n"]}
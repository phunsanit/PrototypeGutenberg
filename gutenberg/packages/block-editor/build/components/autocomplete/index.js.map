{"version":3,"sources":["@wordpress/block-editor/src/components/autocomplete/index.js"],"names":["EMPTY_ARRAY","withFilteredAutocompleters","Autocomplete","props","completers","blockName","concat","blockAutocompleter","map","clone","name","OriginalAutocomplete"],"mappings":";;;;;;;;;;AAWA;;;;AARA;;AAKA;;AACA;;AACA;;AAEA;;AAKA;;AACA;;AAlBA;;;;AAKA;;;;AASA;;;;AAMA;;;;;;AAMA,IAAMA,WAAW,GAAG,EAApB;AAEA;;;;;;;;;;AASO,SAASC,0BAAT,CAAqCC,YAArC,EAAoD;AAC1D,SAAO,UAAEC,KAAF,EAAa;AAAA,4BAC2BA,KAD3B,CACbC,UADa;AAAA,QACbA,UADa,kCACAJ,WADA;AAAA,QACaK,SADb,GAC2BF,KAD3B,CACaE,SADb;AAEnBD,IAAAA,UAAU,GAAG,sBAAS,YAAM;AAC3B,UAAKC,SAAS,KAAK,kCAAnB,EAA2C;AAC1C,eAAOD,UAAU,CAACE,MAAX,CAAmB,CAAEC,cAAF,CAAnB,CAAP;AACA;;AACD,aAAOH,UAAP;AACA,KALY,EAKV,CAAEA,UAAF,EAAcC,SAAd,CALU,CAAb;;AAOA,QAAK,sBAAW,gCAAX,CAAL,EAAqD;AACpDD,MAAAA,UAAU,GAAG,yBACZ,gCADY,EAEZ;AACAA,MAAAA,UAAU,CAACI,GAAX,CAAgBC,aAAhB,CAHY,EAIZN,KAAK,CAACE,SAJM,CAAb;AAMA;;AAED,WAAO,4BAAC,YAAD,6BAAmBF,KAAnB;AAA2B,MAAA,UAAU,EAAGC;AAAxC,OAAP;AACA,GAnBD;AAoBA;AAED;;;;;eAGe,sBAAS,CACvB,mCAAsB;AAAA,MAAIM,IAAJ,QAAIA,IAAJ;AAAA,SAAkB;AAAEL,IAAAA,SAAS,EAAEK;AAAb,GAAlB;AAAA,CAAtB,CADuB,EAEvBT,0BAFuB,CAAT,EAGVU,wBAHU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { clone } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { applyFilters, hasFilter } from '@wordpress/hooks';\nimport { compose } from '@wordpress/compose';\nimport { Autocomplete as OriginalAutocomplete } from '@wordpress/components';\nimport { useMemo } from '@wordpress/element';\nimport { getDefaultBlockName } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { withBlockEditContext } from '../block-edit/context';\nimport blockAutocompleter from '../../autocompleters/block';\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\n/**\n * Wrap the default Autocomplete component with one that\n * supports a filter hook for customizing its list of autocompleters.\n *\n * This function is exported for unit test.\n *\n * @param  {Function} Autocomplete Original component.\n * @return {Function}              Wrapped component\n */\nexport function withFilteredAutocompleters( Autocomplete ) {\n\treturn ( props ) => {\n\t\tlet { completers = EMPTY_ARRAY, blockName } = props;\n\t\tcompleters = useMemo( () => {\n\t\t\tif ( blockName === getDefaultBlockName() ) {\n\t\t\t\treturn completers.concat( [ blockAutocompleter ] );\n\t\t\t}\n\t\t\treturn completers;\n\t\t}, [ completers, blockName ] );\n\n\t\tif ( hasFilter( 'editor.Autocomplete.completers' ) ) {\n\t\t\tcompleters = applyFilters(\n\t\t\t\t'editor.Autocomplete.completers',\n\t\t\t\t// Provide copies so filters may directly modify them.\n\t\t\t\tcompleters.map( clone ),\n\t\t\t\tprops.blockName\n\t\t\t);\n\t\t}\n\n\t\treturn <Autocomplete { ...props } completers={ completers } />;\n\t};\n}\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/master/packages/block-editor/src/components/autocomplete/README.md\n */\nexport default compose( [\n\twithBlockEditContext( ( { name } ) => ( { blockName: name } ) ),\n\twithFilteredAutocompleters,\n] )( OriginalAutocomplete );\n"]}
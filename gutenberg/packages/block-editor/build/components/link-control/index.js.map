{"version":3,"sources":["@wordpress/block-editor/src/components/link-control/index.js"],"names":["ViewerSlot","Slot","ViewerFill","Fill","CREATE_TYPE","makeCancelable","promise","hasCanceled_","wrappedPromise","Promise","resolve","reject","then","val","isCanceled","error","cancel","LinkControl","searchInputPlaceholder","value","settings","onChange","noop","noDirectEntry","showSuggestions","showInitialSuggestions","forceIsEditingLink","createSuggestion","cancelableOnCreate","cancelableCreateSuggestion","wrapperNode","instanceId","url","inputValue","setInputValue","undefined","isEditingLink","setIsEditingLink","isResolvingLink","setIsResolvingLink","errorMessage","setErrorMessage","isEndingEditWithFocus","select","getSettings","fetchSearchSuggestions","__experimentalFetchLinkSuggestions","displayURL","hadFocusLoss","current","contains","document","activeElement","nextFocusTarget","focus","focusable","find","onInputChange","handleDirectEntry","type","protocol","includes","id","title","handleEntitySearch","args","all","isInitialSuggestions","perPage","results","couldBeURL","concat","isURLLike","stopEditing","isInternal","getSearchHandler","handleOnCreate","suggestionTitle","newSuggestion","message","handleSelectSuggestion","suggestion","_value","__value","renderSearchResults","suggestionsListProps","buildSuggestionItemProps","suggestions","selectedSuggestion","isLoading","resultsListClasses","directLinkEntryTypes","isSingleDirectEntryResult","length","toLowerCase","shouldShowCreateSuggestion","searchResultsLabelId","labelText","searchResultsLabel","Fragment","VisuallyHidden","map","index","Object","keys"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { noop, startsWith } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tButton,\n\tExternalLink,\n\tSpinner,\n\tVisuallyHidden,\n\tcreateSlotFill,\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tuseRef,\n\tuseCallback,\n\tuseState,\n\tFragment,\n\tuseEffect,\n\tcreateElement,\n} from '@wordpress/element';\nimport {\n\tsafeDecodeURI,\n\tfilterURLForDisplay,\n\tisURL,\n\tprependHTTP,\n\tgetProtocol,\n} from '@wordpress/url';\nimport { useInstanceId } from '@wordpress/compose';\nimport { useSelect } from '@wordpress/data';\nimport { focus } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport LinkControlSettingsDrawer from './settings-drawer';\nimport LinkControlSearchItem from './search-item';\nimport LinkControlSearchInput from './search-input';\nimport LinkControlSearchCreate from './search-create-button';\n\nconst { Slot: ViewerSlot, Fill: ViewerFill } = createSlotFill(\n\t'BlockEditorLinkControlViewer'\n);\n\n// Used as a unique identifier for the \"Create\" option within search results.\n// Used to help distinguish the \"Create\" suggestion within the search results in\n// order to handle it as a unique case.\nconst CREATE_TYPE = '__CREATE__';\n\n/**\n * Creates a wrapper around a promise which allows it to be programmatically\n * cancelled.\n * See: https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n *\n * @param {Promise} promise the Promise to make cancelable\n */\nconst makeCancelable = ( promise ) => {\n\tlet hasCanceled_ = false;\n\n\tconst wrappedPromise = new Promise( ( resolve, reject ) => {\n\t\tpromise.then(\n\t\t\t( val ) =>\n\t\t\t\thasCanceled_ ? reject( { isCanceled: true } ) : resolve( val ),\n\t\t\t( error ) =>\n\t\t\t\thasCanceled_ ? reject( { isCanceled: true } ) : reject( error )\n\t\t);\n\t} );\n\n\treturn {\n\t\tpromise: wrappedPromise,\n\t\tcancel() {\n\t\t\thasCanceled_ = true;\n\t\t},\n\t};\n};\n/**\n * Default properties associated with a link control value.\n *\n * @typedef WPLinkControlDefaultValue\n *\n * @property {string}   url           Link URL.\n * @property {string=}  title         Link title.\n * @property {boolean=} opensInNewTab Whether link should open in a new browser\n *                                    tab. This value is only assigned if not\n *                                    providing a custom `settings` prop.\n */\n\n/* eslint-disable jsdoc/valid-types */\n/**\n * Custom settings values associated with a link.\n *\n * @typedef {{[setting:string]:any}} WPLinkControlSettingsValue\n */\n/* eslint-enable */\n\n/**\n * Custom settings values associated with a link.\n *\n * @typedef WPLinkControlSetting\n *\n * @property {string} id    Identifier to use as property for setting value.\n * @property {string} title Human-readable label to show in user interface.\n */\n\n/* eslint-disable jsdoc/valid-types */\n/**\n * Properties associated with a link control value, composed as a union of the\n * default properties and any custom settings values.\n *\n * @typedef {WPLinkControlDefaultValue&WPLinkControlSettingsValue} WPLinkControlValue\n */\n/* eslint-enable */\n\n/** @typedef {(nextValue:WPLinkControlValue)=>void} WPLinkControlOnChangeProp */\n\n/**\n * Properties associated with a search suggestion used within the LinkControl.\n *\n * @typedef WPLinkControlSuggestion\n *\n * @property {string} id    Identifier to use to uniquely identify the suggestion.\n * @property {string} type  Identifies the type of the suggestion (eg: `post`,\n *                          `page`, `url`...etc)\n * @property {string} title Human-readable label to show in user interface.\n * @property {string} url   A URL for the suggestion.\n */\n\n/** @typedef {(title:string)=>WPLinkControlSuggestion} WPLinkControlCreateSuggestionProp */\n\n/**\n * @typedef WPLinkControlProps\n *\n * @property {(WPLinkControlSetting[])=}            settings               An array of settings objects. Each object will used to\n *                                                                         render a `ToggleControl` for that setting.\n * @property {boolean=}                             forceIsEditingLink     If passed as either `true` or `false`, controls the\n *                                                                         internal editing state of the component to respective\n *                                                                         show or not show the URL input field.\n * @property {WPLinkControlValue=}                  value                  Current link value.\n * @property {WPLinkControlOnChangeProp=}           onChange               Value change handler, called with the updated value if\n *                                                                         the user selects a new link or updates settings.\n * @property {boolean=}                             noDirectEntry          Whether to disable direct entries or not.\n * @property {boolean=}                             showSuggestions        Whether to present suggestions when typing the URL.\n * @property {boolean=}                             showInitialSuggestions Whether to present initial suggestions immediately.\n * @property {WPLinkControlCreateSuggestionProp=}   createSuggestion       Handler to manage creation of link value from suggestion.\n */\n\n/**\n * Renders a link control. A link control is a controlled input which maintains\n * a value associated with a link (HTML anchor element) and relevant settings\n * for how that link is expected to behave.\n *\n * @param {WPLinkControlProps} props Component props.\n */\nfunction LinkControl( {\n\tsearchInputPlaceholder,\n\tvalue,\n\tsettings,\n\tonChange = noop,\n\tnoDirectEntry = false,\n\tshowSuggestions = true,\n\tshowInitialSuggestions,\n\tforceIsEditingLink,\n\tcreateSuggestion,\n} ) {\n\tconst cancelableOnCreate = useRef();\n\tconst cancelableCreateSuggestion = useRef();\n\n\tconst wrapperNode = useRef();\n\tconst instanceId = useInstanceId( LinkControl );\n\tconst [ inputValue, setInputValue ] = useState(\n\t\t( value && value.url ) || ''\n\t);\n\tconst [ isEditingLink, setIsEditingLink ] = useState(\n\t\tforceIsEditingLink !== undefined\n\t\t\t? forceIsEditingLink\n\t\t\t: ! value || ! value.url\n\t);\n\tconst [ isResolvingLink, setIsResolvingLink ] = useState( false );\n\tconst [ errorMessage, setErrorMessage ] = useState( null );\n\tconst isEndingEditWithFocus = useRef( false );\n\n\tconst { fetchSearchSuggestions } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\treturn {\n\t\t\tfetchSearchSuggestions: getSettings()\n\t\t\t\t.__experimentalFetchLinkSuggestions,\n\t\t};\n\t}, [] );\n\tconst displayURL =\n\t\t( value && filterURLForDisplay( safeDecodeURI( value.url ) ) ) || '';\n\n\tuseEffect( () => {\n\t\tif (\n\t\t\tforceIsEditingLink !== undefined &&\n\t\t\tforceIsEditingLink !== isEditingLink\n\t\t) {\n\t\t\tsetIsEditingLink( forceIsEditingLink );\n\t\t}\n\t}, [ forceIsEditingLink ] );\n\n\tuseEffect( () => {\n\t\t// When `isEditingLink` is set to `false`, a focus loss could occur\n\t\t// since the link input may be removed from the DOM. To avoid this,\n\t\t// reinstate focus to a suitable target if focus has in-fact been lost.\n\t\t// Note that the check is necessary because while typically unsetting\n\t\t// edit mode would render the read-only mode's link element, it isn't\n\t\t// guaranteed. The link input may continue to be shown if the next value\n\t\t// is still unassigned after calling `onChange`.\n\t\tconst hadFocusLoss =\n\t\t\tisEndingEditWithFocus.current &&\n\t\t\twrapperNode.current &&\n\t\t\t! wrapperNode.current.contains( document.activeElement );\n\n\t\tif ( hadFocusLoss ) {\n\t\t\t// Prefer to focus a natural focusable descendent of the wrapper,\n\t\t\t// but settle for the wrapper if there are no other options.\n\t\t\tconst nextFocusTarget =\n\t\t\t\tfocus.focusable.find( wrapperNode.current )[ 0 ] ||\n\t\t\t\twrapperNode.current;\n\n\t\t\tnextFocusTarget.focus();\n\t\t}\n\n\t\tisEndingEditWithFocus.current = false;\n\t}, [ isEditingLink ] );\n\n\t/**\n\t * Handles cancelling any pending Promises that have been made cancelable.\n\t */\n\tuseEffect( () => {\n\t\treturn () => {\n\t\t\t// componentDidUnmount\n\t\t\tif ( cancelableOnCreate.current ) {\n\t\t\t\tcancelableOnCreate.current.cancel();\n\t\t\t}\n\t\t\tif ( cancelableCreateSuggestion.current ) {\n\t\t\t\tcancelableCreateSuggestion.current.cancel();\n\t\t\t}\n\t\t};\n\t}, [] );\n\n\t/**\n\t * onChange LinkControlSearchInput event handler\n\t *\n\t * @param {string} val Current value returned by the search.\n\t */\n\tconst onInputChange = ( val = '' ) => {\n\t\tsetInputValue( val );\n\t};\n\n\tconst handleDirectEntry = noDirectEntry\n\t\t? () => Promise.resolve( [] )\n\t\t: ( val ) => {\n\t\t\t\tlet type = 'URL';\n\n\t\t\t\tconst protocol = getProtocol( val ) || '';\n\n\t\t\t\tif ( protocol.includes( 'mailto' ) ) {\n\t\t\t\t\ttype = 'mailto';\n\t\t\t\t}\n\n\t\t\t\tif ( protocol.includes( 'tel' ) ) {\n\t\t\t\t\ttype = 'tel';\n\t\t\t\t}\n\n\t\t\t\tif ( startsWith( val, '#' ) ) {\n\t\t\t\t\ttype = 'internal';\n\t\t\t\t}\n\n\t\t\t\treturn Promise.resolve( [\n\t\t\t\t\t{\n\t\t\t\t\t\tid: val,\n\t\t\t\t\t\ttitle: val,\n\t\t\t\t\t\turl: type === 'URL' ? prependHTTP( val ) : val,\n\t\t\t\t\t\ttype,\n\t\t\t\t\t},\n\t\t\t\t] );\n\t\t  };\n\n\tconst handleEntitySearch = async ( val, args ) => {\n\t\tlet results = await Promise.all( [\n\t\t\tfetchSearchSuggestions( val, {\n\t\t\t\t...( args.isInitialSuggestions ? { perPage: 3 } : {} ),\n\t\t\t} ),\n\t\t\thandleDirectEntry( val ),\n\t\t] );\n\n\t\tconst couldBeURL = ! val.includes( ' ' );\n\n\t\t// If it's potentially a URL search then concat on a URL search suggestion\n\t\t// just for good measure. That way once the actual results run out we always\n\t\t// have a URL option to fallback on.\n\t\tresults =\n\t\t\tcouldBeURL && ! args.isInitialSuggestions\n\t\t\t\t? results[ 0 ].concat( results[ 1 ] )\n\t\t\t\t: results[ 0 ];\n\n\t\t// Here we append a faux suggestion to represent a \"CREATE\" option. This\n\t\t// is detected in the rendering of the search results and handled as a\n\t\t// special case. This is currently necessary because the suggestions\n\t\t// dropdown will only appear if there are valid suggestions and\n\t\t// therefore unless the create option is a suggestion it will not\n\t\t// display in scenarios where there are no results returned from the\n\t\t// API. In addition promoting CREATE to a first class suggestion affords\n\t\t// the a11y benefits afforded by `URLInput` to all suggestions (eg:\n\t\t// keyboard handling, ARIA roles...etc).\n\t\t//\n\t\t// Note also that the value of the `title` and `url` properties must correspond\n\t\t// to the text value of the `<input>`. This is because `title` is used\n\t\t// when creating the suggestion. Similarly `url` is used when using keyboard to select\n\t\t// the suggestion (the <form> `onSubmit` handler falls-back to `url`).\n\t\treturn isURLLike( val )\n\t\t\t? results\n\t\t\t: results.concat( {\n\t\t\t\t\t// the `id` prop is intentionally ommitted here because it\n\t\t\t\t\t// is never exposed as part of the component's public API.\n\t\t\t\t\t// see: https://github.com/WordPress/gutenberg/pull/19775#discussion_r378931316.\n\t\t\t\t\ttitle: val, // must match the existing `<input>`s text value\n\t\t\t\t\turl: val, // must match the existing `<input>`s text value\n\t\t\t\t\ttype: CREATE_TYPE,\n\t\t\t  } );\n\t};\n\n\t/**\n\t * Cancels editing state and marks that focus may need to be restored after\n\t * the next render, if focus was within the wrapper when editing finished.\n\t */\n\tfunction stopEditing() {\n\t\tisEndingEditWithFocus.current = !! wrapperNode.current?.contains(\n\t\t\tdocument.activeElement\n\t\t);\n\n\t\tsetIsEditingLink( false );\n\t}\n\n\t/**\n\t * Determines whether a given value could be a URL. Note this does not\n\t * guarantee the value is a URL only that it looks like it might be one. For\n\t * example, just because a string has `www.` in it doesn't make it a URL,\n\t * but it does make it highly likely that it will be so in the context of\n\t * creating a link it makes sense to treat it like one.\n\t *\n\t * @param {string} val the candidate for being URL-like (or not).\n\t * @return {boolean}   whether or not the value is potentially a URL.\n\t */\n\tfunction isURLLike( val ) {\n\t\tconst isInternal = startsWith( val, '#' );\n\t\treturn isURL( val ) || ( val && val.includes( 'www.' ) ) || isInternal;\n\t}\n\n\t// Effects\n\tconst getSearchHandler = useCallback(\n\t\t( val, args ) => {\n\t\t\tif ( ! showSuggestions ) {\n\t\t\t\treturn Promise.resolve( [] );\n\t\t\t}\n\n\t\t\treturn isURLLike( val )\n\t\t\t\t? handleDirectEntry( val, args )\n\t\t\t\t: handleEntitySearch( val, args );\n\t\t},\n\t\t[ handleDirectEntry, fetchSearchSuggestions ]\n\t);\n\n\tconst handleOnCreate = async ( suggestionTitle ) => {\n\t\tsetIsResolvingLink( true );\n\t\tsetErrorMessage( null );\n\n\t\ttry {\n\t\t\t// Make cancellable in order that we can avoid setting State\n\t\t\t// if the component unmounts during the call to `createSuggestion`\n\t\t\tcancelableCreateSuggestion.current = makeCancelable(\n\t\t\t\t// Using Promise.resolve to allow createSuggestion to return a\n\t\t\t\t// non-Promise based value.\n\t\t\t\tPromise.resolve( createSuggestion( suggestionTitle ) )\n\t\t\t);\n\n\t\t\tconst newSuggestion = await cancelableCreateSuggestion.current\n\t\t\t\t.promise;\n\n\t\t\t// ********\n\t\t\t// NOTE: if the above Promise rejects then code below here will never run\n\t\t\t// ********\n\t\t\tsetIsResolvingLink( false );\n\n\t\t\t// Only set link if request is resolved, otherwise enable edit mode.\n\t\t\tif ( newSuggestion ) {\n\t\t\t\tonChange( newSuggestion );\n\t\t\t\tstopEditing();\n\t\t\t} else {\n\t\t\t\tsetIsEditingLink( true );\n\t\t\t}\n\t\t} catch ( error ) {\n\t\t\tif ( error && error.isCanceled ) {\n\t\t\t\treturn; // bail if canceled to avoid setting state\n\t\t\t}\n\n\t\t\tsetErrorMessage(\n\t\t\t\terror.message ||\n\t\t\t\t\t__(\n\t\t\t\t\t\t'An unknown error occurred during creation. Please try again.'\n\t\t\t\t\t)\n\t\t\t);\n\t\t\tsetIsResolvingLink( false );\n\t\t\tsetIsEditingLink( true );\n\t\t}\n\t};\n\n\tconst handleSelectSuggestion = ( suggestion, _value = {} ) => {\n\t\tsetIsEditingLink( false );\n\t\tconst __value = { ..._value };\n\t\t// Some direct entries don't have types or IDs, and we still need to clear the previous ones.\n\t\tdelete __value.type;\n\t\tdelete __value.id;\n\t\tonChange( { ...__value, ...suggestion } );\n\t};\n\n\t// Render Components\n\tconst renderSearchResults = ( {\n\t\tsuggestionsListProps,\n\t\tbuildSuggestionItemProps,\n\t\tsuggestions,\n\t\tselectedSuggestion,\n\t\tisLoading,\n\t\tisInitialSuggestions,\n\t} ) => {\n\t\tconst resultsListClasses = classnames(\n\t\t\t'block-editor-link-control__search-results',\n\t\t\t{\n\t\t\t\t'is-loading': isLoading,\n\t\t\t}\n\t\t);\n\n\t\tconst directLinkEntryTypes = [ 'url', 'mailto', 'tel', 'internal' ];\n\t\tconst isSingleDirectEntryResult =\n\t\t\tsuggestions.length === 1 &&\n\t\t\tdirectLinkEntryTypes.includes(\n\t\t\t\tsuggestions[ 0 ].type.toLowerCase()\n\t\t\t);\n\t\tconst shouldShowCreateSuggestion =\n\t\t\tcreateSuggestion &&\n\t\t\t! isSingleDirectEntryResult &&\n\t\t\t! isInitialSuggestions;\n\n\t\t// According to guidelines aria-label should be added if the label\n\t\t// itself is not visible.\n\t\t// See: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role\n\t\tconst searchResultsLabelId = `block-editor-link-control-search-results-label-${ instanceId }`;\n\t\tconst labelText = isInitialSuggestions\n\t\t\t? __( 'Recently updated' )\n\t\t\t: sprintf(\n\t\t\t\t\t/* translators: %s: search term. */\n\t\t\t\t\t__( 'Search results for \"%s\"' ),\n\t\t\t\t\tinputValue\n\t\t\t  );\n\n\t\t// VisuallyHidden rightly doesn't accept custom classNames\n\t\t// so we conditionally render it as a wrapper to visually hide the label\n\t\t// when that is required.\n\t\tconst searchResultsLabel = createElement(\n\t\t\tisInitialSuggestions ? Fragment : VisuallyHidden,\n\t\t\t{}, // empty props\n\t\t\t<span\n\t\t\t\tclassName=\"block-editor-link-control__search-results-label\"\n\t\t\t\tid={ searchResultsLabelId }\n\t\t\t>\n\t\t\t\t{ labelText }\n\t\t\t</span>\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"block-editor-link-control__search-results-wrapper\">\n\t\t\t\t{ searchResultsLabel }\n\t\t\t\t<div\n\t\t\t\t\t{ ...suggestionsListProps }\n\t\t\t\t\tclassName={ resultsListClasses }\n\t\t\t\t\taria-labelledby={ searchResultsLabelId }\n\t\t\t\t>\n\t\t\t\t\t{ suggestions.map( ( suggestion, index ) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tshouldShowCreateSuggestion &&\n\t\t\t\t\t\t\tCREATE_TYPE === suggestion.type\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<LinkControlSearchCreate\n\t\t\t\t\t\t\t\t\tsearchTerm={ inputValue }\n\t\t\t\t\t\t\t\t\tonClick={ async () => {\n\t\t\t\t\t\t\t\t\t\tawait handleOnCreate(\n\t\t\t\t\t\t\t\t\t\t\tsuggestion.title\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t// Intentionally only using `type` here as\n\t\t\t\t\t\t\t\t\t// the constant is enough to uniquely\n\t\t\t\t\t\t\t\t\t// identify the single \"CREATE\" suggestion.\n\t\t\t\t\t\t\t\t\tkey={ suggestion.type }\n\t\t\t\t\t\t\t\t\titemProps={ buildSuggestionItemProps(\n\t\t\t\t\t\t\t\t\t\tsuggestion,\n\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t\tisSelected={ index === selectedSuggestion }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If we're not handling \"Create\" suggestions above then\n\t\t\t\t\t\t// we don't want them in the main results so exit early\n\t\t\t\t\t\tif ( CREATE_TYPE === suggestion.type ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<LinkControlSearchItem\n\t\t\t\t\t\t\t\tkey={ `${ suggestion.id }-${ suggestion.type }` }\n\t\t\t\t\t\t\t\titemProps={ buildSuggestionItemProps(\n\t\t\t\t\t\t\t\t\tsuggestion,\n\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tsuggestion={ suggestion }\n\t\t\t\t\t\t\t\tindex={ index }\n\t\t\t\t\t\t\t\tonClick={ () => {\n\t\t\t\t\t\t\t\t\tstopEditing();\n\t\t\t\t\t\t\t\t\tonChange( { ...value, ...suggestion } );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\tisSelected={ index === selectedSuggestion }\n\t\t\t\t\t\t\t\tisURL={ directLinkEntryTypes.includes(\n\t\t\t\t\t\t\t\t\tsuggestion.type.toLowerCase()\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tsearchTerm={ inputValue }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t} ) }\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\ttabIndex={ -1 }\n\t\t\tref={ wrapperNode }\n\t\t\tclassName=\"block-editor-link-control\"\n\t\t>\n\t\t\t{ isResolvingLink && (\n\t\t\t\t<div className=\"block-editor-link-control__loading\">\n\t\t\t\t\t<Spinner /> { __( 'Creating' ) }…\n\t\t\t\t</div>\n\t\t\t) }\n\n\t\t\t{ ( isEditingLink || ! value ) && ! isResolvingLink && (\n\t\t\t\t<LinkControlSearchInput\n\t\t\t\t\tplaceholder={ searchInputPlaceholder }\n\t\t\t\t\tvalue={ inputValue }\n\t\t\t\t\tonChange={ onInputChange }\n\t\t\t\t\tonSelect={ async ( suggestion ) => {\n\t\t\t\t\t\tif ( CREATE_TYPE === suggestion.type ) {\n\t\t\t\t\t\t\tawait handleOnCreate( inputValue );\n\t\t\t\t\t\t} else if (\n\t\t\t\t\t\t\t! noDirectEntry ||\n\t\t\t\t\t\t\tObject.keys( suggestion ).length > 1\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\thandleSelectSuggestion( suggestion, value );\n\t\t\t\t\t\t\tstopEditing();\n\t\t\t\t\t\t}\n\t\t\t\t\t} }\n\t\t\t\t\trenderSuggestions={\n\t\t\t\t\t\tshowSuggestions ? renderSearchResults : null\n\t\t\t\t\t}\n\t\t\t\t\tfetchSuggestions={ getSearchHandler }\n\t\t\t\t\tshowInitialSuggestions={ showInitialSuggestions }\n\t\t\t\t\terrorMessage={ errorMessage }\n\t\t\t\t/>\n\t\t\t) }\n\n\t\t\t{ value && ! isEditingLink && ! isResolvingLink && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<div\n\t\t\t\t\t\taria-label={ __( 'Currently selected' ) }\n\t\t\t\t\t\taria-selected=\"true\"\n\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\t'block-editor-link-control__search-item',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'is-current': true,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"block-editor-link-control__search-item-header\">\n\t\t\t\t\t\t\t<ExternalLink\n\t\t\t\t\t\t\t\tclassName=\"block-editor-link-control__search-item-title\"\n\t\t\t\t\t\t\t\thref={ value.url }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ ( value && value.title ) || displayURL }\n\t\t\t\t\t\t\t</ExternalLink>\n\t\t\t\t\t\t\t{ value && value.title && (\n\t\t\t\t\t\t\t\t<span className=\"block-editor-link-control__search-item-info\">\n\t\t\t\t\t\t\t\t\t{ displayURL }\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tisSecondary\n\t\t\t\t\t\t\tonClick={ () => setIsEditingLink( true ) }\n\t\t\t\t\t\t\tclassName=\"block-editor-link-control__search-item-action\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Edit' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<ViewerSlot fillProps={ value } />\n\t\t\t\t\t</div>\n\t\t\t\t</Fragment>\n\t\t\t) }\n\t\t\t<LinkControlSettingsDrawer\n\t\t\t\tvalue={ value }\n\t\t\t\tsettings={ settings }\n\t\t\t\tonChange={ onChange }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nLinkControl.ViewerFill = ViewerFill;\n\nexport default LinkControl;\n"]}
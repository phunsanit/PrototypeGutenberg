{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/index.js"],"names":["BLOCK_ANIMATION_THRESHOLD","BlockList","ref","className","rootClientId","renderAppender","__experimentalTagName","__experimentalAppenderTagName","__experimentalPassedProps","selector","select","getBlockOrder","isMultiSelecting","getSelectedBlockClientId","getMultiSelectedBlockClientIds","hasMultiSelection","getGlobalBlockCount","isTyping","blockClientIds","selectedBlockClientId","multiSelectedBlockClientIds","enableAnimation","Container","RootContainer","targetClientId","element","map","clientId","index","isBlockInSelection","includes","undefined","ForwardedBlockList","props","fallbackRef"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { AsyncModeProvider, useSelect } from '@wordpress/data';\nimport { useRef, forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport BlockListBlock from './block';\nimport BlockListAppender from '../block-list-appender';\nimport RootContainer from './root-container';\nimport useBlockDropZone from '../use-block-drop-zone';\n\n/**\n * If the block count exceeds the threshold, we disable the reordering animation\n * to avoid laginess.\n */\nconst BLOCK_ANIMATION_THRESHOLD = 200;\n\nfunction BlockList(\n\t{\n\t\tclassName,\n\t\trootClientId,\n\t\trenderAppender,\n\t\t__experimentalTagName = 'div',\n\t\t__experimentalAppenderTagName,\n\t\t__experimentalPassedProps = {},\n\t},\n\tref\n) {\n\tfunction selector( select ) {\n\t\tconst {\n\t\t\tgetBlockOrder,\n\t\t\tisMultiSelecting,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetMultiSelectedBlockClientIds,\n\t\t\thasMultiSelection,\n\t\t\tgetGlobalBlockCount,\n\t\t\tisTyping,\n\t\t} = select( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tblockClientIds: getBlockOrder( rootClientId ),\n\t\t\tisMultiSelecting: isMultiSelecting(),\n\t\t\tselectedBlockClientId: getSelectedBlockClientId(),\n\t\t\tmultiSelectedBlockClientIds: getMultiSelectedBlockClientIds(),\n\t\t\thasMultiSelection: hasMultiSelection(),\n\t\t\tenableAnimation:\n\t\t\t\t! isTyping() &&\n\t\t\t\tgetGlobalBlockCount() <= BLOCK_ANIMATION_THRESHOLD,\n\t\t};\n\t}\n\n\tconst {\n\t\tblockClientIds,\n\t\tisMultiSelecting,\n\t\tselectedBlockClientId,\n\t\tmultiSelectedBlockClientIds,\n\t\thasMultiSelection,\n\t\tenableAnimation,\n\t} = useSelect( selector, [ rootClientId ] );\n\n\tconst Container = rootClientId ? __experimentalTagName : RootContainer;\n\tconst targetClientId = useBlockDropZone( {\n\t\telement: ref,\n\t\trootClientId,\n\t} );\n\n\treturn (\n\t\t<Container\n\t\t\t{ ...__experimentalPassedProps }\n\t\t\tref={ ref }\n\t\t\tclassName={ classnames(\n\t\t\t\t'block-editor-block-list__layout',\n\t\t\t\tclassName,\n\t\t\t\t__experimentalPassedProps.className\n\t\t\t) }\n\t\t>\n\t\t\t{ blockClientIds.map( ( clientId, index ) => {\n\t\t\t\tconst isBlockInSelection = hasMultiSelection\n\t\t\t\t\t? multiSelectedBlockClientIds.includes( clientId )\n\t\t\t\t\t: selectedBlockClientId === clientId;\n\n\t\t\t\treturn (\n\t\t\t\t\t<AsyncModeProvider\n\t\t\t\t\t\tkey={ clientId }\n\t\t\t\t\t\tvalue={ ! isBlockInSelection }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockListBlock\n\t\t\t\t\t\t\trootClientId={ rootClientId }\n\t\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t\tisMultiSelecting={ isMultiSelecting }\n\t\t\t\t\t\t\t// This prop is explicitly computed and passed down\n\t\t\t\t\t\t\t// to avoid being impacted by the async mode\n\t\t\t\t\t\t\t// otherwise there might be a small delay to trigger the animation.\n\t\t\t\t\t\t\tindex={ index }\n\t\t\t\t\t\t\tenableAnimation={ enableAnimation }\n\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\tclientId === targetClientId\n\t\t\t\t\t\t\t\t\t? 'is-drop-target'\n\t\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</AsyncModeProvider>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t\t<BlockListAppender\n\t\t\t\ttagName={ __experimentalAppenderTagName }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t\trenderAppender={ renderAppender }\n\t\t\t\tclassName={\n\t\t\t\t\ttargetClientId === null ? 'is-drop-target' : undefined\n\t\t\t\t}\n\t\t\t/>\n\t\t</Container>\n\t);\n}\n\nconst ForwardedBlockList = forwardRef( BlockList );\n\n// This component needs to always be synchronous\n// as it's the one changing the async mode\n// depending on the block selection.\nexport default forwardRef( ( props, ref ) => {\n\tconst fallbackRef = useRef();\n\treturn (\n\t\t<AsyncModeProvider value={ false }>\n\t\t\t<ForwardedBlockList ref={ ref || fallbackRef } { ...props } />\n\t\t</AsyncModeProvider>\n\t);\n} );\n"]}
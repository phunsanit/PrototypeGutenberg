{"version":3,"sources":["@wordpress/block-editor/src/components/block-list/block-list-item.native.js"],"names":["stretchStyle","flex","BlockListItem","props","clientId","isReadOnly","shouldShowInsertionPointBefore","shouldShowInsertionPointAfter","contentResizeMode","shouldShowInnerBlockAppender","restProps","readableContentViewStyle","Component","select","rootClientId","isStackedHorizontally","getBlockOrder","getBlockInsertionPoint","isBlockInsertionPointVisible","getSettings","blockClientIds","insertionPoint","blockInsertionPointIsVisible","length","index","readOnly"],"mappings":";;;;;;;;;AAQA;;;;;;;;;;;;;;;;AALA;;AAMA;;AACA;;AACA;;AAKA;;AACA;;;;;;AAEA,IAAMA,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE;AADc,CAArB;;IAIaC,a;;;;;;;;;;;;6BACH;AAAA,wBASJ,KAAKC,KATD;AAAA,UAEPC,QAFO,eAEPA,QAFO;AAAA,UAGPC,UAHO,eAGPA,UAHO;AAAA,UAIPC,8BAJO,eAIPA,8BAJO;AAAA,UAKPC,6BALO,eAKPA,6BALO;AAAA,UAMPC,iBANO,eAMPA,iBANO;AAAA,UAOPC,4BAPO,eAOPA,4BAPO;AAAA,UAQJC,SARI;AAUR,UAAMC,wBAAwB,GAC7BH,iBAAiB,KAAK,SAAtB,IAAmCR,YADpC;AAEA,aACC,4BAAC,+BAAD;AAAqB,QAAA,KAAK,EAAGW;AAA7B,SACC,4BAAC,iBAAD;AACC,QAAA,KAAK,EAAGA,wBADT;AAEC,QAAA,aAAa,EAAGN,UAAU,GAAG,UAAH,GAAgB;AAF3C,SAIGC,8BAA8B,IAC/B,4BAAC,uBAAD,OALF,EAOC,4BAAC,cAAD;AACC,QAAA,GAAG,EAAGF,QADP;AAEC,QAAA,SAAS,EAAG,KAFb;AAGC,QAAA,QAAQ,EAAGA;AAHZ,SAIMM,SAJN,EAPD,EAaG,CAAED,4BAA4B,EAA9B,IACDF,6BADC,IAEA,4BAAC,uBAAD,OAfH,CADD,CADD;AAsBA;;;EAnCiCK,kB;;;;eAsCpB,sBAAS,CACvB,sBACC,UAAEC,MAAF,QAAiE;AAAA,MAArDC,YAAqD,QAArDA,YAAqD;AAAA,MAAvCC,qBAAuC,QAAvCA,qBAAuC;AAAA,MAAhBX,QAAgB,QAAhBA,QAAgB;;AAAA,gBAM5DS,MAAM,CAAE,mBAAF,CANsD;AAAA,MAE/DG,aAF+D,WAE/DA,aAF+D;AAAA,MAG/DC,sBAH+D,WAG/DA,sBAH+D;AAAA,MAI/DC,4BAJ+D,WAI/DA,4BAJ+D;AAAA,MAK/DC,WAL+D,WAK/DA,WAL+D;;AAQhE,MAAMC,cAAc,GAAGJ,aAAa,CAAEF,YAAF,CAApC;AACA,MAAMO,cAAc,GAAGJ,sBAAsB,EAA7C;AACA,MAAMK,4BAA4B,GAAGJ,4BAA4B,EAAjE;AACA,MAAMZ,8BAA8B,GACnC,CAAES,qBAAF,IACAO,4BADA,IAEAD,cAAc,CAACP,YAAf,KAAgCA,YAFhC,MAGA;AACEM,EAAAA,cAAc,CAACG,MAAf,KAA0B,CAA1B,IACD;AACAH,EAAAA,cAAc,CAAEC,cAAc,CAACG,KAAjB,CAAd,KAA2CpB,QAN5C,CADD;AASA,MAAMG,6BAA6B,GAClC,CAAEQ,qBAAF,IACAO,4BADA,IAEAD,cAAc,CAACP,YAAf,KAAgCA,YAFhC,IAGA;AACAM,EAAAA,cAAc,CAACG,MAAf,KAA0BF,cAAc,CAACG,KAJzC,IAKA;AACAJ,EAAAA,cAAc,CAAEC,cAAc,CAACG,KAAf,GAAuB,CAAzB,CAAd,KAA+CpB,QAPhD;AASA,MAAMC,UAAU,GAAGc,WAAW,GAAGM,QAAjC;AAEA,SAAO;AACNnB,IAAAA,8BAA8B,EAA9BA,8BADM;AAENC,IAAAA,6BAA6B,EAA7BA,6BAFM;AAGNF,IAAAA,UAAU,EAAVA;AAHM,GAAP;AAKA,CArCF,CADuB,CAAT,EAwCVH,aAxCU,C","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { ReadableContentView } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport BlockListBlock from './block';\nimport BlockInsertionPoint from './insertion-point';\n\nconst stretchStyle = {\n\tflex: 1,\n};\n\nexport class BlockListItem extends Component {\n\trender() {\n\t\tconst {\n\t\t\tclientId,\n\t\t\tisReadOnly,\n\t\t\tshouldShowInsertionPointBefore,\n\t\t\tshouldShowInsertionPointAfter,\n\t\t\tcontentResizeMode,\n\t\t\tshouldShowInnerBlockAppender,\n\t\t\t...restProps\n\t\t} = this.props;\n\t\tconst readableContentViewStyle =\n\t\t\tcontentResizeMode === 'stretch' && stretchStyle;\n\t\treturn (\n\t\t\t<ReadableContentView style={ readableContentViewStyle }>\n\t\t\t\t<View\n\t\t\t\t\tstyle={ readableContentViewStyle }\n\t\t\t\t\tpointerEvents={ isReadOnly ? 'box-only' : 'auto' }\n\t\t\t\t>\n\t\t\t\t\t{ shouldShowInsertionPointBefore && (\n\t\t\t\t\t\t<BlockInsertionPoint />\n\t\t\t\t\t) }\n\t\t\t\t\t<BlockListBlock\n\t\t\t\t\t\tkey={ clientId }\n\t\t\t\t\t\tshowTitle={ false }\n\t\t\t\t\t\tclientId={ clientId }\n\t\t\t\t\t\t{ ...restProps }\n\t\t\t\t\t/>\n\t\t\t\t\t{ ! shouldShowInnerBlockAppender() &&\n\t\t\t\t\t\tshouldShowInsertionPointAfter && (\n\t\t\t\t\t\t\t<BlockInsertionPoint />\n\t\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t</ReadableContentView>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect(\n\t\t( select, { rootClientId, isStackedHorizontally, clientId } ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockOrder,\n\t\t\t\tgetBlockInsertionPoint,\n\t\t\t\tisBlockInsertionPointVisible,\n\t\t\t\tgetSettings,\n\t\t\t} = select( 'core/block-editor' );\n\n\t\t\tconst blockClientIds = getBlockOrder( rootClientId );\n\t\t\tconst insertionPoint = getBlockInsertionPoint();\n\t\t\tconst blockInsertionPointIsVisible = isBlockInsertionPointVisible();\n\t\t\tconst shouldShowInsertionPointBefore =\n\t\t\t\t! isStackedHorizontally &&\n\t\t\t\tblockInsertionPointIsVisible &&\n\t\t\t\tinsertionPoint.rootClientId === rootClientId &&\n\t\t\t\t// if list is empty, show the insertion point (via the default appender)\n\t\t\t\t( blockClientIds.length === 0 ||\n\t\t\t\t\t// or if the insertion point is right before the denoted block\n\t\t\t\t\tblockClientIds[ insertionPoint.index ] === clientId );\n\n\t\t\tconst shouldShowInsertionPointAfter =\n\t\t\t\t! isStackedHorizontally &&\n\t\t\t\tblockInsertionPointIsVisible &&\n\t\t\t\tinsertionPoint.rootClientId === rootClientId &&\n\t\t\t\t// if the insertion point is at the end of the list\n\t\t\t\tblockClientIds.length === insertionPoint.index &&\n\t\t\t\t// and the denoted block is the last one on the list, show the indicator at the end of the block\n\t\t\t\tblockClientIds[ insertionPoint.index - 1 ] === clientId;\n\n\t\t\tconst isReadOnly = getSettings().readOnly;\n\n\t\t\treturn {\n\t\t\t\tshouldShowInsertionPointBefore,\n\t\t\t\tshouldShowInsertionPointAfter,\n\t\t\t\tisReadOnly,\n\t\t\t};\n\t\t}\n\t),\n] )( BlockListItem );\n"]}
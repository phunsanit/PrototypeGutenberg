{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/menu.native.js"],"names":["MIN_COL_NUM","InserterMenu","arguments","onClose","bind","onLayout","state","numberOfColumns","Dimensions","addEventListener","props","showInsertionPoint","hideInsertionPoint","removeEventListener","bottomSheetWidth","styles","columnPadding","paddingLeft","paddingRight","modalItem","itemPaddingLeft","itemPaddingRight","itemWidth","modalIconWrapper","width","BottomSheet","getWidth","itemTotalWidth","calculateItemWidth","containerTotalWidth","numofColumns","Math","floor","numOfColumns","calculateMinItemWidth","maxWidth","shouldReplaceBlock","insertDefaultBlock","onDismiss","columnProperties","calculateColumnsProperties","setState","getStylesFromColorScheme","items","onSelect","bottomPadding","contentBottomPadding","modalIconWrapperStyle","modalIconWrapperDark","modalIconStyle","modalIcon","modalIconDark","modalItemLabelStyle","modalItemLabel","modalItemLabelDark","content","rowSeparator","item","name","touchableArea","title","icon","src","fill","Component","select","clientId","isAppender","rootClientId","getInserterItems","getBlockName","getBlockRootClientId","getBlockSelectionEnd","getSettings","getChildBlockNames","destinationRootClientId","end","undefined","destinationRootBlockName","shouldInsertAtTheTop","__experimentalShouldInsertAtTheTop","rootChildBlocks","dispatch","ownProps","removeBlock","resetBlocks","clearSelectedBlock","insertBlock","getBlockOrder","getBlockCount","count","blockToReplace","insertionIndex","initialAttributes","insertedBlock","withInstanceId","withPreferredColorScheme"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tFlatList,\n\tView,\n\tText,\n\tTouchableHighlight,\n\tDimensions,\n} from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { createBlock } from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport {\n\twithInstanceId,\n\tcompose,\n\twithPreferredColorScheme,\n} from '@wordpress/compose';\nimport { BottomSheet, Icon } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nconst MIN_COL_NUM = 3;\n\nexport class InserterMenu extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.onClose = this.onClose.bind( this );\n\t\tthis.onLayout = this.onLayout.bind( this );\n\t\tthis.state = {\n\t\t\tnumberOfColumns: MIN_COL_NUM,\n\t\t};\n\n\t\tDimensions.addEventListener( 'change', this.onLayout );\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.showInsertionPoint();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.hideInsertionPoint();\n\t\tDimensions.removeEventListener( 'change', this.onLayout );\n\t}\n\n\tcalculateMinItemWidth( bottomSheetWidth ) {\n\t\tconst { paddingLeft, paddingRight } = styles.columnPadding;\n\t\treturn (\n\t\t\t( bottomSheetWidth - 2 * ( paddingLeft + paddingRight ) ) /\n\t\t\tMIN_COL_NUM\n\t\t);\n\t}\n\n\tcalculateItemWidth() {\n\t\tconst {\n\t\t\tpaddingLeft: itemPaddingLeft,\n\t\t\tpaddingRight: itemPaddingRight,\n\t\t} = styles.modalItem;\n\t\tconst { width: itemWidth } = styles.modalIconWrapper;\n\t\treturn itemWidth + itemPaddingLeft + itemPaddingRight;\n\t}\n\n\tcalculateColumnsProperties() {\n\t\tconst bottomSheetWidth = BottomSheet.getWidth();\n\t\tconst { paddingLeft, paddingRight } = styles.columnPadding;\n\t\tconst itemTotalWidth = this.calculateItemWidth();\n\t\tconst containerTotalWidth =\n\t\t\tbottomSheetWidth - ( paddingLeft + paddingRight );\n\t\tconst numofColumns = Math.floor( containerTotalWidth / itemTotalWidth );\n\n\t\tif ( numofColumns < MIN_COL_NUM ) {\n\t\t\treturn {\n\t\t\t\tnumOfColumns: MIN_COL_NUM,\n\t\t\t\titemWidth: this.calculateMinItemWidth( bottomSheetWidth ),\n\t\t\t\tmaxWidth: containerTotalWidth / MIN_COL_NUM,\n\t\t\t};\n\t\t}\n\t\treturn {\n\t\t\tnumOfColumns: numofColumns,\n\t\t\tmaxWidth: containerTotalWidth / numofColumns,\n\t\t};\n\t}\n\n\tonClose() {\n\t\t// if should replace but didn't insert any block\n\t\t// re-insert default block\n\t\tif ( this.props.shouldReplaceBlock ) {\n\t\t\tthis.props.insertDefaultBlock();\n\t\t}\n\t\tthis.props.onDismiss();\n\t}\n\n\tonLayout() {\n\t\tconst columnProperties = this.calculateColumnsProperties();\n\t\tconst numberOfColumns = columnProperties.numOfColumns;\n\n\t\tthis.setState( { numberOfColumns } );\n\t}\n\n\trender() {\n\t\tconst { getStylesFromColorScheme, items, onSelect } = this.props;\n\t\tconst { numberOfColumns } = this.state;\n\n\t\tconst bottomPadding = styles.contentBottomPadding;\n\t\tconst modalIconWrapperStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalIconWrapper,\n\t\t\tstyles.modalIconWrapperDark\n\t\t);\n\t\tconst modalIconStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalIcon,\n\t\t\tstyles.modalIconDark\n\t\t);\n\t\tconst modalItemLabelStyle = getStylesFromColorScheme(\n\t\t\tstyles.modalItemLabel,\n\t\t\tstyles.modalItemLabelDark\n\t\t);\n\n\t\tconst columnProperties = this.calculateColumnsProperties();\n\n\t\treturn (\n\t\t\t<BottomSheet\n\t\t\t\tisVisible={ true }\n\t\t\t\tonClose={ this.onClose }\n\t\t\t\tcontentStyle={ [ styles.content, bottomPadding ] }\n\t\t\t\thideHeader\n\t\t\t>\n\t\t\t\t<TouchableHighlight accessible={ false }>\n\t\t\t\t\t<FlatList\n\t\t\t\t\t\tonLayout={ this.onLayout }\n\t\t\t\t\t\tscrollEnabled={ false }\n\t\t\t\t\t\tkey={ `InserterUI-${ numberOfColumns }` } //re-render when numberOfColumns changes\n\t\t\t\t\t\tkeyboardShouldPersistTaps=\"always\"\n\t\t\t\t\t\tnumColumns={ numberOfColumns }\n\t\t\t\t\t\tdata={ items }\n\t\t\t\t\t\tItemSeparatorComponent={ () => (\n\t\t\t\t\t\t\t<View style={ styles.rowSeparator } />\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tkeyExtractor={ ( item ) => item.name }\n\t\t\t\t\t\trenderItem={ ( { item } ) => (\n\t\t\t\t\t\t\t<TouchableHighlight\n\t\t\t\t\t\t\t\tstyle={ styles.touchableArea }\n\t\t\t\t\t\t\t\tunderlayColor=\"transparent\"\n\t\t\t\t\t\t\t\tactiveOpacity={ 0.5 }\n\t\t\t\t\t\t\t\taccessibilityLabel={ item.title }\n\t\t\t\t\t\t\t\tonPress={ () => onSelect( item ) }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\t\t\t\tstyles.modalItem,\n\t\t\t\t\t\t\t\t\t\t{ width: columnProperties.maxWidth },\n\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\t\t\tstyle={ [\n\t\t\t\t\t\t\t\t\t\t\tmodalIconWrapperStyle,\n\t\t\t\t\t\t\t\t\t\t\tcolumnProperties.itemWidth && {\n\t\t\t\t\t\t\t\t\t\t\t\twidth:\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolumnProperties.itemWidth,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t] }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<View style={ modalIconStyle }>\n\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\ticon={ item.icon.src }\n\t\t\t\t\t\t\t\t\t\t\t\tfill={ modalIconStyle.fill }\n\t\t\t\t\t\t\t\t\t\t\t\tsize={ modalIconStyle.width }\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t\t\t<Text style={ modalItemLabelStyle }>\n\t\t\t\t\t\t\t\t\t\t{ item.title }\n\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t\t</TouchableHighlight>\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</TouchableHighlight>\n\t\t\t</BottomSheet>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select, { clientId, isAppender, rootClientId } ) => {\n\t\tconst {\n\t\t\tgetInserterItems,\n\t\t\tgetBlockName,\n\t\t\tgetBlockRootClientId,\n\t\t\tgetBlockSelectionEnd,\n\t\t\tgetSettings,\n\t\t} = select( 'core/block-editor' );\n\t\tconst { getChildBlockNames } = select( 'core/blocks' );\n\n\t\tlet destinationRootClientId = rootClientId;\n\t\tif ( ! destinationRootClientId && ! clientId && ! isAppender ) {\n\t\t\tconst end = getBlockSelectionEnd();\n\t\t\tif ( end ) {\n\t\t\t\tdestinationRootClientId =\n\t\t\t\t\tgetBlockRootClientId( end ) || undefined;\n\t\t\t}\n\t\t}\n\t\tconst destinationRootBlockName = getBlockName(\n\t\t\tdestinationRootClientId\n\t\t);\n\n\t\tconst {\n\t\t\t__experimentalShouldInsertAtTheTop: shouldInsertAtTheTop,\n\t\t} = getSettings();\n\n\t\treturn {\n\t\t\trootChildBlocks: getChildBlockNames( destinationRootBlockName ),\n\t\t\titems: getInserterItems( destinationRootClientId ),\n\t\t\tdestinationRootClientId,\n\t\t\tshouldInsertAtTheTop,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps, { select } ) => {\n\t\tconst {\n\t\t\tshowInsertionPoint,\n\t\t\thideInsertionPoint,\n\t\t\tremoveBlock,\n\t\t\tresetBlocks,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\tinsertDefaultBlock,\n\t\t} = dispatch( 'core/block-editor' );\n\n\t\treturn {\n\t\t\tshowInsertionPoint() {\n\t\t\t\tif ( ownProps.shouldReplaceBlock ) {\n\t\t\t\t\tconst { getBlockOrder, getBlockCount } = select(\n\t\t\t\t\t\t'core/block-editor'\n\t\t\t\t\t);\n\n\t\t\t\t\tconst count = getBlockCount();\n\t\t\t\t\t// Check if there is a rootClientId because that means it is a nested replacable block and we don't want to clear/reset all blocks.\n\t\t\t\t\tif ( count === 1 && ! ownProps.rootClientId ) {\n\t\t\t\t\t\t// removing the last block is not possible with `removeBlock` action\n\t\t\t\t\t\t// it always inserts a default block if the last of the blocks have been removed\n\t\t\t\t\t\tclearSelectedBlock();\n\t\t\t\t\t\tresetBlocks( [] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst blockToReplace = getBlockOrder(\n\t\t\t\t\t\t\townProps.destinationRootClientId\n\t\t\t\t\t\t)[ ownProps.insertionIndex ];\n\n\t\t\t\t\t\tremoveBlock( blockToReplace, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshowInsertionPoint(\n\t\t\t\t\townProps.destinationRootClientId,\n\t\t\t\t\townProps.insertionIndex\n\t\t\t\t);\n\t\t\t},\n\t\t\thideInsertionPoint,\n\t\t\tonSelect( item ) {\n\t\t\t\tconst { name, initialAttributes } = item;\n\n\t\t\t\tconst insertedBlock = createBlock( name, initialAttributes );\n\n\t\t\t\tinsertBlock(\n\t\t\t\t\tinsertedBlock,\n\t\t\t\t\townProps.insertionIndex,\n\t\t\t\t\townProps.destinationRootClientId\n\t\t\t\t);\n\n\t\t\t\townProps.onSelect();\n\t\t\t},\n\t\t\tinsertDefaultBlock() {\n\t\t\t\tinsertDefaultBlock(\n\t\t\t\t\t{},\n\t\t\t\t\townProps.destinationRootClientId,\n\t\t\t\t\townProps.insertionIndex\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t} ),\n\twithInstanceId,\n\twithPreferredColorScheme\n)( InserterMenu );\n"]}
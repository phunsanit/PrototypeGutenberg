{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-patterns.js"],"names":["usePatternsState","onInsert","select","getSettings","__experimentalBlockPatterns","__experimentalBlockPatternCategories","patterns","patternCategories","createSuccessNotice","onClickPattern","pattern","blocks","block","title","type","BlockPattern","onClick","content","viewportWidth","event","ENTER","keyCode","SPACE","BlockPatternPlaceholder","BlockPatternList","shownPatterns","map","isShown","includes","name","BlockPatternsSearchResults","filterValue","currentShownPatterns","filteredPatterns","length","BlockPatternsPerCategories","categories","getPatternIndex","Infinity","indexedCategories","index","Math","min","category","undefined","orderedPatterns","sort","a","b","uncategorizedPatterns","filter","patternCategory","categoryPatterns","label","BlockPatterns"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { map, fromPairs } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo, useCallback } from '@wordpress/element';\nimport { parse, cloneBlock } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { ENTER, SPACE } from '@wordpress/keycodes';\nimport { __, sprintf, _x } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport BlockPreview from '../block-preview';\nimport useAsyncList from './use-async-list';\nimport InserterPanel from './panel';\nimport { searchItems } from './search-items';\nimport InserterNoResults from './no-results';\n\nconst usePatternsState = ( onInsert ) => {\n\tconst { patternCategories, patterns } = useSelect( ( select ) => {\n\t\tconst {\n\t\t\t__experimentalBlockPatterns,\n\t\t\t__experimentalBlockPatternCategories,\n\t\t} = select( 'core/block-editor' ).getSettings();\n\t\treturn {\n\t\t\tpatterns: __experimentalBlockPatterns,\n\t\t\tpatternCategories: __experimentalBlockPatternCategories,\n\t\t};\n\t}, [] );\n\tconst { createSuccessNotice } = useDispatch( 'core/notices' );\n\tconst onClickPattern = useCallback( ( pattern, blocks ) => {\n\t\tonInsert( map( blocks, ( block ) => cloneBlock( block ) ) );\n\t\tcreateSuccessNotice(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s: block pattern title. */\n\t\t\t\t__( 'Pattern \"%s\" inserted.' ),\n\t\t\t\tpattern.title\n\t\t\t),\n\t\t\t{\n\t\t\t\ttype: 'snackbar',\n\t\t\t}\n\t\t);\n\t}, [] );\n\n\treturn [ patterns, patternCategories, onClickPattern ];\n};\n\nfunction BlockPattern( { pattern, onClick } ) {\n\tconst { content, viewportWidth } = pattern;\n\tconst blocks = useMemo( () => parse( content ), [ content ] );\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"block-editor-inserter__patterns-item\"\n\t\t\trole=\"button\"\n\t\t\tonClick={ () => onClick( pattern, blocks ) }\n\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\tif ( ENTER === event.keyCode || SPACE === event.keyCode ) {\n\t\t\t\t\tonClick( pattern, blocks );\n\t\t\t\t}\n\t\t\t} }\n\t\t\ttabIndex={ 0 }\n\t\t\taria-label={ pattern.title }\n\t\t>\n\t\t\t<BlockPreview blocks={ blocks } viewportWidth={ viewportWidth } />\n\t\t\t<div className=\"block-editor-inserter__patterns-item-title\">\n\t\t\t\t{ pattern.title }\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction BlockPatternPlaceholder() {\n\treturn (\n\t\t<div className=\"block-editor-inserter__patterns-item is-placeholder\" />\n\t);\n}\n\nfunction BlockPatternList( { patterns, shownPatterns, onClickPattern } ) {\n\treturn patterns.map( ( pattern ) => {\n\t\tconst isShown = shownPatterns.includes( pattern );\n\t\treturn isShown ? (\n\t\t\t<BlockPattern\n\t\t\t\tkey={ pattern.name }\n\t\t\t\tpattern={ pattern }\n\t\t\t\tonClick={ onClickPattern }\n\t\t\t/>\n\t\t) : (\n\t\t\t<BlockPatternPlaceholder key={ pattern.name } />\n\t\t);\n\t} );\n}\n\nfunction BlockPatternsSearchResults( { filterValue, onInsert } ) {\n\tconst [ patterns, , onClick ] = usePatternsState( onInsert );\n\tconst currentShownPatterns = useAsyncList( patterns );\n\n\tconst filteredPatterns = useMemo(\n\t\t() => searchItems( patterns, filterValue ),\n\t\t[ filterValue, patterns ]\n\t);\n\n\tif ( filterValue ) {\n\t\treturn !! filteredPatterns.length ? (\n\t\t\t<InserterPanel title={ __( 'Search Results' ) }>\n\t\t\t\t<BlockPatternList\n\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\tpatterns={ filteredPatterns }\n\t\t\t\t\tonClickPattern={ onClick }\n\t\t\t\t/>\n\t\t\t</InserterPanel>\n\t\t) : (\n\t\t\t<InserterNoResults />\n\t\t);\n\t}\n}\n\nfunction BlockPatternsPerCategories( { onInsert } ) {\n\tconst [ patterns, categories, onClick ] = usePatternsState( onInsert );\n\n\tconst getPatternIndex = useCallback(\n\t\t( pattern ) => {\n\t\t\tif ( ! pattern.categories || ! pattern.categories.length ) {\n\t\t\t\treturn Infinity;\n\t\t\t}\n\t\t\tconst indexedCategories = fromPairs(\n\t\t\t\tcategories.map( ( { name }, index ) => [ name, index ] )\n\t\t\t);\n\t\t\treturn Math.min(\n\t\t\t\t...pattern.categories.map( ( category ) =>\n\t\t\t\t\tindexedCategories[ category ] !== undefined\n\t\t\t\t\t\t? indexedCategories[ category ]\n\t\t\t\t\t\t: Infinity\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\t[ categories ]\n\t);\n\n\t// Ordering the patterns per category is important for the async rendering.\n\tconst orderedPatterns = useMemo( () => {\n\t\treturn patterns.sort( ( a, b ) => {\n\t\t\treturn getPatternIndex( a ) - getPatternIndex( b );\n\t\t} );\n\t}, [ patterns, getPatternIndex ] );\n\n\tconst currentShownPatterns = useAsyncList( orderedPatterns );\n\n\t// Uncategorized Patterns\n\tconst uncategorizedPatterns = useMemo(\n\t\t() =>\n\t\t\tpatterns.filter(\n\t\t\t\t( pattern ) => getPatternIndex( pattern ) === Infinity\n\t\t\t),\n\t\t[ patterns, getPatternIndex ]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t{ categories.map( ( patternCategory ) => {\n\t\t\t\tconst categoryPatterns = patterns.filter(\n\t\t\t\t\t( pattern ) =>\n\t\t\t\t\t\tpattern.categories &&\n\t\t\t\t\t\tpattern.categories.includes( patternCategory.name )\n\t\t\t\t);\n\t\t\t\treturn (\n\t\t\t\t\t!! categoryPatterns.length && (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ patternCategory.name }\n\t\t\t\t\t\t\ttitle={ patternCategory.label }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockPatternList\n\t\t\t\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\t\t\t\tpatterns={ categoryPatterns }\n\t\t\t\t\t\t\t\tonClickPattern={ onClick }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t} ) }\n\n\t\t\t{ !! uncategorizedPatterns.length && (\n\t\t\t\t<InserterPanel title={ _x( 'Uncategorized' ) }>\n\t\t\t\t\t<BlockPatternList\n\t\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\t\tpatterns={ uncategorizedPatterns }\n\t\t\t\t\t\tonClickPattern={ onClick }\n\t\t\t\t\t/>\n\t\t\t\t</InserterPanel>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nfunction BlockPatterns( { onInsert, filterValue } ) {\n\treturn filterValue ? (\n\t\t<BlockPatternsSearchResults\n\t\t\tonInsert={ onInsert }\n\t\t\tfilterValue={ filterValue }\n\t\t/>\n\t) : (\n\t\t<BlockPatternsPerCategories onInsert={ onInsert } />\n\t);\n}\n\nexport default BlockPatterns;\n"]}
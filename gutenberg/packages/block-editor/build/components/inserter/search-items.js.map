{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/search-items.js"],"names":["normalizeSearchTerm","term","replace","toLowerCase","removeMatchingTerms","unmatchedTerms","unprocessedTerms","unmatchedTerm","unprocessedTerm","includes","searchBlockItems","items","categories","collections","searchTerm","normalizedSearchTerms","length","searchItems","getCategory","item","slug","category","title","getCollection","name","split","getVariations","variations","map","variation","matchedVariations","filter","termToMatch","labelTerm","config","defaultGetTitle","defaultGetKeywords","keywords","defaultGetCategory","defaultGetCollection","defaultGetVariations","getTitle","getKeywords","collection","terms","join"],"mappings":";;;;;;;;;;;;;AAGA;;;;;;AASA;;;;;;;AAOO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAiB;AAAA,MAAfC,IAAe,uEAAR,EAAQ;AACnD;AACA;AACAA,EAAAA,IAAI,GAAG,oBAAQA,IAAR,CAAP,CAHmD,CAKnD;AACA;;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAc,KAAd,EAAqB,EAArB,CAAP,CAPmD,CASnD;AACA;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACE,WAAL,EAAP,CAXmD,CAanD;;AACA,SAAO,mBAAOF,IAAP,CAAP;AACA,CAfM;;;;AAiBP,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAEC,cAAF,EAAkBC,gBAAlB,EAAwC;AACnE,SAAO,4BACND,cADM,EAENL,mBAAmB,CAAEM,gBAAF,CAFb,EAGN,UAAEC,aAAF,EAAiBC,eAAjB;AAAA,WACCA,eAAe,CAACC,QAAhB,CAA0BF,aAA1B,CADD;AAAA,GAHM,CAAP;AAMA,CAPD;;AASO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC/BC,KAD+B,EAE/BC,UAF+B,EAG/BC,WAH+B,EAI/BC,UAJ+B,EAK3B;AACJ,MAAMC,qBAAqB,GAAGf,mBAAmB,CAAEc,UAAF,CAAjD;;AACA,MAAKC,qBAAqB,CAACC,MAAtB,KAAiC,CAAtC,EAA0C;AACzC,WAAOL,KAAP;AACA;;AAED,SAAOM,WAAW,CAAEN,KAAF,EAASG,UAAT,EAAqB;AACtCI,IAAAA,WAAW,EAAE,qBAAEC,IAAF;AAAA;;AAAA,sBACZ,kBAAMP,UAAN,EAAkB;AAAEQ,QAAAA,IAAI,EAAED,IAAI,CAACE;AAAb,OAAlB,CADY,0CACZ,MAA6CC,KADjC;AAAA,KADyB;AAGtCC,IAAAA,aAAa,EAAE,uBAAEJ,IAAF;AAAA;;AAAA,sCACdN,WAAW,CAAEM,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAiB,GAAjB,EAAwB,CAAxB,CAAF,CADG,0DACd,sBAA4CH,KAD9B;AAAA,KAHuB;AAKtCI,IAAAA,aAAa,EAAE,uBAAEP,IAAF;AAAA,aACd,CAAEA,IAAI,CAACQ,UAAL,IAAmB,EAArB,EAA0BC,GAA1B,CAA+B,UAAEC,SAAF;AAAA,eAAiBA,SAAS,CAACP,KAA3B;AAAA,OAA/B,CADc;AAAA;AALuB,GAArB,CAAX,CAOHM,GAPG,CAOE,UAAET,IAAF,EAAY;AACpB,QAAK,qBAASA,IAAI,CAACQ,UAAd,CAAL,EAAkC;AACjC,aAAOR,IAAP;AACA;;AAED,QAAMW,iBAAiB,GAAGX,IAAI,CAACQ,UAAL,CAAgBI,MAAhB,CAAwB,UAAEF,SAAF,EAAiB;AAClE,aACC,8BACCd,qBADD,EAECf,mBAAmB,CAAE6B,SAAS,CAACP,KAAZ,CAFpB,EAGC,UAAEU,WAAF,EAAeC,SAAf;AAAA,eACCA,SAAS,CAACxB,QAAV,CAAoBuB,WAApB,CADD;AAAA,OAHD,EAKEhB,MALF,GAKW,CANZ;AAQA,KATyB,CAA1B,CALoB,CAepB;;AACA,QAAK,qBAASc,iBAAT,CAAL,EAAoC;AACnC,aAAOX,IAAP;AACA;;AAED,6BACIA,IADJ;AAECQ,MAAAA,UAAU,EAAEG;AAFb;AAIA,GA/BM,CAAP;AAgCA,CA3CM;AA6CP;;;;;;;;;;;;AAQO,IAAMb,WAAW,GAAG,SAAdA,WAAc,CAAEN,KAAF,EAASG,UAAT,EAAsC;AAAA,MAAjBoB,MAAiB,uEAAR,EAAQ;AAChE,MAAMnB,qBAAqB,GAAGf,mBAAmB,CAAEc,UAAF,CAAjD;;AACA,MAAKC,qBAAqB,CAACC,MAAtB,KAAiC,CAAtC,EAA0C;AACzC,WAAOL,KAAP;AACA;;AAED,MAAMwB,eAAe,GAAG,SAAlBA,eAAkB,CAAEhB,IAAF;AAAA,WAAYA,IAAI,CAACG,KAAjB;AAAA,GAAxB;;AACA,MAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEjB,IAAF;AAAA,WAAYA,IAAI,CAACkB,QAAL,IAAiB,EAA7B;AAAA,GAA3B;;AACA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAEnB,IAAF;AAAA,WAAYA,IAAI,CAACE,QAAjB;AAAA,GAA3B;;AACA,MAAMkB,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,WAAM,IAAN;AAAA,GAA7B;;AACA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA,WAAM,EAAN;AAAA,GAA7B;;AAVgE,yBAiB5DN,MAjB4D,CAY/DO,QAZ+D;AAAA,MAY/DA,QAZ+D,iCAYpDN,eAZoD;AAAA,4BAiB5DD,MAjB4D,CAa/DQ,WAb+D;AAAA,MAa/DA,WAb+D,oCAajDN,kBAbiD;AAAA,4BAiB5DF,MAjB4D,CAc/DhB,WAd+D;AAAA,MAc/DA,WAd+D,oCAcjDoB,kBAdiD;AAAA,8BAiB5DJ,MAjB4D,CAe/DX,aAf+D;AAAA,MAe/DA,aAf+D,sCAe/CgB,oBAf+C;AAAA,8BAiB5DL,MAjB4D,CAgB/DR,aAhB+D;AAAA,MAgB/DA,aAhB+D,sCAgB/Cc,oBAhB+C;AAmBhE,SAAO7B,KAAK,CAACoB,MAAN,CAAc,UAAEZ,IAAF,EAAY;AAChC,QAAMG,KAAK,GAAGmB,QAAQ,CAAEtB,IAAF,CAAtB;AACA,QAAMkB,QAAQ,GAAGK,WAAW,CAAEvB,IAAF,CAA5B;AACA,QAAME,QAAQ,GAAGH,WAAW,CAAEC,IAAF,CAA5B;AACA,QAAMwB,UAAU,GAAGpB,aAAa,CAAEJ,IAAF,CAAhC;AACA,QAAMQ,UAAU,GAAGD,aAAa,CAAEP,IAAF,CAAhC;AAEA,QAAMyB,KAAK,GAAG,CACbtB,KADa,0CAEVe,QAFU,IAGbhB,QAHa,EAIbsB,UAJa,oCAKVhB,UALU,GAMZkB,IANY,CAMN,GANM,CAAd;AAQA,QAAMxC,cAAc,GAAGD,mBAAmB,CACzCW,qBADyC,EAEzC6B,KAFyC,CAA1C;AAKA,WAAOvC,cAAc,CAACW,MAAf,KAA0B,CAAjC;AACA,GArBM,CAAP;AAsBA,CAzCM","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tdeburr,\n\tdifferenceWith,\n\tfind,\n\tintersectionWith,\n\tisEmpty,\n\twords,\n} from 'lodash';\n\n/**\n * Converts the search term into a list of normalized terms.\n *\n * @param {string} term The search term to normalize.\n *\n * @return {string[]} The normalized list of search terms.\n */\nexport const normalizeSearchTerm = ( term = '' ) => {\n\t// Disregard diacritics.\n\t//  Input: \"mÃ©dia\"\n\tterm = deburr( term );\n\n\t// Accommodate leading slash, matching autocomplete expectations.\n\t//  Input: \"/media\"\n\tterm = term.replace( /^\\//, '' );\n\n\t// Lowercase.\n\t//  Input: \"MEDIA\"\n\tterm = term.toLowerCase();\n\n\t// Extract words.\n\treturn words( term );\n};\n\nconst removeMatchingTerms = ( unmatchedTerms, unprocessedTerms ) => {\n\treturn differenceWith(\n\t\tunmatchedTerms,\n\t\tnormalizeSearchTerm( unprocessedTerms ),\n\t\t( unmatchedTerm, unprocessedTerm ) =>\n\t\t\tunprocessedTerm.includes( unmatchedTerm )\n\t);\n};\n\nexport const searchBlockItems = (\n\titems,\n\tcategories,\n\tcollections,\n\tsearchTerm\n) => {\n\tconst normalizedSearchTerms = normalizeSearchTerm( searchTerm );\n\tif ( normalizedSearchTerms.length === 0 ) {\n\t\treturn items;\n\t}\n\n\treturn searchItems( items, searchTerm, {\n\t\tgetCategory: ( item ) =>\n\t\t\tfind( categories, { slug: item.category } )?.title,\n\t\tgetCollection: ( item ) =>\n\t\t\tcollections[ item.name.split( '/' )[ 0 ] ]?.title,\n\t\tgetVariations: ( item ) =>\n\t\t\t( item.variations || [] ).map( ( variation ) => variation.title ),\n\t} ).map( ( item ) => {\n\t\tif ( isEmpty( item.variations ) ) {\n\t\t\treturn item;\n\t\t}\n\n\t\tconst matchedVariations = item.variations.filter( ( variation ) => {\n\t\t\treturn (\n\t\t\t\tintersectionWith(\n\t\t\t\t\tnormalizedSearchTerms,\n\t\t\t\t\tnormalizeSearchTerm( variation.title ),\n\t\t\t\t\t( termToMatch, labelTerm ) =>\n\t\t\t\t\t\tlabelTerm.includes( termToMatch )\n\t\t\t\t).length > 0\n\t\t\t);\n\t\t} );\n\t\t// When no variations matched, fallback to all variations.\n\t\tif ( isEmpty( matchedVariations ) ) {\n\t\t\treturn item;\n\t\t}\n\n\t\treturn {\n\t\t\t...item,\n\t\t\tvariations: matchedVariations,\n\t\t};\n\t} );\n};\n\n/**\n * Filters an item list given a search term.\n *\n * @param {Array} items       Item list\n * @param {string} searchTerm Search term.\n * @param {Object} config     Search Config.\n * @return {Array}            Filtered item list.\n */\nexport const searchItems = ( items, searchTerm, config = {} ) => {\n\tconst normalizedSearchTerms = normalizeSearchTerm( searchTerm );\n\tif ( normalizedSearchTerms.length === 0 ) {\n\t\treturn items;\n\t}\n\n\tconst defaultGetTitle = ( item ) => item.title;\n\tconst defaultGetKeywords = ( item ) => item.keywords || [];\n\tconst defaultGetCategory = ( item ) => item.category;\n\tconst defaultGetCollection = () => null;\n\tconst defaultGetVariations = () => [];\n\tconst {\n\t\tgetTitle = defaultGetTitle,\n\t\tgetKeywords = defaultGetKeywords,\n\t\tgetCategory = defaultGetCategory,\n\t\tgetCollection = defaultGetCollection,\n\t\tgetVariations = defaultGetVariations,\n\t} = config;\n\n\treturn items.filter( ( item ) => {\n\t\tconst title = getTitle( item );\n\t\tconst keywords = getKeywords( item );\n\t\tconst category = getCategory( item );\n\t\tconst collection = getCollection( item );\n\t\tconst variations = getVariations( item );\n\n\t\tconst terms = [\n\t\t\ttitle,\n\t\t\t...keywords,\n\t\t\tcategory,\n\t\t\tcollection,\n\t\t\t...variations,\n\t\t].join( ' ' );\n\n\t\tconst unmatchedTerms = removeMatchingTerms(\n\t\t\tnormalizedSearchTerms,\n\t\t\tterms\n\t\t);\n\n\t\treturn unmatchedTerms.length === 0;\n\t} );\n};\n"]}
{"version":3,"sources":["@wordpress/block-editor/src/components/block-draggable/index.js"],"names":["BlockDraggable","children","clientIds","select","getBlockIndex","getBlockRootClientId","getTemplateLock","rootClientId","length","templateLock","index","srcRootClientId","isDraggable","isDragging","startDraggingBlocks","stopDraggingBlocks","current","blockElementId","transferData","type","srcIndex","srcClientId","onDraggableStart","onDraggableEnd"],"mappings":";;;;;;;AAKA;;AAFA;;AACA;;AAJA;;;AAOA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAA+B;AAAA,MAA3BC,QAA2B,QAA3BA,QAA2B;AAAA,MAAjBC,SAAiB,QAAjBA,SAAiB;;AAAA,mBACL,qBAC/C,UAAEC,MAAF,EAAc;AAAA,kBAKTA,MAAM,CAAE,mBAAF,CALG;AAAA,QAEZC,aAFY,WAEZA,aAFY;AAAA,QAGZC,oBAHY,WAGZA,oBAHY;AAAA,QAIZC,eAJY,WAIZA,eAJY;;AAMb,QAAMC,YAAY,GACjBL,SAAS,CAACM,MAAV,KAAqB,CAArB,GACGH,oBAAoB,CAAEH,SAAS,CAAE,CAAF,CAAX,CADvB,GAEG,IAHJ;AAIA,QAAMO,YAAY,GAAGF,YAAY,GAC9BD,eAAe,CAAEC,YAAF,CADe,GAE9B,IAFH;AAIA,WAAO;AACNG,MAAAA,KAAK,EAAEN,aAAa,CAAEF,SAAS,CAAE,CAAF,CAAX,EAAkBK,YAAlB,CADd;AAENI,MAAAA,eAAe,EAAEJ,YAFX;AAGNK,MAAAA,WAAW,EAAEV,SAAS,CAACM,MAAV,KAAqB,CAArB,IAA0B,UAAUC;AAH3C,KAAP;AAKA,GApB8C,EAqB/C,CAAEP,SAAF,CArB+C,CADK;AAAA,MAC7CS,eAD6C,cAC7CA,eAD6C;AAAA,MAC5BD,KAD4B,cAC5BA,KAD4B;AAAA,MACrBE,WADqB,cACrBA,WADqB;;AAwBrD,MAAMC,UAAU,GAAG,qBAAQ,KAAR,CAAnB;;AAxBqD,qBAyBD,uBACnD,mBADmD,CAzBC;AAAA,MAyB7CC,mBAzB6C,gBAyB7CA,mBAzB6C;AAAA,MAyBxBC,kBAzBwB,gBAyBxBA,kBAzBwB,EA6BrD;;;AACA,0BAAW,YAAM;AAChB,WAAO,YAAM;AACZ,UAAKF,UAAU,CAACG,OAAhB,EAA0B;AACzBD,QAAAA,kBAAkB;AAClB;AACD,KAJD;AAKA,GAND,EAMG,EANH;;AAQA,MAAK,CAAEH,WAAP,EAAqB;AACpB,WAAOX,QAAQ,CAAE;AAAEW,MAAAA,WAAW,EAAE;AAAf,KAAF,CAAf;AACA;;AAED,MAAMK,cAAc,mBAAaf,SAAS,CAAE,CAAF,CAAtB,CAApB;AACA,MAAMgB,YAAY,GAAG;AACpBC,IAAAA,IAAI,EAAE,OADc;AAEpBC,IAAAA,QAAQ,EAAEV,KAFU;AAGpBW,IAAAA,WAAW,EAAEnB,SAAS,CAAE,CAAF,CAHF;AAIpBS,IAAAA,eAAe,EAAfA;AAJoB,GAArB;AAOA,SACC,4BAAC,qBAAD;AACC,IAAA,SAAS,EAAGM,cADb;AAEC,IAAA,YAAY,EAAGC,YAFhB;AAGC,IAAA,WAAW,EAAG,uBAAM;AACnBJ,MAAAA,mBAAmB;AACnBD,MAAAA,UAAU,CAACG,OAAX,GAAqB,IAArB;AACA,KANF;AAOC,IAAA,SAAS,EAAG,qBAAM;AACjBD,MAAAA,kBAAkB;AAClBF,MAAAA,UAAU,CAACG,OAAX,GAAqB,KAArB;AACA;AAVF,KAYG,iBAA4C;AAAA,QAAxCM,gBAAwC,SAAxCA,gBAAwC;AAAA,QAAtBC,cAAsB,SAAtBA,cAAsB;AAC7C,WAAOtB,QAAQ,CAAE;AAChBW,MAAAA,WAAW,EAAE,IADG;AAEhBU,MAAAA,gBAAgB,EAAhBA,gBAFgB;AAGhBC,MAAAA,cAAc,EAAdA;AAHgB,KAAF,CAAf;AAKA,GAlBF,CADD;AAsBA,CAxED;;eA0EevB,c","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Draggable } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\nconst BlockDraggable = ( { children, clientIds } ) => {\n\tconst { srcRootClientId, index, isDraggable } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockIndex,\n\t\t\t\tgetBlockRootClientId,\n\t\t\t\tgetTemplateLock,\n\t\t\t} = select( 'core/block-editor' );\n\t\t\tconst rootClientId =\n\t\t\t\tclientIds.length === 1\n\t\t\t\t\t? getBlockRootClientId( clientIds[ 0 ] )\n\t\t\t\t\t: null;\n\t\t\tconst templateLock = rootClientId\n\t\t\t\t? getTemplateLock( rootClientId )\n\t\t\t\t: null;\n\n\t\t\treturn {\n\t\t\t\tindex: getBlockIndex( clientIds[ 0 ], rootClientId ),\n\t\t\t\tsrcRootClientId: rootClientId,\n\t\t\t\tisDraggable: clientIds.length === 1 && 'all' !== templateLock,\n\t\t\t};\n\t\t},\n\t\t[ clientIds ]\n\t);\n\tconst isDragging = useRef( false );\n\tconst { startDraggingBlocks, stopDraggingBlocks } = useDispatch(\n\t\t'core/block-editor'\n\t);\n\n\t// Stop dragging blocks if the block draggable is unmounted\n\tuseEffect( () => {\n\t\treturn () => {\n\t\t\tif ( isDragging.current ) {\n\t\t\t\tstopDraggingBlocks();\n\t\t\t}\n\t\t};\n\t}, [] );\n\n\tif ( ! isDraggable ) {\n\t\treturn children( { isDraggable: false } );\n\t}\n\n\tconst blockElementId = `block-${ clientIds[ 0 ] }`;\n\tconst transferData = {\n\t\ttype: 'block',\n\t\tsrcIndex: index,\n\t\tsrcClientId: clientIds[ 0 ],\n\t\tsrcRootClientId,\n\t};\n\n\treturn (\n\t\t<Draggable\n\t\t\telementId={ blockElementId }\n\t\t\ttransferData={ transferData }\n\t\t\tonDragStart={ () => {\n\t\t\t\tstartDraggingBlocks();\n\t\t\t\tisDragging.current = true;\n\t\t\t} }\n\t\t\tonDragEnd={ () => {\n\t\t\t\tstopDraggingBlocks();\n\t\t\t\tisDragging.current = false;\n\t\t\t} }\n\t\t>\n\t\t\t{ ( { onDraggableStart, onDraggableEnd } ) => {\n\t\t\t\treturn children( {\n\t\t\t\t\tisDraggable: true,\n\t\t\t\t\tonDraggableStart,\n\t\t\t\t\tonDraggableEnd,\n\t\t\t\t} );\n\t\t\t} }\n\t\t</Draggable>\n\t);\n};\n\nexport default BlockDraggable;\n"]}
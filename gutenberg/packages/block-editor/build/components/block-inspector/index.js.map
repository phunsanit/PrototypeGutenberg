{"version":3,"sources":["@wordpress/block-editor/src/components/block-inspector/index.js"],"names":["BlockInspector","blockType","count","hasBlockStyles","selectedBlockClientId","selectedBlockName","showNoBlockSelectedMessage","isSelectedBlockUnregistered","name","InspectorAdvancedControls","slotName","AdvancedControls","slot","hasFills","Boolean","fills","length","select","getSelectedBlockClientId","getSelectedBlockCount","getBlockName","getBlockStyles","blockStyles"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tgetBlockType,\n\tgetUnregisteredTypeHandlerName,\n\thasBlockSupport,\n} from '@wordpress/blocks';\nimport {\n\tPanelBody,\n\t__experimentalUseSlot as useSlot,\n} from '@wordpress/components';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport SkipToSelectedBlock from '../skip-to-selected-block';\nimport BlockCard from '../block-card';\nimport InspectorControls from '../inspector-controls';\nimport InspectorAdvancedControls from '../inspector-advanced-controls';\nimport BlockStyles from '../block-styles';\nimport MultiSelectionInspector from '../multi-selection-inspector';\nimport DefaultStylePicker from '../default-style-picker';\nconst BlockInspector = ( {\n\tblockType,\n\tcount,\n\thasBlockStyles,\n\tselectedBlockClientId,\n\tselectedBlockName,\n\tshowNoBlockSelectedMessage = true,\n} ) => {\n\tif ( count > 1 ) {\n\t\treturn <MultiSelectionInspector />;\n\t}\n\n\tconst isSelectedBlockUnregistered =\n\t\tselectedBlockName === getUnregisteredTypeHandlerName();\n\n\t/*\n\t * If the selected block is of an unregistered type, avoid showing it as an actual selection\n\t * because we want the user to focus on the unregistered block warning, not block settings.\n\t */\n\tif (\n\t\t! blockType ||\n\t\t! selectedBlockClientId ||\n\t\tisSelectedBlockUnregistered\n\t) {\n\t\tif ( showNoBlockSelectedMessage ) {\n\t\t\treturn (\n\t\t\t\t<span className=\"block-editor-block-inspector__no-blocks\">\n\t\t\t\t\t{ __( 'No block selected.' ) }\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<div className=\"block-editor-block-inspector\">\n\t\t\t<BlockCard blockType={ blockType } />\n\t\t\t{ hasBlockStyles && (\n\t\t\t\t<div>\n\t\t\t\t\t<PanelBody title={ __( 'Styles' ) }>\n\t\t\t\t\t\t<BlockStyles clientId={ selectedBlockClientId } />\n\t\t\t\t\t\t{ hasBlockSupport(\n\t\t\t\t\t\t\tblockType.name,\n\t\t\t\t\t\t\t'defaultStylePicker',\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t) && (\n\t\t\t\t\t\t\t<DefaultStylePicker blockName={ blockType.name } />\n\t\t\t\t\t\t) }\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</div>\n\t\t\t) }\n\t\t\t<InspectorControls.Slot bubblesVirtually />\n\t\t\t<div>\n\t\t\t\t<AdvancedControls\n\t\t\t\t\tslotName={ InspectorAdvancedControls.slotName }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<SkipToSelectedBlock key=\"back\" />\n\t\t</div>\n\t);\n};\n\nconst AdvancedControls = ( { slotName } ) => {\n\tconst slot = useSlot( slotName );\n\tconst hasFills = Boolean( slot.fills && slot.fills.length );\n\n\tif ( ! hasFills ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<PanelBody\n\t\t\tclassName=\"block-editor-block-inspector__advanced\"\n\t\t\ttitle={ __( 'Advanced' ) }\n\t\t\tinitialOpen={ false }\n\t\t>\n\t\t\t<InspectorAdvancedControls.Slot bubblesVirtually />\n\t\t</PanelBody>\n\t);\n};\n\nexport default withSelect( ( select ) => {\n\tconst {\n\t\tgetSelectedBlockClientId,\n\t\tgetSelectedBlockCount,\n\t\tgetBlockName,\n\t} = select( 'core/block-editor' );\n\tconst { getBlockStyles } = select( 'core/blocks' );\n\tconst selectedBlockClientId = getSelectedBlockClientId();\n\tconst selectedBlockName =\n\t\tselectedBlockClientId && getBlockName( selectedBlockClientId );\n\tconst blockType =\n\t\tselectedBlockClientId && getBlockType( selectedBlockName );\n\tconst blockStyles =\n\t\tselectedBlockClientId && getBlockStyles( selectedBlockName );\n\treturn {\n\t\tcount: getSelectedBlockCount(),\n\t\thasBlockStyles: blockStyles && blockStyles.length > 0,\n\t\tselectedBlockName,\n\t\tselectedBlockClientId,\n\t\tblockType,\n\t};\n} )( BlockInspector );\n"]}
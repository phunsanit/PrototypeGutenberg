{"version":3,"sources":["@wordpress/format-library/src/text-color/index.js"],"names":["name","title","EMPTY_ARRAY","TextColorEdit","value","onChange","isActive","activeAttributes","select","blockEditorSelect","settings","getSettings","colors","disableCustomColors","isAddingColor","setIsAddingColor","enableIsAddingColor","disableIsAddingColor","colorIndicatorStyle","activeColor","undefined","backgroundColor","hasColorsToChoose","textColorIcon","textColor","tagName","className","attributes","style","class","edit"],"mappings":";;;;;;;;;;;AAUA;;;;AAPA;;AAKA;;AACA;;AAEA;;AACA;;AACA;;AAKA;;AAlBA;;;;AAKA;;;;AAUA;;;AAKA,IAAMA,IAAI,GAAG,iBAAb;AACA,IAAMC,KAAK,GAAG,cAAI,YAAJ,CAAd;AAEA,IAAMC,WAAW,GAAG,EAApB;;AAEA,SAASC,aAAT,OAA0E;AAAA,MAAhDC,KAAgD,QAAhDA,KAAgD;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,gBAAqB,QAArBA,gBAAqB;;AAAA,mBACjC,qBAAW,UAAEC,MAAF,EAAc;AAChE,QAAMC,iBAAiB,GAAGD,MAAM,CAAE,mBAAF,CAAhC;AACA,QAAIE,QAAJ;;AACA,QAAKD,iBAAiB,IAAIA,iBAAiB,CAACE,WAA5C,EAA0D;AACzDD,MAAAA,QAAQ,GAAGD,iBAAiB,CAACE,WAAlB,EAAX;AACA,KAFD,MAEO;AACND,MAAAA,QAAQ,GAAG,EAAX;AACA;;AACD,WAAO;AACNE,MAAAA,MAAM,EAAE,iBAAKF,QAAL,EAAe,CAAE,QAAF,CAAf,EAA6BR,WAA7B,CADF;AAENW,MAAAA,mBAAmB,EAAEH,QAAQ,CAACG;AAFxB,KAAP;AAIA,GAZuC,CADiC;AAAA,MACjED,MADiE,cACjEA,MADiE;AAAA,MACzDC,mBADyD,cACzDA,mBADyD;;AAAA,kBAc7B,uBAAU,KAAV,CAd6B;AAAA;AAAA,MAcjEC,aAdiE;AAAA,MAclDC,gBAdkD;;AAezE,MAAMC,mBAAmB,GAAG,0BAAa;AAAA,WAAMD,gBAAgB,CAAE,IAAF,CAAtB;AAAA,GAAb,EAA6C,CACxEA,gBADwE,CAA7C,CAA5B;AAGA,MAAME,oBAAoB,GAAG,0BAAa;AAAA,WAAMF,gBAAgB,CAAE,KAAF,CAAtB;AAAA,GAAb,EAA8C,CAC1EA,gBAD0E,CAA9C,CAA7B;AAGA,MAAMG,mBAAmB,GAAG,sBAAS,YAAM;AAC1C,QAAMC,WAAW,GAAG,4BAAgBnB,IAAhB,EAAsBI,KAAtB,EAA6BQ,MAA7B,CAApB;;AACA,QAAK,CAAEO,WAAP,EAAqB;AACpB,aAAOC,SAAP;AACA;;AACD,WAAO;AACNC,MAAAA,eAAe,EAAEF;AADX,KAAP;AAGA,GAR2B,EAQzB,CAAEf,KAAF,EAASQ,MAAT,CARyB,CAA5B;AAUA,MAAMU,iBAAiB,GACtB,CAAE,qBAASV,MAAT,CAAF,IAAuBC,mBAAmB,KAAK,IADhD;;AAEA,MAAK,CAAES,iBAAF,IAAuB,CAAEhB,QAA9B,EAAyC;AACxC,WAAO,IAAP;AACA;;AAED,SACC,qDACC,4BAAC,kCAAD;AACC,IAAA,GAAG,EAAGA,QAAQ,GAAG,YAAH,GAAkB,uBADjC;AAEC,IAAA,SAAS,EAAC,kCAFX;AAGC,IAAA,IAAI,EAAGA,QAAQ,GAAG,YAAH,GAAkBc,SAHlC;AAIC,IAAA,IAAI,EACH,qDACC,4BAAC,WAAD;AAAM,MAAA,IAAI,EAAGG;AAAb,MADD,EAEGjB,QAAQ,IACT;AACC,MAAA,SAAS,EAAC,6CADX;AAEC,MAAA,KAAK,EAAGY;AAFT,MAHF,CALF;AAeC,IAAA,KAAK,EAAGjB,KAfT,CAgBC;AAhBD;AAiBC,IAAA,OAAO,EACNqB,iBAAiB,GACdN,mBADc,GAEd;AAAA,aAAMX,QAAQ,CAAE,4BAAcD,KAAd,EAAqBJ,IAArB,CAAF,CAAd;AAAA;AApBL,IADD,EAwBGc,aAAa,IACd,4BAAC,eAAD;AACC,IAAA,IAAI,EAAGd,IADR;AAEC,IAAA,WAAW,EAAGc,aAFf;AAGC,IAAA,OAAO,EAAGG,oBAHX;AAIC,IAAA,QAAQ,EAAGX,QAJZ;AAKC,IAAA,gBAAgB,EAAGC,gBALpB;AAMC,IAAA,KAAK,EAAGH,KANT;AAOC,IAAA,QAAQ,EAAGC;AAPZ,IAzBF,CADD;AAsCA;;AAEM,IAAMmB,SAAS,GAAG;AACxBxB,EAAAA,IAAI,EAAJA,IADwB;AAExBC,EAAAA,KAAK,EAALA,KAFwB;AAGxBwB,EAAAA,OAAO,EAAE,MAHe;AAIxBC,EAAAA,SAAS,EAAE,kBAJa;AAKxBC,EAAAA,UAAU,EAAE;AACXC,IAAAA,KAAK,EAAE,OADI;AAEXC,IAAAA,KAAK,EAAE;AAFI,GALY;AASxBC,EAAAA,IAAI,EAAE3B;AATkB,CAAlB","sourcesContent":["/**\n * External dependencies\n */\nimport { get, isEmpty } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useSelect } from '@wordpress/data';\nimport { useCallback, useMemo, useState } from '@wordpress/element';\nimport { RichTextToolbarButton } from '@wordpress/block-editor';\nimport { Icon, textColor as textColorIcon } from '@wordpress/icons';\nimport { removeFormat } from '@wordpress/rich-text';\n\n/**\n * Internal dependencies\n */\nimport { default as InlineColorUI, getActiveColor } from './inline';\n\nconst name = 'core/text-color';\nconst title = __( 'Text Color' );\n\nconst EMPTY_ARRAY = [];\n\nfunction TextColorEdit( { value, onChange, isActive, activeAttributes } ) {\n\tconst { colors, disableCustomColors } = useSelect( ( select ) => {\n\t\tconst blockEditorSelect = select( 'core/block-editor' );\n\t\tlet settings;\n\t\tif ( blockEditorSelect && blockEditorSelect.getSettings ) {\n\t\t\tsettings = blockEditorSelect.getSettings();\n\t\t} else {\n\t\t\tsettings = {};\n\t\t}\n\t\treturn {\n\t\t\tcolors: get( settings, [ 'colors' ], EMPTY_ARRAY ),\n\t\t\tdisableCustomColors: settings.disableCustomColors,\n\t\t};\n\t} );\n\tconst [ isAddingColor, setIsAddingColor ] = useState( false );\n\tconst enableIsAddingColor = useCallback( () => setIsAddingColor( true ), [\n\t\tsetIsAddingColor,\n\t] );\n\tconst disableIsAddingColor = useCallback( () => setIsAddingColor( false ), [\n\t\tsetIsAddingColor,\n\t] );\n\tconst colorIndicatorStyle = useMemo( () => {\n\t\tconst activeColor = getActiveColor( name, value, colors );\n\t\tif ( ! activeColor ) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn {\n\t\t\tbackgroundColor: activeColor,\n\t\t};\n\t}, [ value, colors ] );\n\n\tconst hasColorsToChoose =\n\t\t! isEmpty( colors ) || disableCustomColors !== true;\n\tif ( ! hasColorsToChoose && ! isActive ) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<RichTextToolbarButton\n\t\t\t\tkey={ isActive ? 'text-color' : 'text-color-not-active' }\n\t\t\t\tclassName=\"format-library-text-color-button\"\n\t\t\t\tname={ isActive ? 'text-color' : undefined }\n\t\t\t\ticon={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Icon icon={ textColorIcon } />\n\t\t\t\t\t\t{ isActive && (\n\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\tclassName=\"format-library-text-color-button__indicator\"\n\t\t\t\t\t\t\t\tstyle={ colorIndicatorStyle }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\ttitle={ title }\n\t\t\t\t// If has no colors to choose but a color is active remove the color onClick\n\t\t\t\tonClick={\n\t\t\t\t\thasColorsToChoose\n\t\t\t\t\t\t? enableIsAddingColor\n\t\t\t\t\t\t: () => onChange( removeFormat( value, name ) )\n\t\t\t\t}\n\t\t\t/>\n\t\t\t{ isAddingColor && (\n\t\t\t\t<InlineColorUI\n\t\t\t\t\tname={ name }\n\t\t\t\t\taddingColor={ isAddingColor }\n\t\t\t\t\tonClose={ disableIsAddingColor }\n\t\t\t\t\tisActive={ isActive }\n\t\t\t\t\tactiveAttributes={ activeAttributes }\n\t\t\t\t\tvalue={ value }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nexport const textColor = {\n\tname,\n\ttitle,\n\ttagName: 'span',\n\tclassName: 'has-inline-color',\n\tattributes: {\n\t\tstyle: 'style',\n\t\tclass: 'class',\n\t},\n\tedit: TextColorEdit,\n};\n"]}
{"version":3,"sources":["@wordpress/format-library/src/text-color/inline.js"],"names":["get","useCallback","useMemo","useSelect","withSpokenMessages","getRectangleFromRange","applyFormat","removeFormat","getActiveFormat","ColorPalette","URLPopover","getColorClassName","getColorObjectByColorValue","getColorObjectByAttributeValues","getActiveColor","formatName","formatValue","colors","activeColorFormat","styleColor","attributes","style","replace","RegExp","currentClass","class","colorSlug","color","ColorPopoverAtLink","addingColor","props","anchorRect","selection","window","getSelection","range","rangeCount","getRangeAt","element","startContainer","nextElementSibling","nodeType","Node","ELEMENT_NODE","parentNode","closest","getBoundingClientRect","ColorPicker","name","value","onChange","select","getSettings","onColorChange","colorObject","type","slug","activeColor","InlineColorUI","onClose","isActive"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useCallback, useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { withSpokenMessages } from '@wordpress/components';\nimport { getRectangleFromRange } from '@wordpress/dom';\nimport {\n\tapplyFormat,\n\tremoveFormat,\n\tgetActiveFormat,\n} from '@wordpress/rich-text';\nimport {\n\tColorPalette,\n\tURLPopover,\n\tgetColorClassName,\n\tgetColorObjectByColorValue,\n\tgetColorObjectByAttributeValues,\n} from '@wordpress/block-editor';\n\nexport function getActiveColor( formatName, formatValue, colors ) {\n\tconst activeColorFormat = getActiveFormat( formatValue, formatName );\n\tif ( ! activeColorFormat ) {\n\t\treturn;\n\t}\n\tconst styleColor = activeColorFormat.attributes.style;\n\tif ( styleColor ) {\n\t\treturn styleColor.replace( new RegExp( `^color:\\\\s*` ), '' );\n\t}\n\tconst currentClass = activeColorFormat.attributes.class;\n\tif ( currentClass ) {\n\t\tconst colorSlug = currentClass.replace( /.*has-(.*?)-color.*/, '$1' );\n\t\treturn getColorObjectByAttributeValues( colors, colorSlug ).color;\n\t}\n}\n\nconst ColorPopoverAtLink = ( { addingColor, ...props } ) => {\n\t// There is no way to open a text formatter popover when another one is mounted.\n\t// The first popover will always be dismounted when a click outside happens, so we can store the\n\t// anchor Rect during the lifetime of the component.\n\tconst anchorRect = useMemo( () => {\n\t\tconst selection = window.getSelection();\n\t\tconst range =\n\t\t\tselection.rangeCount > 0 ? selection.getRangeAt( 0 ) : null;\n\t\tif ( ! range ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( addingColor ) {\n\t\t\treturn getRectangleFromRange( range );\n\t\t}\n\n\t\tlet element = range.startContainer;\n\n\t\t// If the caret is right before the element, select the next element.\n\t\telement = element.nextElementSibling || element;\n\n\t\twhile ( element.nodeType !== window.Node.ELEMENT_NODE ) {\n\t\t\telement = element.parentNode;\n\t\t}\n\n\t\tconst closest = element.closest( 'span' );\n\t\tif ( closest ) {\n\t\t\treturn closest.getBoundingClientRect();\n\t\t}\n\t}, [] );\n\n\tif ( ! anchorRect ) {\n\t\treturn null;\n\t}\n\n\treturn <URLPopover anchorRect={ anchorRect } { ...props } />;\n};\n\nconst ColorPicker = ( { name, value, onChange } ) => {\n\tconst colors = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( 'core/block-editor' );\n\t\treturn get( getSettings(), [ 'colors' ], [] );\n\t} );\n\tconst onColorChange = useCallback(\n\t\t( color ) => {\n\t\t\tif ( color ) {\n\t\t\t\tconst colorObject = getColorObjectByColorValue( colors, color );\n\t\t\t\tonChange(\n\t\t\t\t\tapplyFormat( value, {\n\t\t\t\t\t\ttype: name,\n\t\t\t\t\t\tattributes: colorObject\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\tclass: getColorClassName(\n\t\t\t\t\t\t\t\t\t\t'color',\n\t\t\t\t\t\t\t\t\t\tcolorObject.slug\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\tstyle: `color:${ color }`,\n\t\t\t\t\t\t\t  },\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tonChange( removeFormat( value, name ) );\n\t\t\t}\n\t\t},\n\t\t[ colors, onChange ]\n\t);\n\tconst activeColor = useMemo( () => getActiveColor( name, value, colors ), [\n\t\tname,\n\t\tvalue,\n\t\tcolors,\n\t] );\n\n\treturn <ColorPalette value={ activeColor } onChange={ onColorChange } />;\n};\n\nconst InlineColorUI = ( {\n\tname,\n\tvalue,\n\tonChange,\n\tonClose,\n\tisActive,\n\taddingColor,\n} ) => {\n\treturn (\n\t\t<ColorPopoverAtLink\n\t\t\tvalue={ value }\n\t\t\tisActive={ isActive }\n\t\t\taddingColor={ addingColor }\n\t\t\tonClose={ onClose }\n\t\t\tclassName=\"components-inline-color-popover\"\n\t\t>\n\t\t\t<ColorPicker name={ name } value={ value } onChange={ onChange } />\n\t\t</ColorPopoverAtLink>\n\t);\n};\n\nexport default withSpokenMessages( InlineColorUI );\n"]}
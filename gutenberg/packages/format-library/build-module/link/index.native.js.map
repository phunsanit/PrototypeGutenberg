{"version":3,"sources":["@wordpress/format-library/src/link/index.native.js"],"names":["find","Clipboard","__","Component","withSpokenMessages","RichTextToolbarButton","applyFormat","getActiveFormat","getTextContent","isCollapsed","removeFormat","slice","isURL","link","linkIcon","ModalLinkUI","name","title","tagName","className","attributes","url","target","edit","arguments","addLink","bind","stopAddingLink","onRemoveFormat","getURLFromClipboard","state","addingLink","props","value","onChange","text","type","setState","isActive","startFormat","startIndex","start","endIndex","end","formats","speak","undefined","linkSelection","getLinkSelection","getString","clipboardText","clipboardURL","activeAttributes"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { find } from 'lodash';\nimport { Clipboard } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport { withSpokenMessages } from '@wordpress/components';\nimport { RichTextToolbarButton } from '@wordpress/block-editor';\nimport {\n\tapplyFormat,\n\tgetActiveFormat,\n\tgetTextContent,\n\tisCollapsed,\n\tremoveFormat,\n\tslice,\n} from '@wordpress/rich-text';\nimport { isURL } from '@wordpress/url';\nimport { link as linkIcon } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport ModalLinkUI from './modal';\n\nconst name = 'core/link';\n\nexport const link = {\n\tname,\n\ttitle: __( 'Link' ),\n\ttagName: 'a',\n\tclassName: null,\n\tattributes: {\n\t\turl: 'href',\n\t\ttarget: 'target',\n\t},\n\tedit: withSpokenMessages(\n\t\tclass LinkEdit extends Component {\n\t\t\tconstructor() {\n\t\t\t\tsuper( ...arguments );\n\n\t\t\t\tthis.addLink = this.addLink.bind( this );\n\t\t\t\tthis.stopAddingLink = this.stopAddingLink.bind( this );\n\t\t\t\tthis.onRemoveFormat = this.onRemoveFormat.bind( this );\n\t\t\t\tthis.getURLFromClipboard = this.getURLFromClipboard.bind(\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t\tthis.state = {\n\t\t\t\t\taddingLink: false,\n\t\t\t\t};\n\t\t\t}\n\n\t\t\taddLink() {\n\t\t\t\tconst { value, onChange } = this.props;\n\t\t\t\tconst text = getTextContent( slice( value ) );\n\n\t\t\t\tif ( text && isURL( text ) ) {\n\t\t\t\t\tonChange(\n\t\t\t\t\t\tapplyFormat( value, {\n\t\t\t\t\t\t\ttype: name,\n\t\t\t\t\t\t\tattributes: { url: text },\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState( { addingLink: true } );\n\t\t\t\t\tthis.getURLFromClipboard();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstopAddingLink() {\n\t\t\t\tthis.setState( { addingLink: false } );\n\t\t\t}\n\n\t\t\tgetLinkSelection() {\n\t\t\t\tconst { value, isActive } = this.props;\n\t\t\t\tconst startFormat = getActiveFormat( value, 'core/link' );\n\n\t\t\t\t// if the link isn't selected, get the link manually by looking around the cursor\n\t\t\t\t// TODO: handle partly selected links\n\t\t\t\tif ( startFormat && isCollapsed( value ) && isActive ) {\n\t\t\t\t\tlet startIndex = value.start;\n\t\t\t\t\tlet endIndex = value.end;\n\n\t\t\t\t\twhile ( find( value.formats[ startIndex ], startFormat ) ) {\n\t\t\t\t\t\tstartIndex--;\n\t\t\t\t\t}\n\n\t\t\t\t\tendIndex++;\n\n\t\t\t\t\twhile ( find( value.formats[ endIndex ], startFormat ) ) {\n\t\t\t\t\t\tendIndex++;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...value,\n\t\t\t\t\t\tstart: startIndex + 1,\n\t\t\t\t\t\tend: endIndex,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\tonRemoveFormat() {\n\t\t\t\tconst { onChange, speak, value } = this.props;\n\t\t\t\tconst startFormat = getActiveFormat( value, 'core/link' );\n\n\t\t\t\t// Before we try to remove anything we check if there is something at the caret position to remove.\n\t\t\t\tif ( isCollapsed( value ) && startFormat === undefined ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst linkSelection = this.getLinkSelection();\n\n\t\t\t\tonChange( removeFormat( linkSelection, name ) );\n\t\t\t\tspeak( __( 'Link removed.' ), 'assertive' );\n\t\t\t}\n\n\t\t\tasync getURLFromClipboard() {\n\t\t\t\tconst clipboardText = await Clipboard.getString();\n\t\t\t\tif ( ! clipboardText ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Check if pasted text is URL\n\t\t\t\tif ( ! isURL( clipboardText ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.setState( { clipboardURL: clipboardText } );\n\t\t\t}\n\n\t\t\trender() {\n\t\t\t\tconst { isActive, activeAttributes, onChange } = this.props;\n\t\t\t\tconst linkSelection = this.getLinkSelection();\n\t\t\t\t// If no URL is set and we have a clipboard URL let's use it\n\t\t\t\tif ( ! activeAttributes.url && this.state.clipboardURL ) {\n\t\t\t\t\tactiveAttributes.url = this.state.clipboardURL;\n\t\t\t\t}\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ModalLinkUI\n\t\t\t\t\t\t\tisVisible={ this.state.addingLink }\n\t\t\t\t\t\t\tisActive={ isActive }\n\t\t\t\t\t\t\tactiveAttributes={ activeAttributes }\n\t\t\t\t\t\t\tonClose={ this.stopAddingLink }\n\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t\tonRemove={ this.onRemoveFormat }\n\t\t\t\t\t\t\tvalue={ linkSelection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<RichTextToolbarButton\n\t\t\t\t\t\t\tname=\"link\"\n\t\t\t\t\t\t\ticon={ linkIcon }\n\t\t\t\t\t\t\ttitle={ __( 'Link' ) }\n\t\t\t\t\t\t\tonClick={ this.addLink }\n\t\t\t\t\t\t\tisActive={ isActive }\n\t\t\t\t\t\t\tshortcutType=\"primary\"\n\t\t\t\t\t\t\tshortcutCharacter=\"k\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t),\n};\n"]}
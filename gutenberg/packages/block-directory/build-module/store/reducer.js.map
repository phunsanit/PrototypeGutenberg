{"version":3,"sources":["@wordpress/block-directory/src/store/reducer.js"],"names":["combineReducers","downloadableBlocks","state","results","isRequestingDownloadableBlocks","action","type","filterValue","blockManagement","installedBlockTypes","isInstalling","item","filter","blockType","name","hasPermission","errorNotices","blockId","notice"],"mappings":";;;;;;;AAAA;;;AAGA,SAASA,eAAT,QAAgC,iBAAhC;AAEA;;;;;;;;;AAQA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAM7B;AAAA,MALJC,KAKI,uEALI;AACPC,IAAAA,OAAO,EAAE,EADF;AAEPC,IAAAA,8BAA8B,EAAE;AAFzB,GAKJ;AAAA,MADJC,MACI;;AACJ,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,2BAAL;AACC,+BACIJ,KADJ;AAECE,QAAAA,8BAA8B,EAAE;AAFjC;;AAID,SAAK,6BAAL;AACC,+BACIF,KADJ;AAECC,QAAAA,OAAO,oBACHD,KAAK,CAACC,OADH,sBAEJE,MAAM,CAACE,WAFH,EAEkBF,MAAM,CAACJ,kBAFzB,EAFR;AAMCG,QAAAA,8BAA8B,EAAE;AANjC;AAPF;;AAgBA,SAAOF,KAAP;AACA,CAxBM;AA0BP;;;;;;;;;AAQA,OAAO,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,GAM1B;AAAA,MALJN,KAKI,uEALI;AACPO,IAAAA,mBAAmB,EAAE,EADd;AAEPC,IAAAA,YAAY,EAAE;AAFP,GAKJ;AAAA,MADJL,MACI;;AACJ,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,0BAAL;AACC,+BACIJ,KADJ;AAECO,QAAAA,mBAAmB,+BACfP,KAAK,CAACO,mBADS,IAElBJ,MAAM,CAACM,IAFW;AAFpB;;AAOD,SAAK,6BAAL;AACC,+BACIT,KADJ;AAECO,QAAAA,mBAAmB,EAAEP,KAAK,CAACO,mBAAN,CAA0BG,MAA1B,CACpB,UAAEC,SAAF;AAAA,iBAAiBA,SAAS,CAACC,IAAV,KAAmBT,MAAM,CAACM,IAAP,CAAYG,IAAhD;AAAA,SADoB;AAFtB;;AAMD,SAAK,sBAAL;AACC,+BACIZ,KADJ;AAECQ,QAAAA,YAAY,EAAEL,MAAM,CAACK;AAFtB;AAjBF;;AAsBA,SAAOR,KAAP;AACA,CA9BM;AAgCP;;;;;;;;;AAQA,OAAO,SAASa,aAAT,GAA+C;AAAA,MAAvBb,KAAuB,uEAAf,IAAe;AAAA,MAATG,MAAS;;AACrD,MAAKA,MAAM,CAACC,IAAP,KAAgB,+BAArB,EAAuD;AACtD,WAAOD,MAAM,CAACU,aAAd;AACA;;AAED,SAAOb,KAAP;AACA;AAED;;;;;;;;;AAQA,OAAO,IAAMc,YAAY,GAAG,SAAfA,YAAe,GAA0B;AAAA,MAAxBd,KAAwB,uEAAhB,EAAgB;AAAA,MAAZG,MAAY;;AACrD,UAASA,MAAM,CAACC,IAAhB;AACC,SAAK,kBAAL;AACC,+BACIJ,KADJ,sBAEGG,MAAM,CAACY,OAFV,EAEqBZ,MAAM,CAACa,MAF5B;AAFF;;AAOA,SAAOhB,KAAP;AACA,CATM;AAWP,eAAeF,eAAe,CAAE;AAC/BC,EAAAA,kBAAkB,EAAlBA,kBAD+B;AAE/BO,EAAAA,eAAe,EAAfA,eAF+B;AAG/BO,EAAAA,aAAa,EAAbA,aAH+B;AAI/BC,EAAAA,YAAY,EAAZA;AAJ+B,CAAF,CAA9B","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Reducer returning an array of downloadable blocks.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const downloadableBlocks = (\n\tstate = {\n\t\tresults: {},\n\t\tisRequestingDownloadableBlocks: true,\n\t},\n\taction\n) => {\n\tswitch ( action.type ) {\n\t\tcase 'FETCH_DOWNLOADABLE_BLOCKS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisRequestingDownloadableBlocks: true,\n\t\t\t};\n\t\tcase 'RECEIVE_DOWNLOADABLE_BLOCKS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tresults: {\n\t\t\t\t\t...state.results,\n\t\t\t\t\t[ action.filterValue ]: action.downloadableBlocks,\n\t\t\t\t},\n\t\t\t\tisRequestingDownloadableBlocks: false,\n\t\t\t};\n\t}\n\treturn state;\n};\n\n/**\n * Reducer managing the installation and deletion of blocks.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const blockManagement = (\n\tstate = {\n\t\tinstalledBlockTypes: [],\n\t\tisInstalling: false,\n\t},\n\taction\n) => {\n\tswitch ( action.type ) {\n\t\tcase 'ADD_INSTALLED_BLOCK_TYPE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinstalledBlockTypes: [\n\t\t\t\t\t...state.installedBlockTypes,\n\t\t\t\t\taction.item,\n\t\t\t\t],\n\t\t\t};\n\t\tcase 'REMOVE_INSTALLED_BLOCK_TYPE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinstalledBlockTypes: state.installedBlockTypes.filter(\n\t\t\t\t\t( blockType ) => blockType.name !== action.item.name\n\t\t\t\t),\n\t\t\t};\n\t\tcase 'SET_INSTALLING_BLOCK':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisInstalling: action.isInstalling,\n\t\t\t};\n\t}\n\treturn state;\n};\n\n/**\n * Reducer returning an array of downloadable blocks.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function hasPermission( state = true, action ) {\n\tif ( action.type === 'SET_INSTALL_BLOCKS_PERMISSION' ) {\n\t\treturn action.hasPermission;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning an object of error notices.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const errorNotices = ( state = {}, action ) => {\n\tswitch ( action.type ) {\n\t\tcase 'SET_ERROR_NOTICE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.blockId ]: action.notice,\n\t\t\t};\n\t}\n\treturn state;\n};\n\nexport default combineReducers( {\n\tdownloadableBlocks,\n\tblockManagement,\n\thasPermission,\n\terrorNotices,\n} );\n"]}
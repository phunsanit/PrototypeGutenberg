{"version":3,"sources":["@wordpress/edit-post/src/components/header/mode-switcher/index.js"],"names":["__","MenuItemsChoice","MenuGroup","useSelect","useDispatch","MODES","value","label","ModeSwitcher","select","shortcut","getShortcutRepresentation","isRichEditingEnabled","getEditorSettings","richEditingEnabled","isCodeEditingEnabled","codeEditingEnabled","mode","getEditorMode","switchEditorMode","choices","map","choice"],"mappings":";;;;;;;AAAA;;;AAGA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,uBAA3C;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AAEA;;;;;;AAKA,IAAMC,KAAK,GAAG,CACb;AACCC,EAAAA,KAAK,EAAE,QADR;AAECC,EAAAA,KAAK,EAAEP,EAAE,CAAE,eAAF;AAFV,CADa,EAKb;AACCM,EAAAA,KAAK,EAAE,MADR;AAECC,EAAAA,KAAK,EAAEP,EAAE,CAAE,aAAF;AAFV,CALa,CAAd;;AAWA,SAASQ,YAAT,GAAwB;AAAA,mBAMnBL,SAAS,CACZ,UAAEM,MAAF;AAAA,WAAgB;AACfC,MAAAA,QAAQ,EAAED,MAAM,CACf,yBADe,CAAN,CAERE,yBAFQ,CAEmB,4BAFnB,CADK;AAIfC,MAAAA,oBAAoB,EAAEH,MAAM,CAAE,aAAF,CAAN,CAAwBI,iBAAxB,GACpBC,kBALa;AAMfC,MAAAA,oBAAoB,EAAEN,MAAM,CAAE,aAAF,CAAN,CAAwBI,iBAAxB,GACpBG,kBAPa;AAQfC,MAAAA,IAAI,EAAER,MAAM,CAAE,gBAAF,CAAN,CAA2BS,aAA3B;AARS,KAAhB;AAAA,GADY,EAWZ,EAXY,CANU;AAAA,MAEtBR,QAFsB,cAEtBA,QAFsB;AAAA,MAGtBE,oBAHsB,cAGtBA,oBAHsB;AAAA,MAItBG,oBAJsB,cAItBA,oBAJsB;AAAA,MAKtBE,IALsB,cAKtBA,IALsB;;AAAA,qBAmBMb,WAAW,CAAE,gBAAF,CAnBjB;AAAA,MAmBfe,gBAnBe,gBAmBfA,gBAnBe;;AAqBvB,MAAK,CAAEP,oBAAF,IAA0B,CAAEG,oBAAjC,EAAwD;AACvD,WAAO,IAAP;AACA;;AAED,MAAMK,OAAO,GAAGf,KAAK,CAACgB,GAAN,CAAW,UAAEC,MAAF,EAAc;AACxC,QAAKA,MAAM,CAAChB,KAAP,KAAiBW,IAAtB,EAA6B;AAC5B,+BAAYK,MAAZ;AAAoBZ,QAAAA,QAAQ,EAARA;AAApB;AACA;;AACD,WAAOY,MAAP;AACA,GALe,CAAhB;AAOA,SACC,cAAC,SAAD;AAAW,IAAA,KAAK,EAAGtB,EAAE,CAAE,QAAF;AAArB,KACC,cAAC,eAAD;AACC,IAAA,OAAO,EAAGoB,OADX;AAEC,IAAA,KAAK,EAAGH,IAFT;AAGC,IAAA,QAAQ,EAAGE;AAHZ,IADD,CADD;AASA;;AAED,eAAeX,YAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItemsChoice, MenuGroup } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\n/**\n * Set of available mode options.\n *\n * @type {Array}\n */\nconst MODES = [\n\t{\n\t\tvalue: 'visual',\n\t\tlabel: __( 'Visual editor' ),\n\t},\n\t{\n\t\tvalue: 'text',\n\t\tlabel: __( 'Code editor' ),\n\t},\n];\n\nfunction ModeSwitcher() {\n\tconst {\n\t\tshortcut,\n\t\tisRichEditingEnabled,\n\t\tisCodeEditingEnabled,\n\t\tmode,\n\t} = useSelect(\n\t\t( select ) => ( {\n\t\t\tshortcut: select(\n\t\t\t\t'core/keyboard-shortcuts'\n\t\t\t).getShortcutRepresentation( 'core/edit-post/toggle-mode' ),\n\t\t\tisRichEditingEnabled: select( 'core/editor' ).getEditorSettings()\n\t\t\t\t.richEditingEnabled,\n\t\t\tisCodeEditingEnabled: select( 'core/editor' ).getEditorSettings()\n\t\t\t\t.codeEditingEnabled,\n\t\t\tmode: select( 'core/edit-post' ).getEditorMode(),\n\t\t} ),\n\t\t[]\n\t);\n\tconst { switchEditorMode } = useDispatch( 'core/edit-post' );\n\n\tif ( ! isRichEditingEnabled || ! isCodeEditingEnabled ) {\n\t\treturn null;\n\t}\n\n\tconst choices = MODES.map( ( choice ) => {\n\t\tif ( choice.value !== mode ) {\n\t\t\treturn { ...choice, shortcut };\n\t\t}\n\t\treturn choice;\n\t} );\n\n\treturn (\n\t\t<MenuGroup label={ __( 'Editor' ) }>\n\t\t\t<MenuItemsChoice\n\t\t\t\tchoices={ choices }\n\t\t\t\tvalue={ mode }\n\t\t\t\tonSelect={ switchEditorMode }\n\t\t\t/>\n\t\t</MenuGroup>\n\t);\n}\n\nexport default ModeSwitcher;\n"]}
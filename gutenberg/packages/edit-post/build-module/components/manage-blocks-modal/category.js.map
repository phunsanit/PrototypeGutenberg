{"version":3,"sources":["@wordpress/edit-post/src/components/manage-blocks-modal/category.js"],"names":["includes","map","without","useContext","useMemo","withSelect","withDispatch","compose","withInstanceId","CheckboxControl","BlockTypesChecklist","EditPostSettings","BlockManagerCategory","instanceId","title","blockTypes","hiddenBlockTypes","toggleVisible","toggleAllVisible","settings","allowedBlockTypes","filteredBlockTypes","filter","name","length","checkedBlockNames","titleId","isAllChecked","ariaChecked","select","getPreference","dispatch","ownProps","showBlockTypes","hideBlockTypes","blockName","nextIsChecked","blockNames"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { includes, map, without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useContext, useMemo } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose, withInstanceId } from '@wordpress/compose';\nimport { CheckboxControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesChecklist from './checklist';\nimport EditPostSettings from '../edit-post-settings';\n\nfunction BlockManagerCategory( {\n\tinstanceId,\n\ttitle,\n\tblockTypes,\n\thiddenBlockTypes,\n\ttoggleVisible,\n\ttoggleAllVisible,\n} ) {\n\tconst settings = useContext( EditPostSettings );\n\tconst { allowedBlockTypes } = settings;\n\tconst filteredBlockTypes = useMemo( () => {\n\t\tif ( allowedBlockTypes === true ) {\n\t\t\treturn blockTypes;\n\t\t}\n\t\treturn blockTypes.filter( ( { name } ) => {\n\t\t\treturn includes( allowedBlockTypes || [], name );\n\t\t} );\n\t}, [ allowedBlockTypes, blockTypes ] );\n\n\tif ( ! filteredBlockTypes.length ) {\n\t\treturn null;\n\t}\n\n\tconst checkedBlockNames = without(\n\t\tmap( filteredBlockTypes, 'name' ),\n\t\t...hiddenBlockTypes\n\t);\n\n\tconst titleId =\n\t\t'edit-post-manage-blocks-modal__category-title-' + instanceId;\n\n\tconst isAllChecked = checkedBlockNames.length === filteredBlockTypes.length;\n\n\tlet ariaChecked;\n\tif ( isAllChecked ) {\n\t\tariaChecked = 'true';\n\t} else if ( checkedBlockNames.length > 0 ) {\n\t\tariaChecked = 'mixed';\n\t} else {\n\t\tariaChecked = 'false';\n\t}\n\n\treturn (\n\t\t<div\n\t\t\trole=\"group\"\n\t\t\taria-labelledby={ titleId }\n\t\t\tclassName=\"edit-post-manage-blocks-modal__category\"\n\t\t>\n\t\t\t<CheckboxControl\n\t\t\t\tchecked={ isAllChecked }\n\t\t\t\tonChange={ toggleAllVisible }\n\t\t\t\tclassName=\"edit-post-manage-blocks-modal__category-title\"\n\t\t\t\taria-checked={ ariaChecked }\n\t\t\t\tlabel={ <span id={ titleId }>{ title }</span> }\n\t\t\t/>\n\t\t\t<BlockTypesChecklist\n\t\t\t\tblockTypes={ filteredBlockTypes }\n\t\t\t\tvalue={ checkedBlockNames }\n\t\t\t\tonItemChange={ toggleVisible }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default compose( [\n\twithInstanceId,\n\twithSelect( ( select ) => {\n\t\tconst { getPreference } = select( 'core/edit-post' );\n\n\t\treturn {\n\t\t\thiddenBlockTypes: getPreference( 'hiddenBlockTypes' ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst { showBlockTypes, hideBlockTypes } = dispatch( 'core/edit-post' );\n\n\t\treturn {\n\t\t\ttoggleVisible( blockName, nextIsChecked ) {\n\t\t\t\tif ( nextIsChecked ) {\n\t\t\t\t\tshowBlockTypes( blockName );\n\t\t\t\t} else {\n\t\t\t\t\thideBlockTypes( blockName );\n\t\t\t\t}\n\t\t\t},\n\t\t\ttoggleAllVisible( nextIsChecked ) {\n\t\t\t\tconst blockNames = map( ownProps.blockTypes, 'name' );\n\t\t\t\tif ( nextIsChecked ) {\n\t\t\t\t\tshowBlockTypes( blockNames );\n\t\t\t\t} else {\n\t\t\t\t\thideBlockTypes( blockNames );\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockManagerCategory );\n"]}
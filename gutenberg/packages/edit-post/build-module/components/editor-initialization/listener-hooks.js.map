{"version":3,"sources":["@wordpress/edit-post/src/components/editor-initialization/listener-hooks.js"],"names":["useSelect","useDispatch","useEffect","useRef","STORE_KEY","VIEW_AS_LINK_SELECTOR","VIEW_AS_PREVIEW_LINK_SELECTOR","useBlockSelectionListener","postId","select","hasBlockSelection","getBlockSelectionStart","isEditorSidebarOpened","openGeneralSidebar","useUpdatePostLinkListener","newPermalink","getCurrentPost","link","nodeToUpdate","current","document","querySelector","setAttribute"],"mappings":"AAAA;;;AAGA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,oBAAlC;AAEA;;;;AAGA,SACCC,SADD,EAECC,qBAFD,EAGCC,6BAHD,QAIO,uBAJP;AAMA;;;;;;;AAMA,OAAO,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAEC,MAAF,EAAc;AAAA,mBACDR,SAAS,CAC7D,UAAES,MAAF;AAAA,WAAgB;AACfC,MAAAA,iBAAiB,EAAE,CAAC,CAAED,MAAM,CAC3B,mBAD2B,CAAN,CAEpBE,sBAFoB,EADP;AAIfC,MAAAA,qBAAqB,EAAEH,MAAM,CAAEL,SAAF,CAAN,CAAoBQ,qBAApB;AAJR,KAAhB;AAAA,GAD6D,EAO7D,CAAEJ,MAAF,CAP6D,CADR;AAAA,MAC9CE,iBAD8C,cAC9CA,iBAD8C;AAAA,MAC3BE,qBAD2B,cAC3BA,qBAD2B;;AAAA,qBAWvBX,WAAW,CAAEG,SAAF,CAXY;AAAA,MAW9CS,kBAX8C,gBAW9CA,kBAX8C;;AAatDX,EAAAA,SAAS,CAAE,YAAM;AAChB,QAAK,CAAEU,qBAAP,EAA+B;AAC9B;AACA;;AACD,QAAKF,iBAAL,EAAyB;AACxBG,MAAAA,kBAAkB,CAAE,iBAAF,CAAlB;AACA,KAFD,MAEO;AACNA,MAAAA,kBAAkB,CAAE,oBAAF,CAAlB;AACA;AACD,GATQ,EASN,CAAEH,iBAAF,EAAqBE,qBAArB,CATM,CAAT;AAUA,CAvBM;AAyBP;;;;;;;AAMA,OAAO,IAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAEN,MAAF,EAAc;AAAA,oBAC7BR,SAAS,CACjC,UAAES,MAAF;AAAA,WAAgB;AACfM,MAAAA,YAAY,EAAEN,MAAM,CAAE,aAAF,CAAN,CAAwBO,cAAxB,GAAyCC;AADxC,KAAhB;AAAA,GADiC,EAIjC,CAAET,MAAF,CAJiC,CADoB;AAAA,MAC9CO,YAD8C,eAC9CA,YAD8C;;AAOtD,MAAMG,YAAY,GAAGf,MAAM,EAA3B;AAEAD,EAAAA,SAAS,CAAE,YAAM;AAChBgB,IAAAA,YAAY,CAACC,OAAb,GACCC,QAAQ,CAACC,aAAT,CAAwBf,6BAAxB,KACAc,QAAQ,CAACC,aAAT,CAAwBhB,qBAAxB,CAFD;AAGA,GAJQ,EAIN,CAAEG,MAAF,CAJM,CAAT;AAMAN,EAAAA,SAAS,CAAE,YAAM;AAChB,QAAK,CAAEa,YAAF,IAAkB,CAAEG,YAAY,CAACC,OAAtC,EAAgD;AAC/C;AACA;;AACDD,IAAAA,YAAY,CAACC,OAAb,CAAqBG,YAArB,CAAmC,MAAnC,EAA2CP,YAA3C;AACA,GALQ,EAKN,CAAEA,YAAF,CALM,CAAT;AAMA,CArBM","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport {\n\tSTORE_KEY,\n\tVIEW_AS_LINK_SELECTOR,\n\tVIEW_AS_PREVIEW_LINK_SELECTOR,\n} from '../../store/constants';\n\n/**\n * This listener hook monitors for block selection and triggers the appropriate\n * sidebar state.\n *\n * @param {number} postId  The current post id.\n */\nexport const useBlockSelectionListener = ( postId ) => {\n\tconst { hasBlockSelection, isEditorSidebarOpened } = useSelect(\n\t\t( select ) => ( {\n\t\t\thasBlockSelection: !! select(\n\t\t\t\t'core/block-editor'\n\t\t\t).getBlockSelectionStart(),\n\t\t\tisEditorSidebarOpened: select( STORE_KEY ).isEditorSidebarOpened(),\n\t\t} ),\n\t\t[ postId ]\n\t);\n\n\tconst { openGeneralSidebar } = useDispatch( STORE_KEY );\n\n\tuseEffect( () => {\n\t\tif ( ! isEditorSidebarOpened ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( hasBlockSelection ) {\n\t\t\topenGeneralSidebar( 'edit-post/block' );\n\t\t} else {\n\t\t\topenGeneralSidebar( 'edit-post/document' );\n\t\t}\n\t}, [ hasBlockSelection, isEditorSidebarOpened ] );\n};\n\n/**\n * This listener hook monitors any change in permalink and updates the view\n * post link in the admin bar.\n *\n * @param {number} postId\n */\nexport const useUpdatePostLinkListener = ( postId ) => {\n\tconst { newPermalink } = useSelect(\n\t\t( select ) => ( {\n\t\t\tnewPermalink: select( 'core/editor' ).getCurrentPost().link,\n\t\t} ),\n\t\t[ postId ]\n\t);\n\tconst nodeToUpdate = useRef();\n\n\tuseEffect( () => {\n\t\tnodeToUpdate.current =\n\t\t\tdocument.querySelector( VIEW_AS_PREVIEW_LINK_SELECTOR ) ||\n\t\t\tdocument.querySelector( VIEW_AS_LINK_SELECTOR );\n\t}, [ postId ] );\n\n\tuseEffect( () => {\n\t\tif ( ! newPermalink || ! nodeToUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\t\tnodeToUpdate.current.setAttribute( 'href', newPermalink );\n\t}, [ newPermalink ] );\n};\n"]}
{"version":3,"sources":["@wordpress/edit-post/src/store/reducer.js"],"names":["createWithInitialState","initialState","reducer","state","action","preferences","combineReducers","PREFERENCES_DEFAULTS","panels","type","panelName","enabled","isOpen","opened","features","feature","editorMode","mode","hiddenBlockTypes","without","blockNames","preferredStyleVariations","blockName","blockStyle","localAutosaveInterval","interval","removedPanels","activeModal","name","publishSidebarActive","isSavingMetaBoxes","metaBoxLocations","metaBoxesPerLocation","deviceType","metaBoxes","isSaving","locations"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { flow, get, includes, omit, union, without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { PREFERENCES_DEFAULTS } from './defaults';\n\n/**\n * Higher-order reducer creator which provides the given initial state for the\n * original reducer.\n *\n * @param {*} initialState Initial state to provide to reducer.\n *\n * @return {Function} Higher-order reducer.\n */\nconst createWithInitialState = ( initialState ) => ( reducer ) => {\n\treturn ( state = initialState, action ) => reducer( state, action );\n};\n\n/**\n * Reducer returning the user preferences.\n *\n * @param {Object}  state                           Current state.\n * @param {string}  state.mode                      Current editor mode, either\n *                                                  \"visual\" or \"text\".\n * @param {boolean} state.isGeneralSidebarDismissed Whether general sidebar is\n *                                                  dismissed. False by default\n *                                                  or when closing general\n *                                                  sidebar, true when opening\n *                                                  sidebar.\n * @param {boolean} state.isSidebarOpened           Whether the sidebar is\n *                                                  opened or closed.\n * @param {Object}  state.panels                    The state of the different\n *                                                  sidebar panels.\n * @param {Object}  action                          Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const preferences = flow( [\n\tcombineReducers,\n\tcreateWithInitialState( PREFERENCES_DEFAULTS ),\n] )( {\n\tpanels( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'TOGGLE_PANEL_ENABLED': {\n\t\t\t\tconst { panelName } = action;\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ panelName ]: {\n\t\t\t\t\t\t...state[ panelName ],\n\t\t\t\t\t\tenabled: ! get( state, [ panelName, 'enabled' ], true ),\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcase 'TOGGLE_PANEL_OPENED': {\n\t\t\t\tconst { panelName } = action;\n\t\t\t\tconst isOpen =\n\t\t\t\t\tstate[ panelName ] === true ||\n\t\t\t\t\tget( state, [ panelName, 'opened' ], false );\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ panelName ]: {\n\t\t\t\t\t\t...state[ panelName ],\n\t\t\t\t\t\topened: ! isOpen,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t},\n\tfeatures( state, action ) {\n\t\tif ( action.type === 'TOGGLE_FEATURE' ) {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[ action.feature ]: ! state[ action.feature ],\n\t\t\t};\n\t\t}\n\n\t\treturn state;\n\t},\n\teditorMode( state, action ) {\n\t\tif ( action.type === 'SWITCH_MODE' ) {\n\t\t\treturn action.mode;\n\t\t}\n\n\t\treturn state;\n\t},\n\thiddenBlockTypes( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'SHOW_BLOCK_TYPES':\n\t\t\t\treturn without( state, ...action.blockNames );\n\n\t\t\tcase 'HIDE_BLOCK_TYPES':\n\t\t\t\treturn union( state, action.blockNames );\n\t\t}\n\n\t\treturn state;\n\t},\n\tpreferredStyleVariations( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'UPDATE_PREFERRED_STYLE_VARIATIONS': {\n\t\t\t\tif ( ! action.blockName ) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\tif ( ! action.blockStyle ) {\n\t\t\t\t\treturn omit( state, [ action.blockName ] );\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ action.blockName ]: action.blockStyle,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn state;\n\t},\n\tlocalAutosaveInterval( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'UPDATE_LOCAL_AUTOSAVE_INTERVAL':\n\t\t\t\treturn action.interval;\n\t\t}\n\n\t\treturn state;\n\t},\n} );\n\n/**\n * Reducer storing the list of all programmatically removed panels.\n *\n * @param {Array}  state  Current state.\n * @param {Object} action Action object.\n *\n * @return {Array} Updated state.\n */\nexport function removedPanels( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REMOVE_PANEL':\n\t\t\tif ( ! includes( state, action.panelName ) ) {\n\t\t\t\treturn [ ...state, action.panelName ];\n\t\t\t}\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer for storing the name of the open modal, or null if no modal is open.\n *\n * @param {Object} state  Previous state.\n * @param {Object} action Action object containing the `name` of the modal\n *\n * @return {Object} Updated state\n */\nexport function activeModal( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'OPEN_MODAL':\n\t\t\treturn action.name;\n\t\tcase 'CLOSE_MODAL':\n\t\t\treturn null;\n\t}\n\n\treturn state;\n}\n\nexport function publishSidebarActive( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'OPEN_PUBLISH_SIDEBAR':\n\t\t\treturn true;\n\t\tcase 'CLOSE_PUBLISH_SIDEBAR':\n\t\t\treturn false;\n\t\tcase 'TOGGLE_PUBLISH_SIDEBAR':\n\t\t\treturn ! state;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer keeping track of the meta boxes isSaving state.\n * A \"true\" value means the meta boxes saving request is in-flight.\n *\n *\n * @param {boolean}  state   Previous state.\n * @param {Object}   action  Action Object.\n *\n * @return {Object} Updated state.\n */\nexport function isSavingMetaBoxes( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REQUEST_META_BOX_UPDATES':\n\t\t\treturn true;\n\t\tcase 'META_BOX_UPDATES_SUCCESS':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n/**\n * Reducer keeping track of the meta boxes per location.\n *\n * @param {boolean}  state   Previous state.\n * @param {Object}   action  Action Object.\n *\n * @return {Object} Updated state.\n */\nexport function metaBoxLocations( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_META_BOXES_PER_LOCATIONS':\n\t\t\treturn action.metaBoxesPerLocation;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning the editing canvas device type.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function deviceType( state = 'Desktop', action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_PREVIEW_DEVICE_TYPE':\n\t\t\treturn action.deviceType;\n\t}\n\n\treturn state;\n}\n\nconst metaBoxes = combineReducers( {\n\tisSaving: isSavingMetaBoxes,\n\tlocations: metaBoxLocations,\n} );\n\nexport default combineReducers( {\n\tactiveModal,\n\tmetaBoxes,\n\tpreferences,\n\tpublishSidebarActive,\n\tremovedPanels,\n\tdeviceType,\n} );\n"]}
{"version":3,"sources":["@wordpress/edit-post/src/components/header/header-toolbar/index.native.js"],"names":["HeaderToolbar","hasRedo","hasUndo","redo","undo","showInserter","showKeyboardHideButton","getStylesFromColorScheme","onHideKeyboard","isRTL","scrollViewRef","scrollToStart","current","scrollTo","x","renderHistoryButtons","buttons","undoIcon","hint","redoIcon","reverse","styles","container","containerDark","scrollableContent","keyboardHideContainer","keyboardClose","select","hasEditorRedo","hasEditorUndo","getEditorMode","getEditorSettings","richEditingEnabled","isTextModeEnabled","getSettings","dispatch","clearSelectedBlock","togglePostTitleSelection","isLargeViewport","withPreferredColorScheme"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { useRef } from 'react';\nimport { ScrollView, View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { compose, withPreferredColorScheme } from '@wordpress/compose';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { withViewportMatch } from '@wordpress/viewport';\nimport { __ } from '@wordpress/i18n';\nimport { Inserter, BlockToolbar } from '@wordpress/block-editor';\nimport { Toolbar, ToolbarButton } from '@wordpress/components';\nimport {\n\tkeyboardClose,\n\tundo as undoIcon,\n\tredo as redoIcon,\n} from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\n\nfunction HeaderToolbar( {\n\thasRedo,\n\thasUndo,\n\tredo,\n\tundo,\n\tshowInserter,\n\tshowKeyboardHideButton,\n\tgetStylesFromColorScheme,\n\tonHideKeyboard,\n\tisRTL,\n} ) {\n\tconst scrollViewRef = useRef( null );\n\tconst scrollToStart = () => {\n\t\tscrollViewRef.current.scrollTo( { x: 0 } );\n\t};\n\n\tconst renderHistoryButtons = () => {\n\t\tconst buttons = [\n\t\t\t/* TODO: replace with EditorHistoryRedo and EditorHistoryUndo */\n\t\t\t<ToolbarButton\n\t\t\t\tkey=\"undoButton\"\n\t\t\t\ttitle={ __( 'Undo' ) }\n\t\t\t\ticon={ undoIcon }\n\t\t\t\tisDisabled={ ! hasUndo }\n\t\t\t\tonClick={ undo }\n\t\t\t\textraProps={ {\n\t\t\t\t\thint: __( 'Double tap to undo last change' ),\n\t\t\t\t} }\n\t\t\t/>,\n\t\t\t<ToolbarButton\n\t\t\t\tkey=\"redoButton\"\n\t\t\t\ttitle={ __( 'Redo' ) }\n\t\t\t\ticon={ redoIcon }\n\t\t\t\tisDisabled={ ! hasRedo }\n\t\t\t\tonClick={ redo }\n\t\t\t\textraProps={ {\n\t\t\t\t\thint: __( 'Double tap to redo last change' ),\n\t\t\t\t} }\n\t\t\t/>,\n\t\t];\n\n\t\treturn isRTL ? buttons.reverse() : buttons;\n\t};\n\n\treturn (\n\t\t<View\n\t\t\tstyle={ getStylesFromColorScheme(\n\t\t\t\tstyles.container,\n\t\t\t\tstyles.containerDark\n\t\t\t) }\n\t\t>\n\t\t\t<ScrollView\n\t\t\t\tref={ scrollViewRef }\n\t\t\t\tonContentSizeChange={ scrollToStart }\n\t\t\t\thorizontal={ true }\n\t\t\t\tshowsHorizontalScrollIndicator={ false }\n\t\t\t\tkeyboardShouldPersistTaps=\"always\"\n\t\t\t\talwaysBounceHorizontal={ false }\n\t\t\t\tcontentContainerStyle={ styles.scrollableContent }\n\t\t\t>\n\t\t\t\t<Inserter disabled={ ! showInserter } />\n\t\t\t\t{ renderHistoryButtons() }\n\t\t\t\t<BlockToolbar />\n\t\t\t</ScrollView>\n\t\t\t{ showKeyboardHideButton && (\n\t\t\t\t<Toolbar passedStyle={ styles.keyboardHideContainer }>\n\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\ttitle={ __( 'Hide keyboard' ) }\n\t\t\t\t\t\ticon={ keyboardClose }\n\t\t\t\t\t\tonClick={ onHideKeyboard }\n\t\t\t\t\t\textraProps={ {\n\t\t\t\t\t\t\thint: __( 'Tap to hide the keyboard' ),\n\t\t\t\t\t\t} }\n\t\t\t\t\t/>\n\t\t\t\t</Toolbar>\n\t\t\t) }\n\t\t</View>\n\t);\n}\n\nexport default compose( [\n\twithSelect( ( select ) => ( {\n\t\thasRedo: select( 'core/editor' ).hasEditorRedo(),\n\t\thasUndo: select( 'core/editor' ).hasEditorUndo(),\n\t\t// This setting (richEditingEnabled) should not live in the block editor's setting.\n\t\tshowInserter:\n\t\t\tselect( 'core/edit-post' ).getEditorMode() === 'visual' &&\n\t\t\tselect( 'core/editor' ).getEditorSettings().richEditingEnabled,\n\t\tisTextModeEnabled:\n\t\t\tselect( 'core/edit-post' ).getEditorMode() === 'text',\n\t\tisRTL: select( 'core/block-editor' ).getSettings().isRTL,\n\t} ) ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { clearSelectedBlock } = dispatch( 'core/block-editor' );\n\t\tconst { togglePostTitleSelection } = dispatch( 'core/editor' );\n\n\t\treturn {\n\t\t\tredo: dispatch( 'core/editor' ).redo,\n\t\t\tundo: dispatch( 'core/editor' ).undo,\n\t\t\tonHideKeyboard() {\n\t\t\t\tclearSelectedBlock();\n\t\t\t\ttogglePostTitleSelection( false );\n\t\t\t},\n\t\t};\n\t} ),\n\twithViewportMatch( { isLargeViewport: 'medium' } ),\n\twithPreferredColorScheme,\n] )( HeaderToolbar );\n"]}
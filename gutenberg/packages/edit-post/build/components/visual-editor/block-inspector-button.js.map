{"version":3,"sources":["@wordpress/edit-post/src/components/visual-editor/block-inspector-button.js"],"names":["BlockInspectorButton","onClick","noop","small","speak","select","shortcut","getShortcutRepresentation","areAdvancedSettingsOpened","getActiveGeneralSidebarName","openGeneralSidebar","closeGeneralSidebar","speakMessage","label"],"mappings":";;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAVA;;;;AAKA;;;AAOO,SAASA,oBAAT,OAIH;AAAA,0BAHHC,OAGG;AAAA,MAHHA,QAGG,6BAHOC,YAGP;AAAA,wBAFHC,KAEG;AAAA,MAFHA,KAEG,2BAFK,KAEL;AAAA,MADHC,KACG,QADHA,KACG;;AAAA,mBAC6C,qBAC/C,UAAEC,MAAF;AAAA,WAAgB;AACfC,MAAAA,QAAQ,EAAED,MAAM,CACf,yBADe,CAAN,CAERE,yBAFQ,CAEmB,+BAFnB,CADK;AAIfC,MAAAA,yBAAyB,EACxBH,MAAM,CAAE,gBAAF,CAAN,CAA2BI,2BAA3B,OACA;AANc,KAAhB;AAAA,GAD+C,EAS/C,EAT+C,CAD7C;AAAA,MACKH,QADL,cACKA,QADL;AAAA,MACeE,yBADf,cACeA,yBADf;;AAAA,qBAYiD,uBACnD,gBADmD,CAZjD;AAAA,MAYKE,kBAZL,gBAYKA,kBAZL;AAAA,MAYyBC,mBAZzB,gBAYyBA,mBAZzB;;AAgBH,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC1B,QAAKJ,yBAAL,EAAiC;AAChCJ,MAAAA,KAAK,CAAE,cAAI,uBAAJ,CAAF,CAAL;AACA,KAFD,MAEO;AACNA,MAAAA,KAAK,CACJ,cACC,4EADD,CADI,CAAL;AAKA;AACD,GAVD;;AAYA,MAAMS,KAAK,GAAGL,yBAAyB,GACpC,cAAI,qBAAJ,CADoC,GAEpC,cAAI,qBAAJ,CAFH;AAIA,SACC,4BAAC,oBAAD;AACC,IAAA,OAAO,EAAG,mBAAM;AACf,UAAKA,yBAAL,EAAiC;AAChCG,QAAAA,mBAAmB;AACnB,OAFD,MAEO;AACND,QAAAA,kBAAkB,CAAE,iBAAF,CAAlB;AACAE,QAAAA,YAAY;;AACZX,QAAAA,QAAO;AACP;AACD,KATF;AAUC,IAAA,QAAQ,EAAGK;AAVZ,KAYG,CAAEH,KAAF,IAAWU,KAZd,CADD;AAgBA;;eAEc,oCAAoBb,oBAApB,C","sourcesContent":["/**\n * External dependencies\n */\nimport { noop } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { MenuItem, withSpokenMessages } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\n\nexport function BlockInspectorButton( {\n\tonClick = noop,\n\tsmall = false,\n\tspeak,\n} ) {\n\tconst { shortcut, areAdvancedSettingsOpened } = useSelect(\n\t\t( select ) => ( {\n\t\t\tshortcut: select(\n\t\t\t\t'core/keyboard-shortcuts'\n\t\t\t).getShortcutRepresentation( 'core/edit-post/toggle-sidebar' ),\n\t\t\tareAdvancedSettingsOpened:\n\t\t\t\tselect( 'core/edit-post' ).getActiveGeneralSidebarName() ===\n\t\t\t\t'edit-post/block',\n\t\t} ),\n\t\t[]\n\t);\n\tconst { openGeneralSidebar, closeGeneralSidebar } = useDispatch(\n\t\t'core/edit-post'\n\t);\n\n\tconst speakMessage = () => {\n\t\tif ( areAdvancedSettingsOpened ) {\n\t\t\tspeak( __( 'Block settings closed' ) );\n\t\t} else {\n\t\t\tspeak(\n\t\t\t\t__(\n\t\t\t\t\t'Additional settings are now available in the Editor block settings sidebar'\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t};\n\n\tconst label = areAdvancedSettingsOpened\n\t\t? __( 'Hide Block Settings' )\n\t\t: __( 'Show Block Settings' );\n\n\treturn (\n\t\t<MenuItem\n\t\t\tonClick={ () => {\n\t\t\t\tif ( areAdvancedSettingsOpened ) {\n\t\t\t\t\tcloseGeneralSidebar();\n\t\t\t\t} else {\n\t\t\t\t\topenGeneralSidebar( 'edit-post/block' );\n\t\t\t\t\tspeakMessage();\n\t\t\t\t\tonClick();\n\t\t\t\t}\n\t\t\t} }\n\t\t\tshortcut={ shortcut }\n\t\t>\n\t\t\t{ ! small && label }\n\t\t</MenuItem>\n\t);\n}\n\nexport default withSpokenMessages( BlockInspectorButton );\n"]}
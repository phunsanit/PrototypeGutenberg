{"version":3,"sources":["@wordpress/edit-post/src/components/editor-initialization/listener-hooks.js"],"names":["useBlockSelectionListener","postId","select","hasBlockSelection","getBlockSelectionStart","isEditorSidebarOpened","STORE_KEY","openGeneralSidebar","useUpdatePostLinkListener","newPermalink","getCurrentPost","link","nodeToUpdate","current","document","querySelector","VIEW_AS_PREVIEW_LINK_SELECTOR","VIEW_AS_LINK_SELECTOR","setAttribute"],"mappings":";;;;;;;AAGA;;AACA;;AAKA;;AATA;;;;AAMA;;;;AASA;;;;;;AAMO,IAAMA,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAEC,MAAF,EAAc;AAAA,mBACD,qBACpD,UAAEC,MAAF;AAAA,WAAgB;AACfC,MAAAA,iBAAiB,EAAE,CAAC,CAAED,MAAM,CAC3B,mBAD2B,CAAN,CAEpBE,sBAFoB,EADP;AAIfC,MAAAA,qBAAqB,EAAEH,MAAM,CAAEI,oBAAF,CAAN,CAAoBD,qBAApB;AAJR,KAAhB;AAAA,GADoD,EAOpD,CAAEJ,MAAF,CAPoD,CADC;AAAA,MAC9CE,iBAD8C,cAC9CA,iBAD8C;AAAA,MAC3BE,qBAD2B,cAC3BA,qBAD2B;;AAAA,qBAWvB,uBAAaC,oBAAb,CAXuB;AAAA,MAW9CC,kBAX8C,gBAW9CA,kBAX8C;;AAatD,0BAAW,YAAM;AAChB,QAAK,CAAEF,qBAAP,EAA+B;AAC9B;AACA;;AACD,QAAKF,iBAAL,EAAyB;AACxBI,MAAAA,kBAAkB,CAAE,iBAAF,CAAlB;AACA,KAFD,MAEO;AACNA,MAAAA,kBAAkB,CAAE,oBAAF,CAAlB;AACA;AACD,GATD,EASG,CAAEJ,iBAAF,EAAqBE,qBAArB,CATH;AAUA,CAvBM;AAyBP;;;;;;;;;;AAMO,IAAMG,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAEP,MAAF,EAAc;AAAA,oBAC7B,qBACxB,UAAEC,MAAF;AAAA,WAAgB;AACfO,MAAAA,YAAY,EAAEP,MAAM,CAAE,aAAF,CAAN,CAAwBQ,cAAxB,GAAyCC;AADxC,KAAhB;AAAA,GADwB,EAIxB,CAAEV,MAAF,CAJwB,CAD6B;AAAA,MAC9CQ,YAD8C,eAC9CA,YAD8C;;AAOtD,MAAMG,YAAY,GAAG,sBAArB;AAEA,0BAAW,YAAM;AAChBA,IAAAA,YAAY,CAACC,OAAb,GACCC,QAAQ,CAACC,aAAT,CAAwBC,wCAAxB,KACAF,QAAQ,CAACC,aAAT,CAAwBE,gCAAxB,CAFD;AAGA,GAJD,EAIG,CAAEhB,MAAF,CAJH;AAMA,0BAAW,YAAM;AAChB,QAAK,CAAEQ,YAAF,IAAkB,CAAEG,YAAY,CAACC,OAAtC,EAAgD;AAC/C;AACA;;AACDD,IAAAA,YAAY,CAACC,OAAb,CAAqBK,YAArB,CAAmC,MAAnC,EAA2CT,YAA3C;AACA,GALD,EAKG,CAAEA,YAAF,CALH;AAMA,CArBM","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport {\n\tSTORE_KEY,\n\tVIEW_AS_LINK_SELECTOR,\n\tVIEW_AS_PREVIEW_LINK_SELECTOR,\n} from '../../store/constants';\n\n/**\n * This listener hook monitors for block selection and triggers the appropriate\n * sidebar state.\n *\n * @param {number} postId  The current post id.\n */\nexport const useBlockSelectionListener = ( postId ) => {\n\tconst { hasBlockSelection, isEditorSidebarOpened } = useSelect(\n\t\t( select ) => ( {\n\t\t\thasBlockSelection: !! select(\n\t\t\t\t'core/block-editor'\n\t\t\t).getBlockSelectionStart(),\n\t\t\tisEditorSidebarOpened: select( STORE_KEY ).isEditorSidebarOpened(),\n\t\t} ),\n\t\t[ postId ]\n\t);\n\n\tconst { openGeneralSidebar } = useDispatch( STORE_KEY );\n\n\tuseEffect( () => {\n\t\tif ( ! isEditorSidebarOpened ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( hasBlockSelection ) {\n\t\t\topenGeneralSidebar( 'edit-post/block' );\n\t\t} else {\n\t\t\topenGeneralSidebar( 'edit-post/document' );\n\t\t}\n\t}, [ hasBlockSelection, isEditorSidebarOpened ] );\n};\n\n/**\n * This listener hook monitors any change in permalink and updates the view\n * post link in the admin bar.\n *\n * @param {number} postId\n */\nexport const useUpdatePostLinkListener = ( postId ) => {\n\tconst { newPermalink } = useSelect(\n\t\t( select ) => ( {\n\t\t\tnewPermalink: select( 'core/editor' ).getCurrentPost().link,\n\t\t} ),\n\t\t[ postId ]\n\t);\n\tconst nodeToUpdate = useRef();\n\n\tuseEffect( () => {\n\t\tnodeToUpdate.current =\n\t\t\tdocument.querySelector( VIEW_AS_PREVIEW_LINK_SELECTOR ) ||\n\t\t\tdocument.querySelector( VIEW_AS_LINK_SELECTOR );\n\t}, [ postId ] );\n\n\tuseEffect( () => {\n\t\tif ( ! newPermalink || ! nodeToUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\t\tnodeToUpdate.current.setAttribute( 'href', newPermalink );\n\t}, [ newPermalink ] );\n};\n"]}
{"version":3,"sources":["@wordpress/edit-post/src/components/admin-notices/index.js"],"names":["NOTICE_CLASS_STATUSES","updated","error","getAdminNotices","Array","from","document","querySelectorAll","reverse","getNoticeHTML","element","fragments","childNodes","child","nodeType","window","Node","ELEMENT_NODE","value","nodeValue","trim","push","classList","contains","outerHTML","join","getNoticeStatus","className","hasOwnProperty","AdminNotices","convertNotices","createNotice","props","forEach","status","content","isDismissible","speak","__unstableHTML","parentNode","removeChild","Component","dispatch"],"mappings":";;;;;;;;;;;;;;;;;;;AAGA;;AACA;;;;;;;;;;;;AAEA;;;;;;AAMA,IAAMA,qBAAqB,GAAG;AAC7B,oBAAkB,SADW;AAE7BC,EAAAA,OAAO,EAAE,SAFoB;AAG7B,oBAAkB,SAHW;AAI7B,kBAAgB,OAJa;AAK7BC,EAAAA,KAAK,EAAE,OALsB;AAM7B,iBAAe;AANc,CAA9B;AASA;;;;;;AAKA,SAASC,eAAT,GAA2B;AAC1B;AACA;AACA,SAAOC,KAAK,CAACC,IAAN,CACNC,QAAQ,CAACC,gBAAT,CAA2B,2BAA3B,CADM,EAELC,OAFK,EAAP;AAGA;AAED;;;;;;;;;AAOA,SAASC,aAAT,CAAwBC,OAAxB,EAAkC;AACjC,MAAMC,SAAS,GAAG,EAAlB;;AADiC,6CAGZD,OAAO,CAACE,UAHI;AAAA;;AAAA;AAGjC,wDAA0C;AAAA,UAA9BC,KAA8B;;AACzC,UAAKA,KAAK,CAACC,QAAN,KAAmBC,MAAM,CAACC,IAAP,CAAYC,YAApC,EAAmD;AAClD,YAAMC,KAAK,GAAGL,KAAK,CAACM,SAAN,CAAgBC,IAAhB,EAAd;;AACA,YAAKF,KAAL,EAAa;AACZP,UAAAA,SAAS,CAACU,IAAV,CAAgBR,KAAK,CAACM,SAAtB;AACA;AACD,OALD,MAKO,IAAK,CAAEN,KAAK,CAACS,SAAN,CAAgBC,QAAhB,CAA0B,gBAA1B,CAAP,EAAsD;AAC5DZ,QAAAA,SAAS,CAACU,IAAV,CAAgBR,KAAK,CAACW,SAAtB;AACA;AACD;AAZgC;AAAA;AAAA;AAAA;AAAA;;AAcjC,SAAOb,SAAS,CAACc,IAAV,CAAgB,EAAhB,CAAP;AACA;AAED;;;;;;;;;;AAQA,SAASC,eAAT,CAA0BhB,OAA1B,EAAoC;AAAA,8CACVA,OAAO,CAACY,SADE;AAAA;;AAAA;AACnC,2DAA6C;AAAA,UAAjCK,SAAiC;;AAC5C,UAAK3B,qBAAqB,CAAC4B,cAAtB,CAAsCD,SAAtC,CAAL,EAAyD;AACxD,eAAO3B,qBAAqB,CAAE2B,SAAF,CAA5B;AACA;AACD;AALkC;AAAA;AAAA;AAAA;AAAA;AAMnC;;IAEYE,Y;;;;;;;;;;;;wCACQ;AACnB,WAAKC,cAAL;AACA;;;qCAEgB;AAAA,UACRC,YADQ,GACS,KAAKC,KADd,CACRD,YADQ;AAEhB5B,MAAAA,eAAe,GAAG8B,OAAlB,CAA2B,UAAEvB,OAAF,EAAe;AACzC;AACA,YAAMwB,MAAM,GAAGR,eAAe,CAAEhB,OAAF,CAA9B;AACA,YAAMyB,OAAO,GAAG1B,aAAa,CAAEC,OAAF,CAA7B;AACA,YAAM0B,aAAa,GAAG1B,OAAO,CAACY,SAAR,CAAkBC,QAAlB,CACrB,gBADqB,CAAtB;AAGAQ,QAAAA,YAAY,CAAEG,MAAF,EAAUC,OAAV,EAAmB;AAC9BE,UAAAA,KAAK,EAAE,KADuB;AAE9BC,UAAAA,cAAc,EAAE,IAFc;AAG9BF,UAAAA,aAAa,EAAbA;AAH8B,SAAnB,CAAZ,CAPyC,CAazC;;AACA1B,QAAAA,OAAO,CAAC6B,UAAR,CAAmBC,WAAnB,CAAgC9B,OAAhC;AACA,OAfD;AAgBA;;;6BAEQ;AACR,aAAO,IAAP;AACA;;;EA3BgC+B,kB;;;;eA8BnB,wBAAc,UAAEC,QAAF,EAAgB;AAAA,kBACnBA,QAAQ,CAAE,cAAF,CADW;AAAA,MACpCX,YADoC,aACpCA,YADoC;;AAG5C,SAAO;AAAEA,IAAAA,YAAY,EAAZA;AAAF,GAAP;AACA,CAJc,EAIVF,YAJU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withDispatch } from '@wordpress/data';\n\n/**\n * Mapping of server-supported notice class names to an equivalent notices\n * module status.\n *\n * @type {Map}\n */\nconst NOTICE_CLASS_STATUSES = {\n\t'notice-success': 'success',\n\tupdated: 'success',\n\t'notice-warning': 'warning',\n\t'notice-error': 'error',\n\terror: 'error',\n\t'notice-info': 'info',\n};\n\n/**\n * Returns an array of admin notice Elements.\n *\n * @return {Element[]} Admin notice elements.\n */\nfunction getAdminNotices() {\n\t// The order is reversed to match expectations of rendered order, since a\n\t// NoticesList is itself rendered in reverse order (newest to oldest).\n\treturn Array.from(\n\t\tdocument.querySelectorAll( '#wpbody-content > .notice' )\n\t).reverse();\n}\n\n/**\n * Given an admin notice Element, returns the relevant notice content HTML.\n *\n * @param {Element} element Admin notice element.\n *\n * @return {Element} Upgraded notice HTML.\n */\nfunction getNoticeHTML( element ) {\n\tconst fragments = [];\n\n\tfor ( const child of element.childNodes ) {\n\t\tif ( child.nodeType !== window.Node.ELEMENT_NODE ) {\n\t\t\tconst value = child.nodeValue.trim();\n\t\t\tif ( value ) {\n\t\t\t\tfragments.push( child.nodeValue );\n\t\t\t}\n\t\t} else if ( ! child.classList.contains( 'notice-dismiss' ) ) {\n\t\t\tfragments.push( child.outerHTML );\n\t\t}\n\t}\n\n\treturn fragments.join( '' );\n}\n\n/**\n * Given an admin notice Element, returns the upgraded status type, or\n * undefined if one cannot be determined (i.e. one is not assigned).\n *\n * @param {Element} element Admin notice element.\n *\n * @return {?string} Upgraded status type.\n */\nfunction getNoticeStatus( element ) {\n\tfor ( const className of element.classList ) {\n\t\tif ( NOTICE_CLASS_STATUSES.hasOwnProperty( className ) ) {\n\t\t\treturn NOTICE_CLASS_STATUSES[ className ];\n\t\t}\n\t}\n}\n\nexport class AdminNotices extends Component {\n\tcomponentDidMount() {\n\t\tthis.convertNotices();\n\t}\n\n\tconvertNotices() {\n\t\tconst { createNotice } = this.props;\n\t\tgetAdminNotices().forEach( ( element ) => {\n\t\t\t// Convert and create.\n\t\t\tconst status = getNoticeStatus( element );\n\t\t\tconst content = getNoticeHTML( element );\n\t\t\tconst isDismissible = element.classList.contains(\n\t\t\t\t'is-dismissible'\n\t\t\t);\n\t\t\tcreateNotice( status, content, {\n\t\t\t\tspeak: false,\n\t\t\t\t__unstableHTML: true,\n\t\t\t\tisDismissible,\n\t\t\t} );\n\n\t\t\t// Remove (now-redundant) admin notice element.\n\t\t\telement.parentNode.removeChild( element );\n\t\t} );\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nexport default withDispatch( ( dispatch ) => {\n\tconst { createNotice } = dispatch( 'core/notices' );\n\n\treturn { createNotice };\n} )( AdminNotices );\n"]}
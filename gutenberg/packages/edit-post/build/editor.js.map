{"version":3,"sources":["@wordpress/edit-post/src/editor.js"],"names":["Editor","arguments","getEditorSettings","maxSize","settings","hasFixedToolbar","focusMode","hiddenBlockTypes","blockTypes","preferredStyleVariations","__experimentalLocalAutosaveInterval","updatePreferredStyleVariations","__experimentalPreferredStyleVariations","value","onChange","defaultAllowedBlockTypes","allowedBlockTypes","without","props","post","postId","initialEdits","onError","editorSettings","preventEventDiscovery","Component","select","postType","isFeatureActive","getPreference","__experimentalGetPreviewDeviceType","getEntityRecord","getBlockTypes","dispatch"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memize from 'memize';\nimport { size, map, without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport {\n\tEditorProvider,\n\tErrorBoundary,\n\tPostLockedModal,\n} from '@wordpress/editor';\nimport { StrictMode, Component } from '@wordpress/element';\nimport {\n\tKeyboardShortcuts,\n\tSlotFillProvider,\n\tDropZoneProvider,\n} from '@wordpress/components';\nimport { compose } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport preventEventDiscovery from './prevent-event-discovery';\nimport Layout from './components/layout';\nimport EditorInitialization from './components/editor-initialization';\nimport EditPostSettings from './components/edit-post-settings';\n\nclass Editor extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\tthis.getEditorSettings = memize( this.getEditorSettings, {\n\t\t\tmaxSize: 1,\n\t\t} );\n\t}\n\n\tgetEditorSettings(\n\t\tsettings,\n\t\thasFixedToolbar,\n\t\tfocusMode,\n\t\thiddenBlockTypes,\n\t\tblockTypes,\n\t\tpreferredStyleVariations,\n\t\t__experimentalLocalAutosaveInterval,\n\t\tupdatePreferredStyleVariations\n\t) {\n\t\tsettings = {\n\t\t\t...settings,\n\t\t\t__experimentalPreferredStyleVariations: {\n\t\t\t\tvalue: preferredStyleVariations,\n\t\t\t\tonChange: updatePreferredStyleVariations,\n\t\t\t},\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\t__experimentalLocalAutosaveInterval,\n\t\t};\n\n\t\t// Omit hidden block types if exists and non-empty.\n\t\tif ( size( hiddenBlockTypes ) > 0 ) {\n\t\t\t// Defer to passed setting for `allowedBlockTypes` if provided as\n\t\t\t// anything other than `true` (where `true` is equivalent to allow\n\t\t\t// all block types).\n\t\t\tconst defaultAllowedBlockTypes =\n\t\t\t\ttrue === settings.allowedBlockTypes\n\t\t\t\t\t? map( blockTypes, 'name' )\n\t\t\t\t\t: settings.allowedBlockTypes || [];\n\n\t\t\tsettings.allowedBlockTypes = without(\n\t\t\t\tdefaultAllowedBlockTypes,\n\t\t\t\t...hiddenBlockTypes\n\t\t\t);\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\tpost,\n\t\t\tpostId,\n\t\t\tinitialEdits,\n\t\t\tonError,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t\tpreferredStyleVariations,\n\t\t\t__experimentalLocalAutosaveInterval,\n\t\t\tupdatePreferredStyleVariations,\n\t\t\t...props\n\t\t} = this.props;\n\n\t\tif ( ! post ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst editorSettings = this.getEditorSettings(\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t\tpreferredStyleVariations,\n\t\t\t__experimentalLocalAutosaveInterval,\n\t\t\tupdatePreferredStyleVariations\n\t\t);\n\n\t\treturn (\n\t\t\t<StrictMode>\n\t\t\t\t<EditPostSettings.Provider value={ settings }>\n\t\t\t\t\t<SlotFillProvider>\n\t\t\t\t\t\t<DropZoneProvider>\n\t\t\t\t\t\t\t<EditorProvider\n\t\t\t\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t\t\t\tpost={ post }\n\t\t\t\t\t\t\t\tinitialEdits={ initialEdits }\n\t\t\t\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ErrorBoundary onError={ onError }>\n\t\t\t\t\t\t\t\t\t<EditorInitialization postId={ postId } />\n\t\t\t\t\t\t\t\t\t<Layout />\n\t\t\t\t\t\t\t\t\t<KeyboardShortcuts\n\t\t\t\t\t\t\t\t\t\tshortcuts={ preventEventDiscovery }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t\t\t\t\t<PostLockedModal />\n\t\t\t\t\t\t\t</EditorProvider>\n\t\t\t\t\t\t</DropZoneProvider>\n\t\t\t\t\t</SlotFillProvider>\n\t\t\t\t</EditPostSettings.Provider>\n\t\t\t</StrictMode>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select, { postId, postType } ) => {\n\t\tconst {\n\t\t\tisFeatureActive,\n\t\t\tgetPreference,\n\t\t\t__experimentalGetPreviewDeviceType,\n\t\t} = select( 'core/edit-post' );\n\t\tconst { getEntityRecord } = select( 'core' );\n\t\tconst { getBlockTypes } = select( 'core/blocks' );\n\n\t\treturn {\n\t\t\thasFixedToolbar:\n\t\t\t\tisFeatureActive( 'fixedToolbar' ) ||\n\t\t\t\t__experimentalGetPreviewDeviceType() !== 'Desktop',\n\t\t\tfocusMode: isFeatureActive( 'focusMode' ),\n\t\t\tpost: getEntityRecord( 'postType', postType, postId ),\n\t\t\tpreferredStyleVariations: getPreference(\n\t\t\t\t'preferredStyleVariations'\n\t\t\t),\n\t\t\thiddenBlockTypes: getPreference( 'hiddenBlockTypes' ),\n\t\t\tblockTypes: getBlockTypes(),\n\t\t\t__experimentalLocalAutosaveInterval: getPreference(\n\t\t\t\t'localAutosaveInterval'\n\t\t\t),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { updatePreferredStyleVariations } = dispatch( 'core/edit-post' );\n\t\treturn {\n\t\t\tupdatePreferredStyleVariations,\n\t\t};\n\t} ),\n] )( Editor );\n"]}